<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20181.18.0706.1237                               -->
<workbook source-build='2018.1.3 (20181.18.0706.1237)' source-platform='mac' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
  </document-format-change-manifest>
  <repository-location id='BlockgroupEquityData' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Indicator2 Parameter' datatype='string' name='[Indicator1 Parameter (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Percent Food Stamps&quot;'>
        <calculation class='tableau' formula='&quot;Percent Food Stamps&quot;' />
        <members>
          <member value='&quot;Median Household Income&quot;' />
          <member value='&quot;Percent POC&quot;' />
          <member value='&quot;Percent Rent&quot;' />
          <member value='&quot;Percent Food Stamps&quot;' />
          <member value='&quot;Percent Four Year College&quot;' />
          <member value='&quot;Population&quot;' />
          <member value='&quot;Dist Downtown&quot;' />
          <member value='&quot;Percent Asian&quot;' />
          <member value='&quot;Percent Black&quot;' />
          <member value='&quot;Percent White&quot;' />
          <member value='&quot;Per Capita Income&quot;' />
          <member value='&quot;Percent Own&quot;' />
          <member value='&quot;Sales Price&quot;' />
          <member value='&quot;Sales Volume&quot;' />
        </members>
      </column>
      <column caption='Indicator0 Parameter' datatype='string' name='[Indicator2 Parameter (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Percent Food Stamps&quot;'>
        <calculation class='tableau' formula='&quot;Percent Food Stamps&quot;' />
        <members>
          <member value='&quot;Median Household Income&quot;' />
          <member value='&quot;Percent POC&quot;' />
          <member value='&quot;Percent Rent&quot;' />
          <member value='&quot;Percent Food Stamps&quot;' />
          <member value='&quot;Percent Four Year College&quot;' />
          <member value='&quot;Population&quot;' />
          <member value='&quot;Dist Downtown&quot;' />
          <member value='&quot;Percent Asian&quot;' />
          <member value='&quot;Percent Black&quot;' />
          <member value='&quot;Percent White&quot;' />
          <member value='&quot;Per Capita Income&quot;' />
          <member value='&quot;Percent Own&quot;' />
          <member value='&quot;Sales Price&quot;' />
          <member value='&quot;Sales Volume&quot;' />
        </members>
      </column>
      <column caption='Indicator1 Parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Percent POC&quot;'>
        <calculation class='tableau' formula='&quot;Percent POC&quot;' />
        <members>
          <member value='&quot;Median Household Income&quot;' />
          <member value='&quot;Percent POC&quot;' />
          <member value='&quot;Percent Rent&quot;' />
          <member value='&quot;Percent Food Stamps&quot;' />
          <member value='&quot;Percent Four Year College&quot;' />
          <member value='&quot;Population&quot;' />
          <member value='&quot;Dist Downtown&quot;' />
          <member value='&quot;Percent Asian&quot;' />
          <member value='&quot;Percent Black&quot;' />
          <member value='&quot;Percent White&quot;' />
          <member value='&quot;Per Capita Income&quot;' />
          <member value='&quot;Percent Own&quot;' />
          <member value='&quot;Sales Price&quot;' />
          <member value='&quot;Sales Volume&quot;' />
        </members>
      </column>
      <column caption='Geocode Parameter' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Block Group&quot;'>
        <calculation class='tableau' formula='&quot;Block Group&quot;' />
        <members>
          <member value='&quot;CITYWIDE&quot;' />
          <member value='&quot;Block Group&quot;' />
          <member value='&quot;Zip Code&quot;' />
          <member value='&quot;Council District&quot;' />
          <member value='&quot;Neighborhood Short&quot;' />
          <member value='&quot;Neighborhood Long&quot;' />
          <member value='&quot;Urban Village&quot;' />
        </members>
      </column>
      <column caption='Council District Parameter' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;ALL DISTRICTS&quot;'>
        <calculation class='tableau' formula='&quot;ALL DISTRICTS&quot;' />
        <aliases>
          <alias key='&quot;SCC1&quot;' value='D1' />
          <alias key='&quot;SCC2&quot;' value='D2' />
          <alias key='&quot;SCC3&quot;' value='D3' />
          <alias key='&quot;SCC4&quot;' value='D4' />
          <alias key='&quot;SCC5&quot;' value='D5' />
          <alias key='&quot;SCC6&quot;' value='D6' />
        </aliases>
        <members>
          <member value='&quot;ALL DISTRICTS&quot;' />
          <member alias='D1' value='&quot;SCC1&quot;' />
          <member alias='D2' value='&quot;SCC2&quot;' />
          <member alias='D3' value='&quot;SCC3&quot;' />
          <member alias='D4' value='&quot;SCC4&quot;' />
          <member alias='D5' value='&quot;SCC5&quot;' />
          <member alias='D6' value='&quot;SCC6&quot;' />
          <member value='&quot;SCC7&quot;' />
        </members>
      </column>
      <column caption='Year Parameter' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;ALL YEARS&quot;'>
        <calculation class='tableau' formula='&quot;ALL YEARS&quot;' />
        <members>
          <member value='&quot;2016&quot;' />
          <member value='&quot;2015&quot;' />
          <member value='&quot;2014&quot;' />
          <member value='&quot;2013&quot;' />
          <member value='&quot;ALL YEARS&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='Demographics' inline='true' name='federated.004akfr0ztvque1dvtnym0ol9g6i' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Blockgroup_geocode' name='textscan.1rrd7s50dtt46h1gwohi60m59j64'>
            <connection class='textscan' directory='/Users/xx/git-monolyst/census-demography/data' filename='Blockgroup_demographics.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='blkgrp10_shore' name='ogrdirect.00bf7tm03dmrtl19sv8xj1tof62l'>
            <connection class='ogrdirect' directory='/Users/xx/git-monolyst/census-demography/data/blkgrp10_shore' filename='blkgrp10_shore.shp' ogr-grid-shift-folder='/Applications/Tableau Desktop 2018.1.app/Contents/install/local/proj4' password='' server='' tablename='' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Blockgroup_demographics.csv].[Blockgroup]' />
              <expression op='[blkgrp10_shore.shp].[GEO_ID_GRP]' />
            </expression>
          </clause>
          <relation join='right' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[Blockgroup_demographics.csv].[Blockgroup]' />
                <expression op='[Blockgroup_geocode.csv].[location]' />
              </expression>
            </clause>
            <relation connection='textscan.1rrd7s50dtt46h1gwohi60m59j64' name='Blockgroup_demographics.csv' table='[Blockgroup_demographics#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='integer' name='Population' ordinal='0' />
                <column datatype='string' name='Year' ordinal='1' />
                <column datatype='string' name='Blockgroup' ordinal='2' />
                <column datatype='integer' name='Race Total' ordinal='3' />
                <column datatype='real' name='White alone' ordinal='4' />
                <column datatype='real' name='Black or African American alone' ordinal='5' />
                <column datatype='real' name='American Indian and Alaska Native alone' ordinal='6' />
                <column datatype='real' name='Asian alone' ordinal='7' />
                <column datatype='real' name='Native Hawaiian and Other Pacific Islander alone' ordinal='8' />
                <column datatype='integer' name='Some other race alone' ordinal='9' />
                <column datatype='real' name='Two or more races' ordinal='10' />
                <column datatype='integer' name='Two or more races: - Two races including Some other race' ordinal='11' />
                <column datatype='integer' name='Two or more races: - Two races excluding Some other race, and three or more races' ordinal='12' />
                <column datatype='integer' name='Edu Total' ordinal='13' />
                <column datatype='integer' name='No schooling completed' ordinal='14' />
                <column datatype='integer' name='Nursery school' ordinal='15' />
                <column datatype='integer' name='Kindergarten' ordinal='16' />
                <column datatype='integer' name='1st grade' ordinal='17' />
                <column datatype='integer' name='2nd grade' ordinal='18' />
                <column datatype='integer' name='3rd grade' ordinal='19' />
                <column datatype='integer' name='4th grade' ordinal='20' />
                <column datatype='integer' name='5th grade' ordinal='21' />
                <column datatype='integer' name='6th grade' ordinal='22' />
                <column datatype='integer' name='7th grade' ordinal='23' />
                <column datatype='integer' name='8th grade' ordinal='24' />
                <column datatype='integer' name='9th grade' ordinal='25' />
                <column datatype='integer' name='10th grade' ordinal='26' />
                <column datatype='integer' name='11th grade' ordinal='27' />
                <column datatype='integer' name='12th grade, no diploma' ordinal='28' />
                <column datatype='integer' name='Regular high school diploma' ordinal='29' />
                <column datatype='integer' name='GED or alternative credential' ordinal='30' />
                <column datatype='integer' name='Some college, less than 1 year' ordinal='31' />
                <column datatype='integer' name='Some college, 1 or more years, no degree' ordinal='32' />
                <column datatype='integer' name='Associate&apos;s degree' ordinal='33' />
                <column datatype='integer' name='Bachelor&apos;s degree' ordinal='34' />
                <column datatype='integer' name='Master&apos;s degree' ordinal='35' />
                <column datatype='integer' name='Professional school degree' ordinal='36' />
                <column datatype='integer' name='Doctorate degree' ordinal='37' />
                <column datatype='real' name='Med_Hh_Income' ordinal='38' />
                <column datatype='real' name='Pc_income' ordinal='39' />
                <column datatype='integer' name='Food Stamps Total' ordinal='40' />
                <column datatype='integer' name='Tenure Total' ordinal='41' />
                <column datatype='real' name='Own' ordinal='42' />
                <column datatype='real' name='Rent' ordinal='43' />
                <column datatype='real' name='Some other race' ordinal='44' />
                <column datatype='real' name='Food Stamps' ordinal='45' />
                <column datatype='real' name='Four Year College' ordinal='46' />
                <column datatype='real' name='Dist Downtown' ordinal='47' />
                <column datatype='real' name='blkgrp' ordinal='48' />
                <column datatype='real' name='AveSalePrice' ordinal='49' />
                <column datatype='real' name='ParcelCount' ordinal='50' />
              </columns>
            </relation>
            <relation connection='textscan.1rrd7s50dtt46h1gwohi60m59j64' name='Blockgroup_geocode.csv' table='[Blockgroup_geocode#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='string' name='location' ordinal='0' />
                <column datatype='string' name='neighborhood_short' ordinal='1' />
                <column datatype='string' name='neigbhorhood_long' ordinal='2' />
                <column datatype='string' name='council_district' ordinal='3' />
                <column datatype='integer' name='zipcode' ordinal='4' />
                <column datatype='string' name='urban_village' ordinal='5' />
                <column datatype='string' name='geographical_area' ordinal='6' />
                <column datatype='real' name='latitude' ordinal='7' />
                <column datatype='real' name='longitude' ordinal='8' />
              </columns>
            </relation>
          </relation>
          <relation connection='ogrdirect.00bf7tm03dmrtl19sv8xj1tof62l' name='blkgrp10_shore.shp' table='[blkgrp10_shore.shp]' type='table'>
            <columns>
              <column datatype='string' name='GEO_ID_GRP' ordinal='0' />
              <column datatype='integer' name='FEATURE_ID' ordinal='1' />
              <column datatype='string' name='BLKGRP_LBL' ordinal='2' />
              <column datatype='string' name='BLKGRP_STR' ordinal='3' />
              <column datatype='integer' name='BLKGRP_INT' ordinal='4' />
              <column datatype='string' name='GRPLABEL_F' ordinal='5' />
              <column datatype='string' name='GRPLABEL_C' ordinal='6' />
              <column datatype='string' name='GRPLABEL_T' ordinal='7' />
              <column datatype='string' name='TRACT_LBL' ordinal='8' />
              <column datatype='string' name='TRACT_STR' ordinal='9' />
              <column datatype='integer' name='TRACT_INT' ordinal='10' />
              <column datatype='real' name='TRACT_FLT' ordinal='11' />
              <column datatype='string' name='TRACT_DEL' ordinal='12' />
              <column datatype='string' name='TRTLABEL_F' ordinal='13' />
              <column datatype='string' name='TRTLABEL_C' ordinal='14' />
              <column datatype='string' name='TRTLABEL_T' ordinal='15' />
              <column datatype='string' name='COUNTY_STR' ordinal='16' />
              <column datatype='integer' name='COUNTY_INT' ordinal='17' />
              <column datatype='string' name='STATE_STR' ordinal='18' />
              <column datatype='integer' name='STATE_INT' ordinal='19' />
              <column datatype='string' name='LEVEL_1' ordinal='20' />
              <column datatype='string' name='LEVEL_2' ordinal='21' />
              <column datatype='string' name='LEVEL_3' ordinal='22' />
              <column datatype='string' name='LEVEL_4' ordinal='23' />
              <column datatype='real' name='GROUP_AREA' ordinal='24' />
              <column datatype='real' name='GROUP_PERI' ordinal='25' />
              <column datatype='real' name='Shape_area' ordinal='26' />
              <column datatype='real' name='Shape_len' ordinal='27' />
              <column datatype='spatial' name='Geometry' ordinal='28' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Blockgroup_demographics.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Blockgroup_demographics.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Blockgroup_demographics.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Blockgroup</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Blockgroup]</local-name>
            <parent-name>[Blockgroup_demographics.csv]</parent-name>
            <remote-alias>Blockgroup</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Race Total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Race Total]</local-name>
            <parent-name>[Blockgroup_demographics.csv]</parent-name>
            <remote-alias>Race Total</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>White alone</remote-name>
            <remote-type>5</remote-type>
            <local-name>[White alone]</local-name>
            <parent-name>[Blockgroup_demographics.csv]</parent-name>
            <remote-alias>White alone</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Black or African American alone</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Black or African American alone]</local-name>
            <parent-name>[Blockgroup_demographics.csv]</parent-name>
            <remote-alias>Black or African American alone</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>American Indian and Alaska Native alone</remote-name>
            <remote-type>5</remote-type>
            <local-name>[American Indian and Alaska Native alone]</local-name>
            <parent-name>[Blockgroup_demographics.csv]</parent-name>
            <remote-alias>American Indian and Alaska Native alone</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Asian alone</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Asian alone]</local-name>
            <parent-name>[Blockgroup_demographics.csv]</parent-name>
            <remote-alias>Asian alone</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Native Hawaiian and Other Pacific Islander alone</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Native Hawaiian and Other Pacific Islander alone]</local-name>
            <parent-name>[Blockgroup_demographics.csv]</parent-name>
            <remote-alias>Native Hawaiian and Other Pacific Islander alone</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Some other race alone</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Some other race alone]</local-name>
            <parent-name>[Blockgroup_demographics.csv]</parent-name>
            <remote-alias>Some other race alone</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Two or more races</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Two or more races]</local-name>
            <parent-name>[Blockgroup_demographics.csv]</parent-name>
            <remote-alias>Two or more races</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Two or more races: - Two races including Some other race</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Two or more races: - Two races including Some other race]</local-name>
            <parent-name>[Blockgroup_demographics.csv]</parent-name>
            <remote-alias>Two or more races: - Two races including Some other race</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Two or more races: - Two races excluding Some other race, and three or more races</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Two or more races: - Two races excluding Some other race, and three or more races]</local-name>
            <parent-name>[Blockgroup_demographics.csv]</parent-name>
            <remote-alias>Two or more races: - Two races excluding Some other race, and three or more races</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Edu Total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Edu Total]</local-name>
            <parent-name>[Blockgroup_demographics.csv]</parent-name>
            <remote-alias>Edu Total</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>No schooling completed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[No schooling completed]</local-name>
            <parent-name>[Blockgroup_demographics.csv]</parent-name>
            <remote-alias>No schooling completed</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Nursery school</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Nursery school]</local-name>
            <parent-name>[Blockgroup_demographics.csv]</parent-name>
            <remote-alias>Nursery school</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Kindergarten</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Kindergarten]</local-name>
            <parent-name>[Blockgroup_demographics.csv]</parent-name>
            <remote-alias>Kindergarten</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1st grade</remote-name>
            <remote-type>20</remote-type>
            <local-name>[1st grade]</local-name>
            <parent-name>[Blockgroup_demographics.csv]</parent-name>
            <remote-alias>1st grade</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2nd grade</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2nd grade]</local-name>
            <parent-name>[Blockgroup_demographics.csv]</parent-name>
            <remote-alias>2nd grade</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>3rd grade</remote-name>
            <remote-type>20</remote-type>
            <local-name>[3rd grade]</local-name>
            <parent-name>[Blockgroup_demographics.csv]</parent-name>
            <remote-alias>3rd grade</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>4th grade</remote-name>
            <remote-type>20</remote-type>
            <local-name>[4th grade]</local-name>
            <parent-name>[Blockgroup_demographics.csv]</parent-name>
            <remote-alias>4th grade</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>5th grade</remote-name>
            <remote-type>20</remote-type>
            <local-name>[5th grade]</local-name>
            <parent-name>[Blockgroup_demographics.csv]</parent-name>
            <remote-alias>5th grade</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>6th grade</remote-name>
            <remote-type>20</remote-type>
            <local-name>[6th grade]</local-name>
            <parent-name>[Blockgroup_demographics.csv]</parent-name>
            <remote-alias>6th grade</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>7th grade</remote-name>
            <remote-type>20</remote-type>
            <local-name>[7th grade]</local-name>
            <parent-name>[Blockgroup_demographics.csv]</parent-name>
            <remote-alias>7th grade</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>8th grade</remote-name>
            <remote-type>20</remote-type>
            <local-name>[8th grade]</local-name>
            <parent-name>[Blockgroup_demographics.csv]</parent-name>
            <remote-alias>8th grade</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>9th grade</remote-name>
            <remote-type>20</remote-type>
            <local-name>[9th grade]</local-name>
            <parent-name>[Blockgroup_demographics.csv]</parent-name>
            <remote-alias>9th grade</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>10th grade</remote-name>
            <remote-type>20</remote-type>
            <local-name>[10th grade]</local-name>
            <parent-name>[Blockgroup_demographics.csv]</parent-name>
            <remote-alias>10th grade</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>11th grade</remote-name>
            <remote-type>20</remote-type>
            <local-name>[11th grade]</local-name>
            <parent-name>[Blockgroup_demographics.csv]</parent-name>
            <remote-alias>11th grade</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>12th grade, no diploma</remote-name>
            <remote-type>20</remote-type>
            <local-name>[12th grade, no diploma]</local-name>
            <parent-name>[Blockgroup_demographics.csv]</parent-name>
            <remote-alias>12th grade, no diploma</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Regular high school diploma</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Regular high school diploma]</local-name>
            <parent-name>[Blockgroup_demographics.csv]</parent-name>
            <remote-alias>Regular high school diploma</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GED or alternative credential</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GED or alternative credential]</local-name>
            <parent-name>[Blockgroup_demographics.csv]</parent-name>
            <remote-alias>GED or alternative credential</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Some college, less than 1 year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Some college, less than 1 year]</local-name>
            <parent-name>[Blockgroup_demographics.csv]</parent-name>
            <remote-alias>Some college, less than 1 year</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Some college, 1 or more years, no degree</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Some college, 1 or more years, no degree]</local-name>
            <parent-name>[Blockgroup_demographics.csv]</parent-name>
            <remote-alias>Some college, 1 or more years, no degree</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Associate&apos;s degree</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Associate&apos;s degree]</local-name>
            <parent-name>[Blockgroup_demographics.csv]</parent-name>
            <remote-alias>Associate&apos;s degree</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Bachelor&apos;s degree</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Bachelor&apos;s degree]</local-name>
            <parent-name>[Blockgroup_demographics.csv]</parent-name>
            <remote-alias>Bachelor&apos;s degree</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Master&apos;s degree</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Master&apos;s degree]</local-name>
            <parent-name>[Blockgroup_demographics.csv]</parent-name>
            <remote-alias>Master&apos;s degree</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Professional school degree</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Professional school degree]</local-name>
            <parent-name>[Blockgroup_demographics.csv]</parent-name>
            <remote-alias>Professional school degree</remote-alias>
            <ordinal>36</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Doctorate degree</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Doctorate degree]</local-name>
            <parent-name>[Blockgroup_demographics.csv]</parent-name>
            <remote-alias>Doctorate degree</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Med_Hh_Income</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Med_Hh_Income]</local-name>
            <parent-name>[Blockgroup_demographics.csv]</parent-name>
            <remote-alias>Med_Hh_Income</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pc_income</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Pc_income]</local-name>
            <parent-name>[Blockgroup_demographics.csv]</parent-name>
            <remote-alias>Pc_income</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Food Stamps Total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Food Stamps Total]</local-name>
            <parent-name>[Blockgroup_demographics.csv]</parent-name>
            <remote-alias>Food Stamps Total</remote-alias>
            <ordinal>40</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tenure Total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tenure Total]</local-name>
            <parent-name>[Blockgroup_demographics.csv]</parent-name>
            <remote-alias>Tenure Total</remote-alias>
            <ordinal>41</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Own</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Own]</local-name>
            <parent-name>[Blockgroup_demographics.csv]</parent-name>
            <remote-alias>Own</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Rent]</local-name>
            <parent-name>[Blockgroup_demographics.csv]</parent-name>
            <remote-alias>Rent</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Some other race</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Some other race]</local-name>
            <parent-name>[Blockgroup_demographics.csv]</parent-name>
            <remote-alias>Some other race</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Food Stamps</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Food Stamps]</local-name>
            <parent-name>[Blockgroup_demographics.csv]</parent-name>
            <remote-alias>Food Stamps</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Four Year College</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Four Year College]</local-name>
            <parent-name>[Blockgroup_demographics.csv]</parent-name>
            <remote-alias>Four Year College</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dist Downtown</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Dist Downtown]</local-name>
            <parent-name>[Blockgroup_demographics.csv]</parent-name>
            <remote-alias>Dist Downtown</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>blkgrp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[blkgrp]</local-name>
            <parent-name>[Blockgroup_demographics.csv]</parent-name>
            <remote-alias>blkgrp</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AveSalePrice</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AveSalePrice]</local-name>
            <parent-name>[Blockgroup_demographics.csv]</parent-name>
            <remote-alias>AveSalePrice</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ParcelCount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ParcelCount]</local-name>
            <parent-name>[Blockgroup_demographics.csv]</parent-name>
            <remote-alias>ParcelCount</remote-alias>
            <ordinal>50</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Blockgroup_geocode.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Blockgroup_geocode.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>51</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neighborhood_short</remote-name>
            <remote-type>129</remote-type>
            <local-name>[neighborhood_short]</local-name>
            <parent-name>[Blockgroup_geocode.csv]</parent-name>
            <remote-alias>neighborhood_short</remote-alias>
            <ordinal>52</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>neigbhorhood_long</remote-name>
            <remote-type>129</remote-type>
            <local-name>[neigbhorhood_long]</local-name>
            <parent-name>[Blockgroup_geocode.csv]</parent-name>
            <remote-alias>neigbhorhood_long</remote-alias>
            <ordinal>53</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>council_district</remote-name>
            <remote-type>129</remote-type>
            <local-name>[council_district]</local-name>
            <parent-name>[Blockgroup_geocode.csv]</parent-name>
            <remote-alias>council_district</remote-alias>
            <ordinal>54</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zipcode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[zipcode]</local-name>
            <parent-name>[Blockgroup_geocode.csv]</parent-name>
            <remote-alias>zipcode</remote-alias>
            <ordinal>55</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>urban_village</remote-name>
            <remote-type>129</remote-type>
            <local-name>[urban_village]</local-name>
            <parent-name>[Blockgroup_geocode.csv]</parent-name>
            <remote-alias>urban_village</remote-alias>
            <ordinal>56</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geographical_area</remote-name>
            <remote-type>129</remote-type>
            <local-name>[geographical_area]</local-name>
            <parent-name>[Blockgroup_geocode.csv]</parent-name>
            <remote-alias>geographical_area</remote-alias>
            <ordinal>57</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[Blockgroup_geocode.csv]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>58</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[Blockgroup_geocode.csv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>59</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GEO_ID_GRP</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GEO_ID_GRP]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>GEO_ID_GRP</remote-alias>
            <ordinal>60</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FEATURE_ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[FEATURE_ID]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>FEATURE_ID</remote-alias>
            <ordinal>61</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BLKGRP_LBL</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BLKGRP_LBL]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>BLKGRP_LBL</remote-alias>
            <ordinal>62</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BLKGRP_STR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BLKGRP_STR]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>BLKGRP_STR</remote-alias>
            <ordinal>63</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BLKGRP_INT</remote-name>
            <remote-type>20</remote-type>
            <local-name>[BLKGRP_INT]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>BLKGRP_INT</remote-alias>
            <ordinal>64</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GRPLABEL_F</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GRPLABEL_F]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>GRPLABEL_F</remote-alias>
            <ordinal>65</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GRPLABEL_C</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GRPLABEL_C]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>GRPLABEL_C</remote-alias>
            <ordinal>66</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GRPLABEL_T</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GRPLABEL_T]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>GRPLABEL_T</remote-alias>
            <ordinal>67</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TRACT_LBL</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TRACT_LBL]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>TRACT_LBL</remote-alias>
            <ordinal>68</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TRACT_STR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TRACT_STR]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>TRACT_STR</remote-alias>
            <ordinal>69</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TRACT_INT</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TRACT_INT]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>TRACT_INT</remote-alias>
            <ordinal>70</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TRACT_FLT</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TRACT_FLT]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>TRACT_FLT</remote-alias>
            <ordinal>71</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TRACT_DEL</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TRACT_DEL]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>TRACT_DEL</remote-alias>
            <ordinal>72</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TRTLABEL_F</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TRTLABEL_F]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>TRTLABEL_F</remote-alias>
            <ordinal>73</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TRTLABEL_C</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TRTLABEL_C]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>TRTLABEL_C</remote-alias>
            <ordinal>74</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TRTLABEL_T</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TRTLABEL_T]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>TRTLABEL_T</remote-alias>
            <ordinal>75</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTY_STR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTY_STR]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>COUNTY_STR</remote-alias>
            <ordinal>76</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTY_INT</remote-name>
            <remote-type>20</remote-type>
            <local-name>[COUNTY_INT]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>COUNTY_INT</remote-alias>
            <ordinal>77</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATE_STR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STATE_STR]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>STATE_STR</remote-alias>
            <ordinal>78</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATE_INT</remote-name>
            <remote-type>20</remote-type>
            <local-name>[STATE_INT]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>STATE_INT</remote-alias>
            <ordinal>79</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LEVEL_1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LEVEL_1]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>LEVEL_1</remote-alias>
            <ordinal>80</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LEVEL_2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LEVEL_2]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>LEVEL_2</remote-alias>
            <ordinal>81</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LEVEL_3</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LEVEL_3]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>LEVEL_3</remote-alias>
            <ordinal>82</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LEVEL_4</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LEVEL_4]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>LEVEL_4</remote-alias>
            <ordinal>83</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GROUP_AREA</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GROUP_AREA]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>GROUP_AREA</remote-alias>
            <ordinal>84</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GROUP_PERI</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GROUP_PERI]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>GROUP_PERI</remote-alias>
            <ordinal>85</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shape_area</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shape_area]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>Shape_area</remote-alias>
            <ordinal>86</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shape_len</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shape_len]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>Shape_len</remote-alias>
            <ordinal>87</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='measure'>
            <remote-name>Geometry</remote-name>
            <remote-type>8</remote-type>
            <local-name>[Geometry]</local-name>
            <parent-name>[blkgrp10_shore.shp]</parent-name>
            <remote-alias>Geometry</remote-alias>
            <ordinal>88</ordinal>
            <local-type>spatial</local-type>
            <aggregation>Collect</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='10Th Grade' datatype='integer' name='[10th grade]' role='measure' type='quantitative' />
      <column caption='11Th Grade' datatype='integer' name='[11th grade]' role='measure' type='quantitative' />
      <column caption='12Th Grade, No Diploma' datatype='integer' name='[12th grade, no diploma]' role='measure' type='quantitative' />
      <column caption='1St Grade' datatype='integer' name='[1st grade]' role='measure' type='quantitative' />
      <column caption='2Nd Grade' datatype='integer' name='[2nd grade]' role='measure' type='quantitative' />
      <column caption='3Rd Grade' datatype='integer' name='[3rd grade]' role='measure' type='quantitative' />
      <column caption='4Th Grade' datatype='integer' name='[4th grade]' role='measure' type='quantitative' />
      <column caption='5Th Grade' datatype='integer' name='[5th grade]' role='measure' type='quantitative' />
      <column caption='6Th Grade' datatype='integer' name='[6th grade]' role='measure' type='quantitative' />
      <column caption='7Th Grade' datatype='integer' name='[7th grade]' role='measure' type='quantitative' />
      <column caption='8Th Grade' datatype='integer' name='[8th grade]' role='measure' type='quantitative' />
      <column caption='9Th Grade' datatype='integer' name='[9th grade]' role='measure' type='quantitative' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.004akfr0ztvque1dvtnym0ol9g6i].[med:Indicator 0 (copy):qk]&quot;' value='Median' />
          <alias key='&quot;[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator 1 (copy 2):qk]&quot;' value='Average' />
        </aliases>
      </column>
      <column caption='Blkgrp Int' datatype='integer' name='[BLKGRP_INT]' role='measure' type='quantitative' />
      <column caption='Blkgrp Lbl' datatype='string' name='[BLKGRP_LBL]' role='dimension' type='nominal' />
      <column caption='Blkgrp Str' datatype='string' name='[BLKGRP_STR]' role='dimension' type='nominal' />
      <column datatype='string' name='[Blockgroup]' role='dimension' type='nominal' />
      <column caption='County Int' datatype='integer' name='[COUNTY_INT]' role='measure' type='quantitative' />
      <column caption='County Str' datatype='string' name='[COUNTY_STR]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Compare Header' datatype='string' name='[Calculation_-7112872654698848246]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;Are &quot; + Replace([Parameters].[Parameter 1],&quot;Percent &quot;,&quot;&quot;) + &quot; and &quot; + REPLACE([Parameters].[Indicator1 Parameter (copy)],&quot;Percent &quot;,&quot;&quot; ) + &quot; correlated?&quot;' />
      </column>
      <column caption='Indicator1Text' datatype='string' name='[Calculation_-7112872654770298880]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;Dist Downtown&quot; THEN  STR(ROUND([Calculation_1115766813349150721],1)) + &quot; Miles&quot; // Distance&#13;&#10;&#13;&#10;ELSEIF [Calculation_1115766813349150721] &lt;= 1 THEN STR(ROUND([Calculation_1115766813349150721]*100,0)) + &quot;%&quot; // Percentage&#13;&#10;ELSEIF [Calculation_1115766813349150721] &lt;= 3000 THEN STR(ROUND([Calculation_1115766813349150721],0))  // Population&#13;&#10;ELSEIF [Calculation_1115766813349150721] &gt; 3000 THEN &quot;$&quot; +  STR(ROUND([Calculation_1115766813349150721]/1000)) + &quot;,000&quot; // Currency&#13;&#10;END' />
      </column>
      <column caption='Indicator 1' datatype='real' name='[Calculation_1115766813349150721]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;Percent POC&quot; THEN (1-AVG([White alone]))&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Percent Own&quot; THEN AVG([Own])&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Percent Rent&quot; THEN AVG([Rent]) &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Percent Asian&quot; THEN AVG([Asian alone]) &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Percent Black&quot; THEN AVG([Black or African American alone])&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Percent White&quot; THEN AVG([White alone]) &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Percent Food Stamps&quot; THEN AVG([Food Stamps]) &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Percent Four Year College&quot; THEN AVG([Four Year College]) &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Median Household Income&quot; THEN AVG([Med_Hh_Income]) &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Per Capita Income&quot; THEN AVG([Pc_income]) &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Population&quot; THEN AVG([Population])&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Dist Downtown&quot; THEN AVG([Dist Downtown])&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Sales Price&quot; THEN AVG([AveSalePrice])&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Sales Volume&quot; THEN AVG([ParcelCount])&#13;&#10;&#13;&#10;END' />
      </column>
      <column caption='Indicator 2' datatype='real' name='[Calculation_1115766813349253122]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Indicator1 Parameter (copy)] = &quot;Percent POC&quot; THEN (1-AVG([White alone]))&#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Percent Own&quot; THEN AVG([Own])&#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Percent Rent&quot; THEN AVG([Rent]) &#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Percent Asian&quot; THEN AVG([Asian alone]) &#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Percent Black&quot; THEN AVG([Black or African American alone])&#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Percent White&quot; THEN AVG([White alone]) &#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Percent Food Stamps&quot; THEN AVG([Food Stamps]) &#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Percent Four Year College&quot; THEN AVG([Four Year College]) &#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Median Household Income&quot; THEN AVG([Med_Hh_Income]) &#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Per Capita Income&quot; THEN AVG([Pc_income]) &#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Population&quot; THEN AVG([Population])&#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Dist Downtown&quot; THEN AVG([Dist Downtown])&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Sales Price&quot; THEN AVG([AveSalePrice])&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Sales Volume&quot; THEN AVG([ParcelCount])&#13;&#10;&#13;&#10;END' />
      </column>
      <column caption='Filter Council District' datatype='boolean' name='[Calculation_1115766813350019075]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[council_district] != &quot;None&quot;' />
      </column>
      <column caption='Indicator 1 Bin' datatype='real' name='[Calculation_1115766813361057796]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;Dist Downtown&quot; THEN ROUND([Calculation_1115766813349150721],1)&#13;&#10;&#13;&#10;ELSEIF [Calculation_1115766813349150721] &gt; 0.95 AND [Calculation_1115766813349150721] &lt;= 1.0 THEN .95&#13;&#10;ELSEIF [Calculation_1115766813349150721] &gt; 0.90 AND [Calculation_1115766813349150721] &lt;= .95 THEN .90&#13;&#10;ELSEIF [Calculation_1115766813349150721] &gt; 0.85 AND [Calculation_1115766813349150721] &lt;= .90 THEN .85&#13;&#10;ELSEIF [Calculation_1115766813349150721] &gt; 0.80 AND [Calculation_1115766813349150721] &lt;= .85 THEN .80&#13;&#10;ELSEIF [Calculation_1115766813349150721] &gt; 0.75 AND [Calculation_1115766813349150721] &lt;= .80 THEN .75&#13;&#10;ELSEIF [Calculation_1115766813349150721] &gt; 0.70 AND [Calculation_1115766813349150721] &lt;= .75 THEN .70&#13;&#10;ELSEIF [Calculation_1115766813349150721] &gt; 0.65 AND [Calculation_1115766813349150721] &lt;= .70 THEN .65&#13;&#10;ELSEIF [Calculation_1115766813349150721] &gt; 0.60 AND [Calculation_1115766813349150721] &lt;= .65 THEN .60&#13;&#10;ELSEIF [Calculation_1115766813349150721] &gt; 0.55 AND [Calculation_1115766813349150721] &lt;= .60 THEN .55&#13;&#10;ELSEIF [Calculation_1115766813349150721] &gt; 0.50 AND [Calculation_1115766813349150721] &lt;= .55 THEN .50&#13;&#10;ELSEIF [Calculation_1115766813349150721] &gt; 0.45 AND [Calculation_1115766813349150721] &lt;= .50 THEN .45&#13;&#10;ELSEIF [Calculation_1115766813349150721] &gt; 0.40 AND [Calculation_1115766813349150721] &lt;= .45 THEN .40&#13;&#10;ELSEIF [Calculation_1115766813349150721] &gt; 0.35 AND [Calculation_1115766813349150721] &lt;= .40 THEN .35&#13;&#10;ELSEIF [Calculation_1115766813349150721] &gt; 0.30 AND [Calculation_1115766813349150721] &lt;= .35 THEN .30&#13;&#10;ELSEIF [Calculation_1115766813349150721] &gt; 0.25 AND [Calculation_1115766813349150721] &lt;= .30 THEN .25&#13;&#10;ELSEIF [Calculation_1115766813349150721] &gt; 0.20 AND [Calculation_1115766813349150721] &lt;= .25 THEN .20&#13;&#10;ELSEIF [Calculation_1115766813349150721] &gt; 0.15 AND [Calculation_1115766813349150721] &lt;= .20 THEN .15&#13;&#10;ELSEIF [Calculation_1115766813349150721] &gt; 0.10 AND [Calculation_1115766813349150721] &lt;= .15 THEN .10&#13;&#10;ELSEIF [Calculation_1115766813349150721] &gt; 0.05 AND [Calculation_1115766813349150721] &lt;= .10 THEN .05&#13;&#10;ELSEIF [Calculation_1115766813349150721] &gt; 0.00 AND [Calculation_1115766813349150721] &lt;= .05 THEN .00&#13;&#10;ELSEIF [Calculation_1115766813349150721] &lt; 5000 THEN ROUND([Calculation_1115766813349150721]/100,0)*100&#13;&#10;ELSE ROUND([Calculation_1115766813349150721]/10000,0)*10000&#13;&#10;END' />
      </column>
      <column caption='Indicator 1 Label' datatype='string' name='[Calculation_1115766813401026565]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
      </column>
      <column caption='Filter Year Parameter' datatype='boolean' name='[Calculation_1115766813408124936]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Year] = [Parameters].[Parameter 4] OR [Parameters].[Parameter 4] = &quot;ALL YEARS&quot;' />
      </column>
      <column caption='Neighborhood' datatype='string' name='[Calculation_594756662492823552]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [neigbhorhood_long] = &quot;NO BROADER TERM&quot; THEN UPPER([neighborhood_short]) ELSE [neigbhorhood_long] END' />
      </column>
      <column caption='Compare Narrative' datatype='string' name='[Compare Header (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;Each dot in the chart above represents one census block group of around 1,500 people. &quot; + &#13;&#10;&quot;The trend line can provide a sense of whether there is a relationship between the two metrics. &quot; +&#13;&#10;&quot;A upward sloping line indicates that &quot; + [Parameters].[Parameter 1] + &quot; is correlated with &quot; + [Parameters].[Indicator1 Parameter (copy)] + &quot;. &quot; +&#13;&#10;&quot;An downward sloping line implies a negative correlation, so the higher the &quot; + [Parameters].[Parameter 1] + &quot;, the lower the &quot; + [Parameters].[Indicator1 Parameter (copy)] + &quot;.&quot;' />
      </column>
      <column caption='Feature Id' datatype='integer' name='[FEATURE_ID]' role='dimension' type='ordinal' />
      <column caption='Filter Council District Parameter' datatype='boolean' name='[Filter Year Parameter (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[council_district] = [Parameters].[Parameter 3] OR [Parameters].[Parameter 3] = &quot;ALL DISTRICTS&quot;' />
      </column>
      <column caption='Geo Id Grp' datatype='string' name='[GEO_ID_GRP]' role='dimension' type='nominal' />
      <column caption='Group Area' datatype='real' name='[GROUP_AREA]' role='measure' type='quantitative' />
      <column caption='Group Peri' datatype='real' name='[GROUP_PERI]' role='measure' type='quantitative' />
      <column caption='Grplabel C' datatype='string' name='[GRPLABEL_C]' role='dimension' type='nominal' />
      <column caption='Grplabel F' datatype='string' name='[GRPLABEL_F]' role='dimension' type='nominal' />
      <column caption='Grplabel T' datatype='string' name='[GRPLABEL_T]' role='dimension' type='nominal' />
      <column caption='Indicator 0 NonAgg' datatype='real' name='[Indicator 0 (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent POC&quot; THEN 1-[White alone]&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Own&quot; THEN [Own]&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Rent&quot; THEN [Rent]&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Asian&quot; THEN [Asian alone]&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Black&quot; THEN [Black or African American alone]&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent White&quot; THEN [White alone]&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Food Stamps&quot; THEN [Food Stamps]&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Four Year College&quot; THEN [Four Year College]&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Median Household Income&quot; THEN [Med_Hh_Income]&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Per Capita Income&quot; THEN [Pc_income]&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Population&quot; THEN [Population]&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Dist Downtown&quot; THEN [Dist Downtown]&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Sales Price&quot; THEN [AveSalePrice]&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Sales Volume&quot; THEN [ParcelCount]&#13;&#10;END' />
      </column>
      <column caption='Indicator 0' datatype='real' name='[Indicator 1 (copy 2)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent POC&quot; THEN (1-AVG([White alone]))&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Own&quot; THEN AVG([Own])&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Rent&quot; THEN AVG([Rent]) &#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Asian&quot; THEN AVG([Asian alone]) &#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Black&quot; THEN AVG([Black or African American alone])&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent White&quot; THEN AVG([White alone]) &#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Food Stamps&quot; THEN AVG([Food Stamps]) &#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Four Year College&quot; THEN AVG([Four Year College]) &#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Median Household Income&quot; THEN AVG([Med_Hh_Income]) &#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Per Capita Income&quot; THEN AVG([Pc_income]) &#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Population&quot; THEN AVG([Population]) &#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Dist Downtown&quot; THEN AVG([Dist Downtown])&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Sales Price&quot; THEN AVG([AveSalePrice])&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Sales Volume&quot; THEN AVG([ParcelCount])&#13;&#10;END' />
      </column>
      <column caption='Geocode' datatype='string' name='[Indicator 1 (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 2] = &quot;Council District&quot; THEN [council_district]&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &quot;Neighborhood Long&quot; THEN [neigbhorhood_long]&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &quot;Neighborhood Short&quot; THEN [neighborhood_short]&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &quot;Zip Code&quot; THEN [zipcode]&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &quot;Urban Village&quot; THEN [urban_village]&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &quot;Block Group&quot; THEN [location]&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &quot;CITYWIDE&quot; THEN &quot;Seattle&quot;&#13;&#10;ELSE &quot;None&quot; END' />
      </column>
      <column caption='Indicator 0 Bin' datatype='real' name='[Indicator 1 Bin (copy 2)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Indicator2 Parameter (copy)] = &quot;Dist Downtown&quot; THEN ROUND([Indicator 1 (copy 2)],1)&#13;&#10;&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &gt; 0.95 AND [Indicator 1 (copy 2)] &lt;= 1.0 THEN .95&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &gt; 0.90 AND [Indicator 1 (copy 2)] &lt;= .95 THEN .90&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &gt; 0.85 AND [Indicator 1 (copy 2)] &lt;= .90 THEN .85&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &gt; 0.80 AND [Indicator 1 (copy 2)] &lt;= .85 THEN .80&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &gt; 0.75 AND [Indicator 1 (copy 2)] &lt;= .80 THEN .75&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &gt; 0.70 AND [Indicator 1 (copy 2)] &lt;= .75 THEN .70&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &gt; 0.65 AND [Indicator 1 (copy 2)] &lt;= .70 THEN .65&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &gt; 0.60 AND [Indicator 1 (copy 2)] &lt;= .65 THEN .60&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &gt; 0.55 AND [Indicator 1 (copy 2)] &lt;= .60 THEN .55&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &gt; 0.50 AND [Indicator 1 (copy 2)] &lt;= .55 THEN .50&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &gt; 0.45 AND [Indicator 1 (copy 2)] &lt;= .50 THEN .45&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &gt; 0.40 AND [Indicator 1 (copy 2)] &lt;= .45 THEN .40&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &gt; 0.35 AND [Indicator 1 (copy 2)] &lt;= .40 THEN .35&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &gt; 0.30 AND [Indicator 1 (copy 2)] &lt;= .35 THEN .30&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &gt; 0.25 AND [Indicator 1 (copy 2)] &lt;= .30 THEN .25&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &gt; 0.20 AND [Indicator 1 (copy 2)] &lt;= .25 THEN .20&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &gt; 0.15 AND [Indicator 1 (copy 2)] &lt;= .20 THEN .15&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &gt; 0.10 AND [Indicator 1 (copy 2)] &lt;= .15 THEN .10&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &gt; 0.05 AND [Indicator 1 (copy 2)] &lt;= .10 THEN .05&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &gt; 0.00 AND [Indicator 1 (copy 2)] &lt;= .05 THEN .00&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &lt; 5000 THEN ROUND([Indicator 1 (copy 2)]/100,0)*100&#13;&#10;ELSE ROUND([Indicator 1 (copy 2)]/10000,0)*10000&#13;&#10;END' />
      </column>
      <column caption='Indicator 2 Bin' datatype='real' name='[Indicator 1 Bin (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Indicator1 Parameter (copy)] = &quot;Dist Downtown&quot; THEN ROUND([Calculation_1115766813349253122],1)&#13;&#10;&#13;&#10;ELSEIF [Calculation_1115766813349253122] &gt; 0.95 AND [Calculation_1115766813349253122] &lt;= 1.0 THEN .95&#13;&#10;ELSEIF [Calculation_1115766813349253122] &gt; 0.90 AND [Calculation_1115766813349253122] &lt;= .95 THEN .90&#13;&#10;ELSEIF [Calculation_1115766813349253122] &gt; 0.85 AND [Calculation_1115766813349253122] &lt;= .90 THEN .85&#13;&#10;ELSEIF [Calculation_1115766813349253122] &gt; 0.80 AND [Calculation_1115766813349253122] &lt;= .85 THEN .80&#13;&#10;ELSEIF [Calculation_1115766813349253122] &gt; 0.75 AND [Calculation_1115766813349253122] &lt;= .80 THEN .75&#13;&#10;ELSEIF [Calculation_1115766813349253122] &gt; 0.70 AND [Calculation_1115766813349253122] &lt;= .75 THEN .70&#13;&#10;ELSEIF [Calculation_1115766813349253122] &gt; 0.65 AND [Calculation_1115766813349253122] &lt;= .70 THEN .65&#13;&#10;ELSEIF [Calculation_1115766813349253122] &gt; 0.60 AND [Calculation_1115766813349253122] &lt;= .65 THEN .60&#13;&#10;ELSEIF [Calculation_1115766813349253122] &gt; 0.55 AND [Calculation_1115766813349253122] &lt;= .60 THEN .55&#13;&#10;ELSEIF [Calculation_1115766813349253122] &gt; 0.50 AND [Calculation_1115766813349253122] &lt;= .55 THEN .50&#13;&#10;ELSEIF [Calculation_1115766813349253122] &gt; 0.45 AND [Calculation_1115766813349253122] &lt;= .50 THEN .45&#13;&#10;ELSEIF [Calculation_1115766813349253122] &gt; 0.40 AND [Calculation_1115766813349253122] &lt;= .45 THEN .40&#13;&#10;ELSEIF [Calculation_1115766813349253122] &gt; 0.35 AND [Calculation_1115766813349253122] &lt;= .40 THEN .35&#13;&#10;ELSEIF [Calculation_1115766813349253122] &gt; 0.30 AND [Calculation_1115766813349253122] &lt;= .35 THEN .30&#13;&#10;ELSEIF [Calculation_1115766813349253122] &gt; 0.25 AND [Calculation_1115766813349253122] &lt;= .30 THEN .25&#13;&#10;ELSEIF [Calculation_1115766813349253122] &gt; 0.20 AND [Calculation_1115766813349253122] &lt;= .25 THEN .20&#13;&#10;ELSEIF [Calculation_1115766813349253122] &gt; 0.15 AND [Calculation_1115766813349253122] &lt;= .20 THEN .15&#13;&#10;ELSEIF [Calculation_1115766813349253122] &gt; 0.10 AND [Calculation_1115766813349253122] &lt;= .15 THEN .10&#13;&#10;ELSEIF [Calculation_1115766813349253122] &gt; 0.05 AND [Calculation_1115766813349253122] &lt;= .10 THEN .05&#13;&#10;ELSEIF [Calculation_1115766813349253122] &gt; 0.00 AND [Calculation_1115766813349253122] &lt;= .05 THEN .00&#13;&#10;ELSEIF [Calculation_1115766813349253122] &lt; 5000 THEN ROUND([Calculation_1115766813349253122]/100,0)*100&#13;&#10;ELSE ROUND([Calculation_1115766813349253122]/10000,0)*10000&#13;&#10;END' />
      </column>
      <column caption='Indicator 2 Label' datatype='string' name='[Indicator 1 Label (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Indicator1 Parameter (copy)]' />
      </column>
      <column caption='Indicator 0 Label' datatype='string' name='[Indicator 2 Label (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Indicator2 Parameter (copy)]' />
      </column>
      <column caption='Indicator0TextMed' datatype='string' name='[Indicator0Text (copy)]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Indicator2 Parameter (copy)] = &quot;Dist Downtown&quot; THEN  STR(ROUND(MEDIAN([Indicator 0 (copy)]),1)) + &quot; Miles&quot; // Distance&#13;&#10;&#13;&#10;ELSEIF MEDIAN([Indicator 0 (copy)]) &lt;= 1 THEN STR(ROUND(MEDIAN([Indicator 0 (copy)])*100,0)) + &quot;%&quot; // Percentage&#13;&#10;ELSEIF MEDIAN([Indicator 0 (copy)]) &lt;= 3000 THEN STR(ROUND(MEDIAN([Indicator 0 (copy)]),0))  // Population&#13;&#10;ELSEIF MEDIAN([Indicator 0 (copy)]) &gt; 3000 THEN &quot;$ &quot; +  STR(ROUND(MEDIAN([Indicator 0 (copy)])/1000)) + &quot;,000&quot; // Currency&#13;&#10;END' />
      </column>
      <column caption='Indicator0Text' datatype='string' name='[Indicator1Text (copy 2)]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Indicator2 Parameter (copy)] = &quot;Dist Downtown&quot; THEN STR(ROUND([Indicator 1 (copy 2)],1)) + &quot; Miles&quot; // Distance&#13;&#10;&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &lt;= 1 THEN STR(ROUND([Indicator 1 (copy 2)]*100,0)) + &quot;%&quot; // Percentage&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &lt;= 3000 THEN STR(ROUND([Indicator 1 (copy 2)],0))  // Population&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &gt; 3000 THEN &quot;$ &quot; +  STR(ROUND([Indicator 1 (copy 2)]/1000)) + &quot;,000&quot; // Currency&#13;&#10;END' />
      </column>
      <column caption='Indicator2Text' datatype='string' name='[Indicator1Text (copy)]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Indicator1 Parameter (copy)] = &quot;Dist Downtown&quot; THEN  STR(ROUND([Calculation_1115766813349253122],1)) + &quot; Miles&quot; // Distance&#13;&#10;&#13;&#10;ELSEIF [Calculation_1115766813349253122] &lt;= 1 THEN STR(ROUND([Calculation_1115766813349253122]*100,0)) + &quot;%&quot; // Percentage&#13;&#10;ELSEIF [Calculation_1115766813349253122] &lt;= 3000 THEN STR(ROUND([Calculation_1115766813349253122],0))  // Population&#13;&#10;ELSEIF [Calculation_1115766813349253122] &gt; 3000 THEN &quot;$ &quot; +  STR(ROUND([Calculation_1115766813349253122]/1000,0)) + &quot;,000&quot; // Currency&#13;&#10;END' />
      </column>
      <column caption='Level 1' datatype='string' name='[LEVEL_1]' role='dimension' type='nominal' />
      <column caption='Level 2' datatype='string' name='[LEVEL_2]' role='dimension' type='nominal' />
      <column caption='Level 3' datatype='string' name='[LEVEL_3]' role='dimension' type='nominal' />
      <column caption='Level 4' datatype='string' name='[LEVEL_4]' role='dimension' type='nominal' />
      <column caption='Med Hh Income' datatype='real' name='[Med_Hh_Income]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Pc income' datatype='real' name='[Pc_income]' role='measure' type='quantitative' />
      <column caption='State Int' datatype='integer' name='[STATE_INT]' role='measure' type='quantitative' />
      <column caption='State Str' datatype='string' name='[STATE_STR]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Shape area' datatype='real' name='[Shape_area]' role='measure' type='quantitative' />
      <column caption='Shape len' datatype='real' name='[Shape_len]' role='measure' type='quantitative' />
      <column caption='Tract Del' datatype='string' name='[TRACT_DEL]' role='dimension' type='nominal' />
      <column caption='Tract Flt' datatype='real' name='[TRACT_FLT]' role='measure' type='quantitative' />
      <column caption='Tract Int' datatype='integer' name='[TRACT_INT]' role='measure' type='quantitative' />
      <column caption='Tract Lbl' datatype='string' name='[TRACT_LBL]' role='dimension' type='nominal' />
      <column caption='Tract Str' datatype='string' name='[TRACT_STR]' role='dimension' type='nominal' />
      <column caption='Trtlabel C' datatype='string' name='[TRTLABEL_C]' role='dimension' type='nominal' />
      <column caption='Trtlabel F' datatype='string' name='[TRTLABEL_F]' role='dimension' type='nominal' />
      <column caption='Trtlabel T' datatype='string' name='[TRTLABEL_T]' role='dimension' type='nominal' />
      <column datatype='string' name='[Year]' role='dimension' type='nominal' />
      <column caption='Council District' datatype='string' name='[council_district]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;SCC1&quot;' value='D1' />
          <alias key='&quot;SCC2&quot;' value='D2' />
          <alias key='&quot;SCC3&quot;' value='D3' />
          <alias key='&quot;SCC4&quot;' value='D4' />
          <alias key='&quot;SCC5&quot;' value='D5' />
          <alias key='&quot;SCC6&quot;' value='D6' />
          <alias key='&quot;SCC7&quot;' value='D7' />
        </aliases>
      </column>
      <column caption='Geographical Area' datatype='string' name='[geographical_area]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Neigbhorhood Long' datatype='string' name='[neigbhorhood_long]' role='dimension' type='nominal' />
      <column caption='Neighborhood Short' datatype='string' name='[neighborhood_short]' role='dimension' type='nominal' />
      <column caption='Urban Village' datatype='string' name='[urban_village]' role='dimension' type='nominal' />
      <column caption='Zipcode' datatype='string' datatype-customized='true' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column-instance column='[Indicator 0 (copy)]' derivation='Avg' name='[avg:Indicator 0 (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Blockgroup]' derivation='CountD' name='[ctd:Blockgroup:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='CountD' name='[ctd:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Indicator 0 (copy)]' derivation='Median' name='[med:Indicator 0 (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Median' name='[med:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Indicator 1 (copy)]' derivation='None' name='[none:Indicator 1 (copy):nk]' pivot='key' type='nominal' />
      <column-instance column='[council_district]' derivation='None' name='[none:council_district:nk]' pivot='key' type='nominal' />
      <column-instance column='[Indicator 1 (copy 2)]' derivation='User' name='[pcrk:usr:Indicator 1 (copy 2):qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[Indicator 1 (copy 2)]' derivation='User' name='[rank:usr:Indicator 1 (copy 2):qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Indicator 0 (copy)]' derivation='Sum' name='[sum:Indicator 0 (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_-7112872654770298880]' derivation='User' name='[usr:Calculation_-7112872654770298880:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1115766813349150721]' derivation='User' name='[usr:Calculation_1115766813349150721:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1115766813349253122]' derivation='User' name='[usr:Calculation_1115766813349253122:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Indicator 1 (copy 2)]' derivation='User' name='[usr:Indicator 1 (copy 2):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Indicator0Text (copy)]' derivation='User' name='[usr:Indicator0Text (copy):nk]' pivot='key' type='nominal' />
      <column-instance column='[Indicator1Text (copy 2)]' derivation='User' name='[usr:Indicator1Text (copy 2):nk]' pivot='key' type='nominal' />
      <column-instance column='[Indicator1Text (copy)]' derivation='User' name='[usr:Indicator1Text (copy):nk]' pivot='key' type='nominal' />
      <group caption='Action (Blockgroup)' hidden='true' name='[Action (Blockgroup)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Blockgroup]' />
        </groupfilter>
      </group>
      <group caption='Action (Council District)' hidden='true' name='[Action (Council District)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[council_district]' />
        </groupfilter>
      </group>
      <group caption='Action (Geocode)' hidden='true' name='[Action (Geocode)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Indicator 1 (copy)]' />
        </groupfilter>
      </group>
      <group caption='Action (Geocode,Year)' hidden='true' name='[Action (Geocode,Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Indicator 1 (copy)]' />
          <groupfilter function='level-members' level='[Year]' />
        </groupfilter>
      </group>
      <group caption='Action (Location)' hidden='true' name='[Action (Location)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[location]' />
        </groupfilter>
      </group>
      <group caption='Action (Neigbhorhood Long)' hidden='true' name='[Action (Neigbhorhood Long)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[neigbhorhood_long]' />
        </groupfilter>
      </group>
      <group caption='Action (Neighborhood)' hidden='true' name='[Action (Neighborhood)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_594756662492823552]' />
        </groupfilter>
      </group>
      <group caption='Action (Year)' hidden='true' name='[Action (Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Year]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/xx/Documents/My Tableau Repository/Datasources/Demographics.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='08/07/2018 03:09:36 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='1924' timestamp-start='2018-08-07 15:09:36.430' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>0</ordinal>
              <family>Blockgroup_demographics.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1329</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>1</ordinal>
              <family>Blockgroup_demographics.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Blockgroup</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Blockgroup]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Blockgroup</remote-alias>
              <ordinal>2</ordinal>
              <family>Blockgroup_demographics.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>497</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Race Total</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Race Total]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Race Total</remote-alias>
              <ordinal>3</ordinal>
              <family>Blockgroup_demographics.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1329</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>White alone</remote-name>
              <remote-type>5</remote-type>
              <local-name>[White alone]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>White alone</remote-alias>
              <ordinal>4</ordinal>
              <family>Blockgroup_demographics.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1924</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Black or African American alone</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Black or African American alone]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Black or African American alone</remote-alias>
              <ordinal>5</ordinal>
              <family>Blockgroup_demographics.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>393</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>American Indian and Alaska Native alone</remote-name>
              <remote-type>5</remote-type>
              <local-name>[American Indian and Alaska Native alone]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>American Indian and Alaska Native alone</remote-alias>
              <ordinal>6</ordinal>
              <family>Blockgroup_demographics.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>86</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Asian alone</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Asian alone]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Asian alone</remote-alias>
              <ordinal>7</ordinal>
              <family>Blockgroup_demographics.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1924</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Native Hawaiian and Other Pacific Islander alone</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Native Hawaiian and Other Pacific Islander alone]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Native Hawaiian and Other Pacific Islander alone</remote-alias>
              <ordinal>8</ordinal>
              <family>Blockgroup_demographics.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>30</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Some other race alone</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Some other race alone]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Some other race alone</remote-alias>
              <ordinal>9</ordinal>
              <family>Blockgroup_demographics.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>67</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Two or more races</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Two or more races]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Two or more races</remote-alias>
              <ordinal>10</ordinal>
              <family>Blockgroup_demographics.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1640</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Two or more races: - Two races including Some other race</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Two or more races: - Two races including Some other race]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Two or more races: - Two races including Some other race</remote-alias>
              <ordinal>11</ordinal>
              <family>Blockgroup_demographics.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>34</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Two or more races: - Two races excluding Some other race, and three or more races</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Two or more races: - Two races excluding Some other race, and three or more races]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Two or more races: - Two races excluding Some other race, and three or more races</remote-alias>
              <ordinal>12</ordinal>
              <family>Blockgroup_demographics.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>178</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Edu Total</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Edu Total]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Edu Total</remote-alias>
              <ordinal>13</ordinal>
              <family>Blockgroup_demographics.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>911</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>No schooling completed</remote-name>
              <remote-type>20</remote-type>
              <local-name>[No schooling completed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>No schooling completed</remote-alias>
              <ordinal>14</ordinal>
              <family>Blockgroup_demographics.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Nursery school</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Nursery school]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Nursery school</remote-alias>
              <ordinal>15</ordinal>
              <family>Blockgroup_demographics.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Kindergarten</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Kindergarten]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Kindergarten</remote-alias>
              <ordinal>16</ordinal>
              <family>Blockgroup_demographics.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>1st grade</remote-name>
              <remote-type>20</remote-type>
              <local-name>[1st grade]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>1st grade</remote-alias>
              <ordinal>17</ordinal>
              <family>Blockgroup_demographics.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2nd grade</remote-name>
              <remote-type>20</remote-type>
              <local-name>[2nd grade]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2nd grade</remote-alias>
              <ordinal>18</ordinal>
              <family>Blockgroup_demographics.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>3rd grade</remote-name>
              <remote-type>20</remote-type>
              <local-name>[3rd grade]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>3rd grade</remote-alias>
              <ordinal>19</ordinal>
              <family>Blockgroup_demographics.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>4th grade</remote-name>
              <remote-type>20</remote-type>
              <local-name>[4th grade]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>4th grade</remote-alias>
              <ordinal>20</ordinal>
              <family>Blockgroup_demographics.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>5th grade</remote-name>
              <remote-type>20</remote-type>
              <local-name>[5th grade]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>5th grade</remote-alias>
              <ordinal>21</ordinal>
              <family>Blockgroup_demographics.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>19</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>6th grade</remote-name>
              <remote-type>20</remote-type>
              <local-name>[6th grade]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>6th grade</remote-alias>
              <ordinal>22</ordinal>
              <family>Blockgroup_demographics.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>40</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>7th grade</remote-name>
              <remote-type>20</remote-type>
              <local-name>[7th grade]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>7th grade</remote-alias>
              <ordinal>23</ordinal>
              <family>Blockgroup_demographics.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>8th grade</remote-name>
              <remote-type>20</remote-type>
              <local-name>[8th grade]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>8th grade</remote-alias>
              <ordinal>24</ordinal>
              <family>Blockgroup_demographics.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>38</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>9th grade</remote-name>
              <remote-type>20</remote-type>
              <local-name>[9th grade]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>9th grade</remote-alias>
              <ordinal>25</ordinal>
              <family>Blockgroup_demographics.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>43</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>10th grade</remote-name>
              <remote-type>20</remote-type>
              <local-name>[10th grade]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>10th grade</remote-alias>
              <ordinal>26</ordinal>
              <family>Blockgroup_demographics.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>44</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>11th grade</remote-name>
              <remote-type>20</remote-type>
              <local-name>[11th grade]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>11th grade</remote-alias>
              <ordinal>27</ordinal>
              <family>Blockgroup_demographics.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>39</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>12th grade, no diploma</remote-name>
              <remote-type>20</remote-type>
              <local-name>[12th grade, no diploma]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>12th grade, no diploma</remote-alias>
              <ordinal>28</ordinal>
              <family>Blockgroup_demographics.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>49</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Regular high school diploma</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Regular high school diploma]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Regular high school diploma</remote-alias>
              <ordinal>29</ordinal>
              <family>Blockgroup_demographics.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>214</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GED or alternative credential</remote-name>
              <remote-type>20</remote-type>
              <local-name>[GED or alternative credential]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GED or alternative credential</remote-alias>
              <ordinal>30</ordinal>
              <family>Blockgroup_demographics.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>62</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Some college, less than 1 year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Some college, less than 1 year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Some college, less than 1 year</remote-alias>
              <ordinal>31</ordinal>
              <family>Blockgroup_demographics.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>99</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Some college, 1 or more years, no degree</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Some college, 1 or more years, no degree]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Some college, 1 or more years, no degree</remote-alias>
              <ordinal>32</ordinal>
              <family>Blockgroup_demographics.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>218</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Associate&apos;s degree</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Associate&apos;s degree]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Associate&apos;s degree</remote-alias>
              <ordinal>33</ordinal>
              <family>Blockgroup_demographics.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>156</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Bachelor&apos;s degree</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Bachelor&apos;s degree]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Bachelor&apos;s degree</remote-alias>
              <ordinal>34</ordinal>
              <family>Blockgroup_demographics.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>445</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Master&apos;s degree</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Master&apos;s degree]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Master&apos;s degree</remote-alias>
              <ordinal>35</ordinal>
              <family>Blockgroup_demographics.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>257</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Professional school degree</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Professional school degree]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Professional school degree</remote-alias>
              <ordinal>36</ordinal>
              <family>Blockgroup_demographics.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>106</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Doctorate degree</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Doctorate degree]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Doctorate degree</remote-alias>
              <ordinal>37</ordinal>
              <family>Blockgroup_demographics.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>82</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Med_Hh_Income</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Med_Hh_Income]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Med_Hh_Income</remote-alias>
              <ordinal>38</ordinal>
              <family>Blockgroup_demographics.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1924</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Pc_income</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Pc_income]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Pc_income</remote-alias>
              <ordinal>39</ordinal>
              <family>Blockgroup_demographics.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1924</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Food Stamps Total</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Food Stamps Total]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Food Stamps Total</remote-alias>
              <ordinal>40</ordinal>
              <family>Blockgroup_demographics.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>617</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Tenure Total</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Tenure Total]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Tenure Total</remote-alias>
              <ordinal>41</ordinal>
              <family>Blockgroup_demographics.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>617</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Own</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Own]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Own</remote-alias>
              <ordinal>42</ordinal>
              <family>Blockgroup_demographics.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1924</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Rent</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Rent]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Rent</remote-alias>
              <ordinal>43</ordinal>
              <family>Blockgroup_demographics.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1924</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Some other race</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Some other race]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Some other race</remote-alias>
              <ordinal>44</ordinal>
              <family>Blockgroup_demographics.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>142</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Food Stamps</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Food Stamps]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Food Stamps</remote-alias>
              <ordinal>45</ordinal>
              <family>Blockgroup_demographics.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>483</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Four Year College</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Four Year College]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Four Year College</remote-alias>
              <ordinal>46</ordinal>
              <family>Blockgroup_demographics.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1924</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Dist Downtown</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Dist Downtown]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Dist Downtown</remote-alias>
              <ordinal>47</ordinal>
              <family>Blockgroup_demographics.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>497</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>blkgrp</remote-name>
              <remote-type>5</remote-type>
              <local-name>[blkgrp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>blkgrp</remote-alias>
              <ordinal>48</ordinal>
              <family>Blockgroup_demographics.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>AveSalePrice</remote-name>
              <remote-type>5</remote-type>
              <local-name>[AveSalePrice]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>AveSalePrice</remote-alias>
              <ordinal>49</ordinal>
              <family>Blockgroup_demographics.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ParcelCount</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ParcelCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ParcelCount</remote-alias>
              <ordinal>50</ordinal>
              <family>Blockgroup_demographics.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>20</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>51</ordinal>
              <family>Blockgroup_geocode.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>497</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>neighborhood_short</remote-name>
              <remote-type>129</remote-type>
              <local-name>[neighborhood_short]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>neighborhood_short</remote-alias>
              <ordinal>52</ordinal>
              <family>Blockgroup_geocode.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>80</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>neigbhorhood_long</remote-name>
              <remote-type>129</remote-type>
              <local-name>[neigbhorhood_long]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>neigbhorhood_long</remote-alias>
              <ordinal>53</ordinal>
              <family>Blockgroup_geocode.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>18</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>council_district</remote-name>
              <remote-type>129</remote-type>
              <local-name>[council_district]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>council_district</remote-alias>
              <ordinal>54</ordinal>
              <family>Blockgroup_geocode.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>zipcode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[zipcode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>zipcode</remote-alias>
              <ordinal>55</ordinal>
              <family>Blockgroup_geocode.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>26</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>urban_village</remote-name>
              <remote-type>129</remote-type>
              <local-name>[urban_village]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>urban_village</remote-alias>
              <ordinal>56</ordinal>
              <family>Blockgroup_geocode.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>32</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>geographical_area</remote-name>
              <remote-type>129</remote-type>
              <local-name>[geographical_area]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>geographical_area</remote-alias>
              <ordinal>57</ordinal>
              <family>Blockgroup_geocode.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>latitude</remote-alias>
              <ordinal>58</ordinal>
              <family>Blockgroup_geocode.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>470</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>longitude</remote-alias>
              <ordinal>59</ordinal>
              <family>Blockgroup_geocode.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>483</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GEO_ID_GRP</remote-name>
              <remote-type>129</remote-type>
              <local-name>[GEO_ID_GRP]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GEO_ID_GRP</remote-alias>
              <ordinal>60</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>497</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>FEATURE_ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[FEATURE_ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>FEATURE_ID</remote-alias>
              <ordinal>61</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>497</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>BLKGRP_LBL</remote-name>
              <remote-type>129</remote-type>
              <local-name>[BLKGRP_LBL]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>BLKGRP_LBL</remote-alias>
              <ordinal>62</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>497</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>BLKGRP_STR</remote-name>
              <remote-type>129</remote-type>
              <local-name>[BLKGRP_STR]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>BLKGRP_STR</remote-alias>
              <ordinal>63</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>497</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>BLKGRP_INT</remote-name>
              <remote-type>20</remote-type>
              <local-name>[BLKGRP_INT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>BLKGRP_INT</remote-alias>
              <ordinal>64</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>497</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GRPLABEL_F</remote-name>
              <remote-type>129</remote-type>
              <local-name>[GRPLABEL_F]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GRPLABEL_F</remote-alias>
              <ordinal>65</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>497</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GRPLABEL_C</remote-name>
              <remote-type>129</remote-type>
              <local-name>[GRPLABEL_C]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GRPLABEL_C</remote-alias>
              <ordinal>66</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>497</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GRPLABEL_T</remote-name>
              <remote-type>129</remote-type>
              <local-name>[GRPLABEL_T]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GRPLABEL_T</remote-alias>
              <ordinal>67</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>497</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TRACT_LBL</remote-name>
              <remote-type>129</remote-type>
              <local-name>[TRACT_LBL]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TRACT_LBL</remote-alias>
              <ordinal>68</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>121</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TRACT_STR</remote-name>
              <remote-type>129</remote-type>
              <local-name>[TRACT_STR]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TRACT_STR</remote-alias>
              <ordinal>69</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>121</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TRACT_INT</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TRACT_INT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TRACT_INT</remote-alias>
              <ordinal>70</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>121</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TRACT_FLT</remote-name>
              <remote-type>5</remote-type>
              <local-name>[TRACT_FLT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TRACT_FLT</remote-alias>
              <ordinal>71</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>121</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TRACT_DEL</remote-name>
              <remote-type>129</remote-type>
              <local-name>[TRACT_DEL]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TRACT_DEL</remote-alias>
              <ordinal>72</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>121</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TRTLABEL_F</remote-name>
              <remote-type>129</remote-type>
              <local-name>[TRTLABEL_F]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TRTLABEL_F</remote-alias>
              <ordinal>73</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>121</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TRTLABEL_C</remote-name>
              <remote-type>129</remote-type>
              <local-name>[TRTLABEL_C]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TRTLABEL_C</remote-alias>
              <ordinal>74</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>121</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TRTLABEL_T</remote-name>
              <remote-type>129</remote-type>
              <local-name>[TRTLABEL_T]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TRTLABEL_T</remote-alias>
              <ordinal>75</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>121</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>COUNTY_STR</remote-name>
              <remote-type>129</remote-type>
              <local-name>[COUNTY_STR]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>COUNTY_STR</remote-alias>
              <ordinal>76</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>COUNTY_INT</remote-name>
              <remote-type>20</remote-type>
              <local-name>[COUNTY_INT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>COUNTY_INT</remote-alias>
              <ordinal>77</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>STATE_STR</remote-name>
              <remote-type>129</remote-type>
              <local-name>[STATE_STR]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>STATE_STR</remote-alias>
              <ordinal>78</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>STATE_INT</remote-name>
              <remote-type>20</remote-type>
              <local-name>[STATE_INT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>STATE_INT</remote-alias>
              <ordinal>79</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LEVEL_1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[LEVEL_1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LEVEL_1</remote-alias>
              <ordinal>80</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LEVEL_2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[LEVEL_2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LEVEL_2</remote-alias>
              <ordinal>81</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LEVEL_3</remote-name>
              <remote-type>129</remote-type>
              <local-name>[LEVEL_3]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LEVEL_3</remote-alias>
              <ordinal>82</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>121</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LEVEL_4</remote-name>
              <remote-type>129</remote-type>
              <local-name>[LEVEL_4]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LEVEL_4</remote-alias>
              <ordinal>83</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>497</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GROUP_AREA</remote-name>
              <remote-type>5</remote-type>
              <local-name>[GROUP_AREA]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GROUP_AREA</remote-alias>
              <ordinal>84</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>497</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GROUP_PERI</remote-name>
              <remote-type>5</remote-type>
              <local-name>[GROUP_PERI]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GROUP_PERI</remote-alias>
              <ordinal>85</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>497</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Shape_area</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Shape_area]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Shape_area</remote-alias>
              <ordinal>86</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>497</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Shape_len</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Shape_len]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Shape_len</remote-alias>
              <ordinal>87</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>497</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Geometry</remote-name>
              <remote-type>128</remote-type>
              <local-name>[Geometry]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Geometry</remote-alias>
              <ordinal>88</ordinal>
              <family>blkgrp10_shore.shp</family>
              <local-type>spatial</local-type>
              <aggregation>Collect</aggregation>
              <approx-count>497</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>89</ordinal>
              <family>two_indices_and_a_bg.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>497</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>block_group</remote-name>
              <remote-type>129</remote-type>
              <local-name>[block_group]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>block_group</remote-alias>
              <ordinal>90</ordinal>
              <family>two_indices_and_a_bg.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>497</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>mode_index</remote-name>
              <remote-type>5</remote-type>
              <local-name>[mode_index]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>mode_index</remote-alias>
              <ordinal>91</ordinal>
              <family>two_indices_and_a_bg.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>301</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>affordability_index</remote-name>
              <remote-type>5</remote-type>
              <local-name>[affordability_index]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>affordability_index</remote-alias>
              <ordinal>92</ordinal>
              <family>two_indices_and_a_bg.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>497</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.539526' measure-ordering='alphabetic' measure-percentage='0.328063' parameter-percentage='0.132411' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.004akfr0ztvque1dvtnym0ol9g6i].[avg:Indicator 0 (copy):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.004akfr0ztvque1dvtnym0ol9g6i].[pcrk:usr:Indicator 1 (copy 2):qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.004akfr0ztvque1dvtnym0ol9g6i].[rank:usr:Indicator 1 (copy 2):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.004akfr0ztvque1dvtnym0ol9g6i].[sum:Indicator 0 (copy):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_-7112872654770298880:nk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_1115766813349150721:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_1115766813422235657:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator 1 (copy 2):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator0Text (copy):nk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator1Text (copy 2):nk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.004akfr0ztvque1dvtnym0ol9g6i].[ctd:Blockgroup:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.004akfr0ztvque1dvtnym0ol9g6i].[cnt:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.004akfr0ztvque1dvtnym0ol9g6i].[ctd:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.004akfr0ztvque1dvtnym0ol9g6i].[med:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.004akfr0ztvque1dvtnym0ol9g6i].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_1115766813349253122:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator1Text (copy):nk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:council_district:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;None&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SCC4&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;SCC3&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SCC6&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SCC2&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;SCC5&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SCC1&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;SCC7&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Indicator 1 (copy):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;530330002004&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;530330006006&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;530330013003&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;530330019001&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;530330026003&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;530330031004&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;530330036001&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;530330042005&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;530330048002&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;530330053012&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;530330057006&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;530330061004&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;530330068001&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;530330074011&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;530330078002&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;530330082003&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;530330089003&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;530330096001&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;530330099002&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;530330103002&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;530330106005&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;530330111013&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;530330115001&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;530330119003&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;98109&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Broadview&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Capitol Hill&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Harrison/Denny-Blaine&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;LAKE CITY&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montlake&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Roxhill&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Windermere&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;12th Avenue&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;530330001001&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;530330005001&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;530330011002&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;530330017013&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;530330022004&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;530330029003&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;530330033004&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;530330041003&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;530330046001&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;530330051002&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;530330056003&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;530330059005&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;530330065002&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;530330071001&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;530330076001&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;530330080015&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;530330087001&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;530330094002&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;530330097024&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;530330101003&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;530330105002&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;530330110011&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;530330113004&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;530330117004&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;98101&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;98134&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Adams&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BALLARD&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;First Hill&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Madison Park&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pinehurst&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SCC1&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Victory Heights&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;West Seattle Junction&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;530330001005&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;530330006002&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;530330012004&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;530330017024&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;530330025001&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;530330030004&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;530330034003&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;530330042001&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;530330047002&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;530330052003&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;530330057002&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;530330060004&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;530330067001&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;530330072003&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;530330077002&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;530330081002&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;530330088002&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;530330095001&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;530330098003&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;530330102002&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;530330106001&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;530330110022&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;530330114013&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;530330118004&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;98105&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;98177&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ballard&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Belltown&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CENTRAL AREA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Matthews Beach&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rainier View&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SCC5&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;West Queen Anne&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;SCC4&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;530330003002&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;530330007004&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;530330014004&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;530330020002&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;530330027003&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;530330032003&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;530330038001&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;530330043021&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;530330049002&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;530330053022&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;530330058014&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;530330063001&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;530330069003&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;530330074021&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;530330079002&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;530330084002&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;530330091001&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;530330096005&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;530330100012&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;530330104011&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;530330107021&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;530330111023&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;530330116002&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;530330120002&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;98117&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Central Business District&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Industrial District&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Morgan Junction&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Beach/Blue Ridge&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NORTHGATE&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Beacon Hill&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;530330002005&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;530330007001&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;530330014001&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;530330019002&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;530330026004&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;530330031005&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;530330036002&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;530330043011&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;530330048003&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;530330053013&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;530330058011&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;530330062001&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;530330068002&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;530330074012&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;530330078003&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;530330083001&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;530330089004&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;530330096002&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;530330099003&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;530330103003&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;530330106006&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;530330111014&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;530330115002&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;530330119004&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;98112&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Broadway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chinatown-International District&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;High Point&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MAGNOLIA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mount Baker&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sand Point&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yesler Terrace&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;530330002001&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;530330006003&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;530330012005&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;530330018001&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;530330025002&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;530330031001&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;530330035001&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;530330042002&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;530330047003&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;530330052004&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;530330057003&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;530330061001&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;530330067002&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;530330073001&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;530330077003&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;530330081003&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;530330088003&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;530330095002&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;530330098004&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;530330102003&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;530330106002&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;530330110023&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;530330114021&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;530330118005&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;98106&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;98178&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ballard-Interbay-Northend&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bitter Lake&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DELRIDGE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Green Lake&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Meadowbrook&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ravenna&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;West Woodland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;530330004023&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;530330010002&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;530330017011&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;530330022002&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;530330029001&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;530330033002&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;530330041001&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;530330045001&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;530330050003&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;530330056001&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;530330059003&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;530330064003&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;530330070005&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;530330075004&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;530330080013&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;530330086002&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;530330093003&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;530330097022&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;530330101001&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;530330104024&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;530330109001&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;530330113002&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;530330117002&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;98126&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fairmount Park&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lower Queen Anne&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Phinney Ridge&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pike/Pine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sunset Hill&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uptown&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;23rd &amp; Union-Jackson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;530330001002&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;530330005002&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;530330012001&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;530330017021&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;530330024001&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;530330030001&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;530330033005&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;530330041004&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;530330046002&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;530330051003&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;530330056004&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;530330060001&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;530330065003&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;530330071002&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;530330076002&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;530330080021&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;530330087002&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;530330094003&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;530330097025&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;530330101004&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;530330105003&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;530330110012&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;530330113005&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;530330118001&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;98102&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;98136&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alki&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BEACON HILL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Madrona&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pioneer Square&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;View Ridge&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Westwood-Highland Park&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;530330004021&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;530330009002&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;530330016002&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;530330021003&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;530330028003&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;530330032007&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;530330040001&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;530330044003&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;530330050001&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;530330054003&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;530330059001&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;530330064001&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;530330070003&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;530330075002&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;530330080011&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;530330085003&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;530330093001&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;530330097014&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;530330100023&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;530330104022&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;530330108002&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;530330112003&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;530330116006&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;530330265001&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;98122&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;East Queen Anne&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lawton Park&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Queen Anne&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Othello&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SCC7&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Southeast Magnolia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;UNIVERSITY DISTRICT&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;University District Northwest&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;530330002002&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;530330006004&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;530330013001&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;530330018002&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;530330026001&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;530330031002&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;530330035002&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;530330042003&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;530330047004&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;530330052005&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;530330057004&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;530330061002&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;530330067003&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;530330073002&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;530330077004&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;530330082001&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;530330089001&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;530330095003&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;530330098005&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;530330102004&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;530330106003&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;530330111011&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;530330114022&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;530330118006&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;98107&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;98195&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Briarcliff&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DOWNTOWN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lake City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mid-Beacon Hill&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Riverview&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Westlake&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;530330004011&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;530330008001&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;530330015001&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;530330020003&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;530330027004&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;530330032004&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;530330038002&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;530330043022&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;530330049003&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;530330053023&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;530330058021&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;530330063002&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;530330069004&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;530330074022&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;530330079003&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;530330084003&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;530330091002&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;530330097011&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;530330100013&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;530330104012&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;530330107022&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;530330111024&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;530330116003&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;530330120003&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;98118&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Columbia City&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denny Triangle&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Interbay&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Beacon Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;QUEEN ANNE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Delridge&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;530330004012&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;530330008002&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;530330015002&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;530330021001&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;530330028001&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;530330032005&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;530330039001&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;530330044001&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;530330049004&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;530330054001&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;530330058022&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;530330063003&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;530330070001&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;530330074023&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;530330079004&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;530330085001&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;530330092001&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;530330097012&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;530330100021&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;530330104013&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;530330107023&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;530330112001&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;530330116004&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;530330121001&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;98119&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Crown Hill&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;International District&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North College Park&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Rainier&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;RAINIER VALLEY&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Lake Union&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;530330004022&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;530330010001&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;530330016003&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;530330022001&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;530330028004&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;530330033001&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;530330040002&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;530330044004&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;530330050002&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;530330054004&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;530330059002&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;530330064002&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;530330070004&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;530330075003&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;530330080012&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;530330086001&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;530330093002&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;530330097021&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;530330100024&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;530330104023&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;530330108003&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;530330113001&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;530330117001&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;98125&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eastlake&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Greater Duwamish&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Leschi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Olympic Hills&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Stevens&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Upper Queen Anne&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;WEST SEATTLE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;530330004024&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;530330011001&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;530330017012&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;530330022003&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;530330029002&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;530330033003&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;530330041002&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;530330045002&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;530330051001&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;530330056002&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;530330059004&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;530330065001&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;530330070006&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;530330075005&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;530330080014&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;530330086003&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;530330094001&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;530330097023&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;530330101002&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;530330105001&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;530330109002&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;530330113003&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;530330117003&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;98133&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fauntleroy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenwood-Phinney Ridge&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Loyal Heights&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pike-Market&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;University District&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;530330002006&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;530330007002&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;530330014002&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;530330019003&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;530330027001&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;530330032001&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;530330036003&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;530330043012&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;530330048004&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;530330053014&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;530330058012&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;530330062002&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;530330069001&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;530330074013&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;530330078004&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;530330083002&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;530330090001&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;530330096003&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;530330099004&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;530330103004&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;530330107011&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;530330111021&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;530330115003&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;530330119005&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;98115&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bryant&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Highland Park&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Madison-Miller&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;None&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SCC3&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Seaview&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;SCC6&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;530330002003&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;530330006005&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;530330013002&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;530330018003&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;530330026002&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;530330031003&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;530330035003&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;530330042004&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;530330048001&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;530330053011&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;530330057005&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;530330061003&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;530330067004&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;530330073003&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;530330078001&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;530330082002&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;530330089002&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;530330095004&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;530330099001&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;530330103001&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;530330106004&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;530330111012&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;530330114023&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;530330119001&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;98108&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;98199&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bitter Lake Village&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brighton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Haller Lake&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;INTERBAY&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Minor&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Roosevelt&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Whittier Heights&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;530330001003&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;530330005003&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;530330012002&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;530330017022&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;530330024002&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;530330030002&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;530330034001&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;530330041005&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;530330046003&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;530330052001&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;530330056005&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;530330060002&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;530330066001&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;530330072001&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;530330076003&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;530330080022&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;530330087003&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;530330094004&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;530330098001&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;530330101005&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;530330105004&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;530330110013&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;530330114011&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;530330118002&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;98103&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;98144&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Admiral&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arbor Heights&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CAPITOL HILL&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gatewood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mann&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Portage Bay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SCC2&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wallingford&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;530330004013&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;530330009001&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;530330016001&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;530330021002&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;530330028002&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;530330032006&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;530330039002&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;530330044002&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;530330049005&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;530330054002&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;530330058023&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;530330063004&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;530330070002&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;530330075001&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;530330079005&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;530330085002&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;530330092002&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;530330097013&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;530330100022&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;530330104021&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;530330108001&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;530330112002&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;530330116005&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;530330121002&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;98121&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dunlap&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Laurelhurst&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North Delridge&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Northgate&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SEWARD PARK&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Park&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;University Campus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;530330003001&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;530330007003&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;530330014003&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;530330020001&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;530330027002&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;530330032002&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;530330036004&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;530330043013&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;530330049001&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;530330053021&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;530330058013&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;530330062003&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;530330069002&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;530330074014&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;530330079001&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;530330084001&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;530330090002&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;530330096004&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;530330100011&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;530330103005&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;530330107012&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;530330111022&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;530330116001&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;530330120001&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;98116&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cedar Park&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Commercial Core&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Holly Park&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NO BROADER TERM&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Admiral&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Seward Park&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;530330001004&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;530330006001&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;530330012003&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;530330017023&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;530330024003&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;530330030003&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;530330034002&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;530330041006&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;530330047001&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;530330052002&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;530330057001&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;530330060003&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;530330066002&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;530330072002&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;530330077001&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;530330081001&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;530330088001&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;530330094005&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;530330098002&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;530330102001&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;530330105005&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;530330110021&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;530330114012&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;530330118003&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;98104&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;98146&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Atlantic&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Aurora-Licton Springs&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CASCADE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Genesee&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Maple Leaf&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rainier Beach&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wedgwood&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Indicator2 Parameter' datatype='string' name='[Indicator1 Parameter (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Percent Food Stamps&quot;'>
          <calculation class='tableau' formula='&quot;Percent Food Stamps&quot;' />
        </column>
        <column caption='Indicator0 Parameter' datatype='string' name='[Indicator2 Parameter (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Percent Food Stamps&quot;'>
          <calculation class='tableau' formula='&quot;Percent Food Stamps&quot;' />
        </column>
        <column caption='Indicator1 Parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Percent POC&quot;'>
          <calculation class='tableau' formula='&quot;Percent POC&quot;' />
        </column>
        <column caption='Geocode Parameter' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Block Group&quot;'>
          <calculation class='tableau' formula='&quot;Block Group&quot;' />
        </column>
        <column caption='Council District Parameter' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;ALL DISTRICTS&quot;'>
          <calculation class='tableau' formula='&quot;ALL DISTRICTS&quot;' />
          <aliases>
            <alias key='&quot;SCC1&quot;' value='D1' />
            <alias key='&quot;SCC2&quot;' value='D2' />
            <alias key='&quot;SCC3&quot;' value='D3' />
            <alias key='&quot;SCC4&quot;' value='D4' />
            <alias key='&quot;SCC5&quot;' value='D5' />
            <alias key='&quot;SCC6&quot;' value='D6' />
          </aliases>
        </column>
        <column caption='Year Parameter' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;ALL YEARS&quot;'>
          <calculation class='tableau' formula='&quot;ALL YEARS&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
    <mapsource inline='true' name='dark' source-platform='mac' version='18.1'>
      <connection api-key='pk.eyJ1IjoibW9ub2x5c3QiLCJhIjoiYzNiZmtNTSJ9.HW2mrSZuh3h1sacAVirATQ' class='MapBox' description='' full-url='https://api.mapbox.com/styles/v1/monolyst/{L}/tiles/{Z}/{X}/{Y}{D}?access_token=pk.eyJ1IjoibW9ub2x5c3QiLCJhIjoiYzNiZmtNTSJ9.HW2mrSZuh3h1sacAVirATQ' inline='true' layer-separator=',' offline='' port='443' server='api.mapbox.com' service='https' tileset='US/normal' url-format='/styles/v1/monolyst/{L}/tiles/{Z}/{X}/{Y}{D}?access_token=pk.eyJ1IjoibW9ub2x5c3QiLCJhIjoiYzNiZmtNTSJ9.HW2mrSZuh3h1sacAVirATQ' username='monolyst' wait-tile-color='#dddddd' />
      <languages />
      <layers>
        <layer display-name='Dark-copy' name='cjkm52d5s74c32spfcxy007fs' show-ui='true' type='features' />
      </layers>
      <properties />
      <map-styles>
        <map-style display-name='dark' name='dark' wait-tile-color='#dddddd'>
          <map-layer-style name='Dark-copy' request-string='cjkm52d5s74c32spfcxy007fs' />
        </map-style>
      </map-styles>
      <mapsource-defaults version='18.1'>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='cjkm52d5s74c32spfcxy007fs' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
        </style>
      </mapsource-defaults>
      <map-attribution copyright-string='About Maps' copyright-url='http://www.tableau.com/mapdata' short-copyright-string='' />
    </mapsource>
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='SLICE' type='sheet' worksheet='SliceDistrict' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='SLICE' />
      </command>
    </action>
    <action caption='Highlight1' name='[Action2]'>
      <activation auto-clear='true' type='on-hover' />
      <source type='all'>
        <exclude-sheet name='CompareHistogram1' />
        <exclude-sheet name='Explore Bubble' />
      </source>
      <command command='tsc:brush'>
        <param name='field-captions' value='Location' />
        <param name='target' value='COMPARE' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='SLICE' type='sheet' worksheet='MapSlice' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='SLICE' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='EXPLORE TRENDS' type='sheet' worksheet='Explore Bubble' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='EXPLORE TRENDS' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='SLICE' type='sheet' worksheet='Slice Histogram' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='SLICE' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='SLICE' type='sheet' worksheet='SliceNeigborhood' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='SLICE' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='BlockGroup'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Æ </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Demographics' name='federated.004akfr0ztvque1dvtnym0ol9g6i' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Indicator2 Parameter' datatype='string' name='[Indicator1 Parameter (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Percent Food Stamps&quot;'>
              <calculation class='tableau' formula='&quot;Percent Food Stamps&quot;' />
            </column>
            <column caption='Indicator1 Parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Percent POC&quot;'>
              <calculation class='tableau' formula='&quot;Percent POC&quot;' />
            </column>
            <column caption='Council District Parameter' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;ALL DISTRICTS&quot;'>
              <calculation class='tableau' formula='&quot;ALL DISTRICTS&quot;' />
              <aliases>
                <alias key='&quot;SCC1&quot;' value='D1' />
                <alias key='&quot;SCC2&quot;' value='D2' />
                <alias key='&quot;SCC3&quot;' value='D3' />
                <alias key='&quot;SCC4&quot;' value='D4' />
                <alias key='&quot;SCC5&quot;' value='D5' />
                <alias key='&quot;SCC6&quot;' value='D6' />
              </aliases>
            </column>
            <column caption='Year Parameter' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;ALL YEARS&quot;'>
              <calculation class='tableau' formula='&quot;ALL YEARS&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.004akfr0ztvque1dvtnym0ol9g6i'>
            <column datatype='real' name='[Asian alone]' role='measure' type='quantitative' />
            <column datatype='real' name='[AveSalePrice]' role='measure' type='quantitative' />
            <column datatype='real' name='[Black or African American alone]' role='measure' type='quantitative' />
            <column caption='Indicator1Text' datatype='string' name='[Calculation_-7112872654770298880]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;Dist Downtown&quot; THEN  STR(ROUND([Calculation_1115766813349150721],1)) + &quot; Miles&quot; // Distance&#13;&#10;&#13;&#10;ELSEIF [Calculation_1115766813349150721] &lt;= 1 THEN STR(ROUND([Calculation_1115766813349150721]*100,0)) + &quot;%&quot; // Percentage&#13;&#10;ELSEIF [Calculation_1115766813349150721] &lt;= 3000 THEN STR(ROUND([Calculation_1115766813349150721],0))  // Population&#13;&#10;ELSEIF [Calculation_1115766813349150721] &gt; 3000 THEN &quot;$&quot; +  STR(ROUND([Calculation_1115766813349150721]/1000)) + &quot;,000&quot; // Currency&#13;&#10;END' />
            </column>
            <column caption='Indicator 1' datatype='real' name='[Calculation_1115766813349150721]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;Percent POC&quot; THEN (1-AVG([White alone]))&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Percent Own&quot; THEN AVG([Own])&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Percent Rent&quot; THEN AVG([Rent]) &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Percent Asian&quot; THEN AVG([Asian alone]) &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Percent Black&quot; THEN AVG([Black or African American alone])&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Percent White&quot; THEN AVG([White alone]) &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Percent Food Stamps&quot; THEN AVG([Food Stamps]) &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Percent Four Year College&quot; THEN AVG([Four Year College]) &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Median Household Income&quot; THEN AVG([Med_Hh_Income]) &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Per Capita Income&quot; THEN AVG([Pc_income]) &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Population&quot; THEN AVG([Population])&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Dist Downtown&quot; THEN AVG([Dist Downtown])&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Sales Price&quot; THEN AVG([AveSalePrice])&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Sales Volume&quot; THEN AVG([ParcelCount])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Indicator 2' datatype='real' name='[Calculation_1115766813349253122]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Indicator1 Parameter (copy)] = &quot;Percent POC&quot; THEN (1-AVG([White alone]))&#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Percent Own&quot; THEN AVG([Own])&#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Percent Rent&quot; THEN AVG([Rent]) &#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Percent Asian&quot; THEN AVG([Asian alone]) &#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Percent Black&quot; THEN AVG([Black or African American alone])&#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Percent White&quot; THEN AVG([White alone]) &#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Percent Food Stamps&quot; THEN AVG([Food Stamps]) &#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Percent Four Year College&quot; THEN AVG([Four Year College]) &#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Median Household Income&quot; THEN AVG([Med_Hh_Income]) &#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Per Capita Income&quot; THEN AVG([Pc_income]) &#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Population&quot; THEN AVG([Population])&#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Dist Downtown&quot; THEN AVG([Dist Downtown])&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Sales Price&quot; THEN AVG([AveSalePrice])&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Sales Volume&quot; THEN AVG([ParcelCount])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Filter Council District' datatype='boolean' name='[Calculation_1115766813350019075]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[council_district] != &quot;None&quot;' />
            </column>
            <column caption='Filter Year Parameter' datatype='boolean' name='[Calculation_1115766813408124936]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Year] = [Parameters].[Parameter 4] OR [Parameters].[Parameter 4] = &quot;ALL YEARS&quot;' />
            </column>
            <column datatype='real' name='[Dist Downtown]' role='measure' type='quantitative' />
            <column caption='Filter Council District Parameter' datatype='boolean' name='[Filter Year Parameter (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[council_district] = [Parameters].[Parameter 3] OR [Parameters].[Parameter 3] = &quot;ALL DISTRICTS&quot;' />
            </column>
            <column datatype='real' name='[Food Stamps]' role='measure' type='quantitative' />
            <column datatype='real' name='[Four Year College]' role='measure' type='quantitative' />
            <column caption='Indicator2Text' datatype='string' name='[Indicator1Text (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Indicator1 Parameter (copy)] = &quot;Dist Downtown&quot; THEN  STR(ROUND([Calculation_1115766813349253122],1)) + &quot; Miles&quot; // Distance&#13;&#10;&#13;&#10;ELSEIF [Calculation_1115766813349253122] &lt;= 1 THEN STR(ROUND([Calculation_1115766813349253122]*100,0)) + &quot;%&quot; // Percentage&#13;&#10;ELSEIF [Calculation_1115766813349253122] &lt;= 3000 THEN STR(ROUND([Calculation_1115766813349253122],0))  // Population&#13;&#10;ELSEIF [Calculation_1115766813349253122] &gt; 3000 THEN &quot;$ &quot; +  STR(ROUND([Calculation_1115766813349253122]/1000,0)) + &quot;,000&quot; // Currency&#13;&#10;END' />
            </column>
            <column caption='Med Hh Income' datatype='real' name='[Med_Hh_Income]' role='measure' type='quantitative' />
            <column datatype='real' name='[Own]' role='measure' type='quantitative' />
            <column datatype='real' name='[ParcelCount]' role='measure' type='quantitative' />
            <column caption='Pc income' datatype='real' name='[Pc_income]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Rent]' role='measure' type='quantitative' />
            <column datatype='real' name='[White alone]' role='measure' type='quantitative' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column caption='Council District' datatype='string' name='[council_district]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;SCC1&quot;' value='D1' />
                <alias key='&quot;SCC2&quot;' value='D2' />
                <alias key='&quot;SCC3&quot;' value='D3' />
                <alias key='&quot;SCC4&quot;' value='D4' />
                <alias key='&quot;SCC5&quot;' value='D5' />
                <alias key='&quot;SCC6&quot;' value='D6' />
                <alias key='&quot;SCC7&quot;' value='D7' />
              </aliases>
            </column>
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1115766813350019075]' derivation='None' name='[none:Calculation_1115766813350019075:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1115766813408124936]' derivation='None' name='[none:Calculation_1115766813408124936:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter Year Parameter (copy)]' derivation='None' name='[none:Filter Year Parameter (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_-7112872654770298880]' derivation='User' name='[usr:Calculation_-7112872654770298880:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1115766813349150721]' derivation='User' name='[usr:Calculation_1115766813349150721:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1115766813349253122]' derivation='User' name='[usr:Calculation_1115766813349253122:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Indicator1Text (copy)]' derivation='User' name='[usr:Indicator1Text (copy):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813350019075:nk]'>
            <groupfilter function='member' level='[none:Calculation_1115766813350019075:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813408124936:nk]'>
            <groupfilter function='member' level='[none:Calculation_1115766813408124936:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Filter Year Parameter (copy):nk]'>
            <groupfilter function='member' level='[none:Filter Year Parameter (copy):nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813350019075:nk]</column>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813408124936:nk]</column>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Filter Year Parameter (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_1115766813349150721:qk]' field-type='quantitative' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_1115766813349150721:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_1115766813349150721:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_1115766813349253122:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_1115766813349253122:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_1115766813349253122:qk]' scope='rows' value='true' />
            <format attr='width' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_1115766813349253122:qk]' value='56' />
            <format attr='title' class='0' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_1115766813349253122:qk]' scope='rows' value=' ' />
            <format attr='title' class='0' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_1115766813349150721:qk]' scope='cols' value=' ' />
            <format attr='height' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_1115766813349150721:qk]' value='36' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:location:nk]' />
              <tooltip column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_-7112872654770298880:nk]' />
              <tooltip column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator1Text (copy):nk]' />
            </encodings>
            <trendline enable-confidence-bands='true' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Location:&#9;</run>
                <run bold='true'>&lt;[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:location:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>&lt;[Parameters].[Parameter 1]&gt;:&#9;</run>
                <run bold='true'>&lt;[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_-7112872654770298880:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>&lt;[Parameters].[Indicator1 Parameter (copy)]&gt;:&#9;</run>
                <run bold='true'>&lt;[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator1Text (copy):nk]&gt;</run>
                <run>Æ&#10;&#10;</run>
                <run fontcolor='#787878'>Council District:&#9;</run>
                <run bold='true'>&lt;[federated.0d0gcge13r4nep1fh11bu04aw7pm].[attr:council_district:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Geographical Area:&#9;</run>
                <run bold='true'>&lt;[federated.0d0gcge13r4nep1fh11bu04aw7pm].[attr:geographical_area:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Neigbhorhood Long:&#9;</run>
                <run bold='true'>&lt;[federated.0d0gcge13r4nep1fh11bu04aw7pm].[attr:neigbhorhood_long:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Neighborhood Short:&#9;</run>
                <run bold='true'>&lt;[federated.0d0gcge13r4nep1fh11bu04aw7pm].[attr:neighborhood_short:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Urban Village:&#9;</run>
                <run bold='true'>&lt;[federated.0d0gcge13r4nep1fh11bu04aw7pm].[attr:urban_village:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Zipcode:&#9;</run>
                <run bold='true'>&lt;[federated.0d0gcge13r4nep1fh11bu04aw7pm].[attr:zipcode:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.58171272277832031' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#333333' />
                <format attr='mark-transparency' value='180' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='2' />
                <format attr='stroke-color' value='#1691d0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_1115766813349253122:qk]</rows>
        <cols>[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_1115766813349150721:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Compare Header'>
      <table>
        <view>
          <datasources>
            <datasource caption='Demographics' name='federated.004akfr0ztvque1dvtnym0ol9g6i' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Indicator2 Parameter' datatype='string' name='[Indicator1 Parameter (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Percent Food Stamps&quot;'>
              <calculation class='tableau' formula='&quot;Percent Food Stamps&quot;' />
            </column>
            <column caption='Indicator1 Parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Percent POC&quot;'>
              <calculation class='tableau' formula='&quot;Percent POC&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.004akfr0ztvque1dvtnym0ol9g6i'>
            <column caption='Compare Header' datatype='string' name='[Calculation_-7112872654698848246]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;Are &quot; + Replace([Parameters].[Parameter 1],&quot;Percent &quot;,&quot;&quot;) + &quot; and &quot; + REPLACE([Parameters].[Indicator1 Parameter (copy)],&quot;Percent &quot;,&quot;&quot; ) + &quot; correlated?&quot;' />
            </column>
            <column-instance column='[Calculation_-7112872654698848246]' derivation='None' name='[none:Calculation_-7112872654698848246:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='932' />
            <format attr='font-family' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_-7112872654698848246:nk]' value='Tableau Semibold' />
            <format attr='font-weight' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_-7112872654698848246:nk]' value='bold' />
            <format attr='color' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_-7112872654698848246:nk]' value='#000000' />
            <format attr='text-align' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_-7112872654698848246:nk]' value='center' />
            <format attr='vertical-align' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_-7112872654698848246:nk]' value='center' />
            <format attr='font-size' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_-7112872654698848246:nk]' value='12' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_-7112872654698848246:nk]' value='center' />
            <format attr='font-family' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_-7112872654698848246:nk]' value='Tableau Semibold' />
            <format attr='font-size' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_-7112872654698848246:nk]' value='14' />
            <format attr='color' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_-7112872654698848246:nk]' value='#1b1b1b' />
            <format attr='font-weight' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_-7112872654698848246:nk]' value='bold' />
            <format attr='vertical-align' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_-7112872654698848246:nk]' value='bottom' />
            <format attr='wrap' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_-7112872654698848246:nk]' value='on' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_-7112872654698848246:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Compare Narrative'>
      <table>
        <view>
          <datasources>
            <datasource caption='Demographics' name='federated.004akfr0ztvque1dvtnym0ol9g6i' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Indicator2 Parameter' datatype='string' name='[Indicator1 Parameter (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Percent Food Stamps&quot;'>
              <calculation class='tableau' formula='&quot;Percent Food Stamps&quot;' />
            </column>
            <column caption='Indicator1 Parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Percent POC&quot;'>
              <calculation class='tableau' formula='&quot;Percent POC&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.004akfr0ztvque1dvtnym0ol9g6i'>
            <column caption='Compare Narrative' datatype='string' name='[Compare Header (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;Each dot in the chart above represents one census block group of around 1,500 people. &quot; + &#13;&#10;&quot;The trend line can provide a sense of whether there is a relationship between the two metrics. &quot; +&#13;&#10;&quot;A upward sloping line indicates that &quot; + [Parameters].[Parameter 1] + &quot; is correlated with &quot; + [Parameters].[Indicator1 Parameter (copy)] + &quot;. &quot; +&#13;&#10;&quot;An downward sloping line implies a negative correlation, so the higher the &quot; + [Parameters].[Parameter 1] + &quot;, the lower the &quot; + [Parameters].[Indicator1 Parameter (copy)] + &quot;.&quot;' />
            </column>
            <column-instance column='[Compare Header (copy)]' derivation='None' name='[none:Compare Header (copy):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='932' />
            <format attr='height' value='71' />
            <format attr='font-size' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Compare Header (copy):nk]' value='10' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Compare Header (copy):nk]' value='11' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Compare Header (copy):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='CompareHistogram1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Demographics' name='federated.004akfr0ztvque1dvtnym0ol9g6i' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Indicator1 Parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Percent POC&quot;'>
              <calculation class='tableau' formula='&quot;Percent POC&quot;' />
            </column>
            <column caption='Council District Parameter' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;ALL DISTRICTS&quot;'>
              <calculation class='tableau' formula='&quot;ALL DISTRICTS&quot;' />
              <aliases>
                <alias key='&quot;SCC1&quot;' value='D1' />
                <alias key='&quot;SCC2&quot;' value='D2' />
                <alias key='&quot;SCC3&quot;' value='D3' />
                <alias key='&quot;SCC4&quot;' value='D4' />
                <alias key='&quot;SCC5&quot;' value='D5' />
                <alias key='&quot;SCC6&quot;' value='D6' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.004akfr0ztvque1dvtnym0ol9g6i'>
            <column datatype='real' name='[Asian alone]' role='measure' type='quantitative' />
            <column datatype='real' name='[AveSalePrice]' role='measure' type='quantitative' />
            <column datatype='real' name='[Black or African American alone]' role='measure' type='quantitative' />
            <column datatype='string' name='[Blockgroup]' role='dimension' type='nominal' />
            <column caption='Indicator 1' datatype='real' name='[Calculation_1115766813349150721]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;Percent POC&quot; THEN (1-AVG([White alone]))&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Percent Own&quot; THEN AVG([Own])&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Percent Rent&quot; THEN AVG([Rent]) &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Percent Asian&quot; THEN AVG([Asian alone]) &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Percent Black&quot; THEN AVG([Black or African American alone])&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Percent White&quot; THEN AVG([White alone]) &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Percent Food Stamps&quot; THEN AVG([Food Stamps]) &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Percent Four Year College&quot; THEN AVG([Four Year College]) &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Median Household Income&quot; THEN AVG([Med_Hh_Income]) &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Per Capita Income&quot; THEN AVG([Pc_income]) &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Population&quot; THEN AVG([Population])&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Dist Downtown&quot; THEN AVG([Dist Downtown])&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Sales Price&quot; THEN AVG([AveSalePrice])&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Sales Volume&quot; THEN AVG([ParcelCount])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Filter Council District' datatype='boolean' name='[Calculation_1115766813350019075]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[council_district] != &quot;None&quot;' />
            </column>
            <column caption='Indicator 1 Bin' datatype='real' name='[Calculation_1115766813361057796]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;Dist Downtown&quot; THEN ROUND([Calculation_1115766813349150721],1)&#13;&#10;&#13;&#10;ELSEIF [Calculation_1115766813349150721] &gt; 0.95 AND [Calculation_1115766813349150721] &lt;= 1.0 THEN .95&#13;&#10;ELSEIF [Calculation_1115766813349150721] &gt; 0.90 AND [Calculation_1115766813349150721] &lt;= .95 THEN .90&#13;&#10;ELSEIF [Calculation_1115766813349150721] &gt; 0.85 AND [Calculation_1115766813349150721] &lt;= .90 THEN .85&#13;&#10;ELSEIF [Calculation_1115766813349150721] &gt; 0.80 AND [Calculation_1115766813349150721] &lt;= .85 THEN .80&#13;&#10;ELSEIF [Calculation_1115766813349150721] &gt; 0.75 AND [Calculation_1115766813349150721] &lt;= .80 THEN .75&#13;&#10;ELSEIF [Calculation_1115766813349150721] &gt; 0.70 AND [Calculation_1115766813349150721] &lt;= .75 THEN .70&#13;&#10;ELSEIF [Calculation_1115766813349150721] &gt; 0.65 AND [Calculation_1115766813349150721] &lt;= .70 THEN .65&#13;&#10;ELSEIF [Calculation_1115766813349150721] &gt; 0.60 AND [Calculation_1115766813349150721] &lt;= .65 THEN .60&#13;&#10;ELSEIF [Calculation_1115766813349150721] &gt; 0.55 AND [Calculation_1115766813349150721] &lt;= .60 THEN .55&#13;&#10;ELSEIF [Calculation_1115766813349150721] &gt; 0.50 AND [Calculation_1115766813349150721] &lt;= .55 THEN .50&#13;&#10;ELSEIF [Calculation_1115766813349150721] &gt; 0.45 AND [Calculation_1115766813349150721] &lt;= .50 THEN .45&#13;&#10;ELSEIF [Calculation_1115766813349150721] &gt; 0.40 AND [Calculation_1115766813349150721] &lt;= .45 THEN .40&#13;&#10;ELSEIF [Calculation_1115766813349150721] &gt; 0.35 AND [Calculation_1115766813349150721] &lt;= .40 THEN .35&#13;&#10;ELSEIF [Calculation_1115766813349150721] &gt; 0.30 AND [Calculation_1115766813349150721] &lt;= .35 THEN .30&#13;&#10;ELSEIF [Calculation_1115766813349150721] &gt; 0.25 AND [Calculation_1115766813349150721] &lt;= .30 THEN .25&#13;&#10;ELSEIF [Calculation_1115766813349150721] &gt; 0.20 AND [Calculation_1115766813349150721] &lt;= .25 THEN .20&#13;&#10;ELSEIF [Calculation_1115766813349150721] &gt; 0.15 AND [Calculation_1115766813349150721] &lt;= .20 THEN .15&#13;&#10;ELSEIF [Calculation_1115766813349150721] &gt; 0.10 AND [Calculation_1115766813349150721] &lt;= .15 THEN .10&#13;&#10;ELSEIF [Calculation_1115766813349150721] &gt; 0.05 AND [Calculation_1115766813349150721] &lt;= .10 THEN .05&#13;&#10;ELSEIF [Calculation_1115766813349150721] &gt; 0.00 AND [Calculation_1115766813349150721] &lt;= .05 THEN .00&#13;&#10;ELSEIF [Calculation_1115766813349150721] &lt; 5000 THEN ROUND([Calculation_1115766813349150721]/100,0)*100&#13;&#10;ELSE ROUND([Calculation_1115766813349150721]/10000,0)*10000&#13;&#10;END' />
            </column>
            <column datatype='real' name='[Dist Downtown]' role='measure' type='quantitative' />
            <column caption='Filter Council District Parameter' datatype='boolean' name='[Filter Year Parameter (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[council_district] = [Parameters].[Parameter 3] OR [Parameters].[Parameter 3] = &quot;ALL DISTRICTS&quot;' />
            </column>
            <column datatype='real' name='[Food Stamps]' role='measure' type='quantitative' />
            <column datatype='real' name='[Four Year College]' role='measure' type='quantitative' />
            <column caption='Med Hh Income' datatype='real' name='[Med_Hh_Income]' role='measure' type='quantitative' />
            <column datatype='real' name='[Own]' role='measure' type='quantitative' />
            <column datatype='real' name='[ParcelCount]' role='measure' type='quantitative' />
            <column caption='Pc income' datatype='real' name='[Pc_income]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Rent]' role='measure' type='quantitative' />
            <column datatype='real' name='[White alone]' role='measure' type='quantitative' />
            <column caption='Council District' datatype='string' name='[council_district]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;SCC1&quot;' value='D1' />
                <alias key='&quot;SCC2&quot;' value='D2' />
                <alias key='&quot;SCC3&quot;' value='D3' />
                <alias key='&quot;SCC4&quot;' value='D4' />
                <alias key='&quot;SCC5&quot;' value='D5' />
                <alias key='&quot;SCC6&quot;' value='D6' />
                <alias key='&quot;SCC7&quot;' value='D7' />
              </aliases>
            </column>
            <column-instance column='[Blockgroup]' derivation='CountD' name='[ctd:Blockgroup:qk]' pivot='key' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1115766813350019075]' derivation='None' name='[none:Calculation_1115766813350019075:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter Year Parameter (copy)]' derivation='None' name='[none:Filter Year Parameter (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1115766813349150721]' derivation='User' name='[usr:Calculation_1115766813349150721:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1115766813361057796]' derivation='User' name='[usr:Calculation_1115766813361057796:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813350019075:nk]'>
            <groupfilter function='member' level='[none:Calculation_1115766813350019075:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Filter Year Parameter (copy):nk]'>
            <groupfilter function='member' level='[none:Filter Year Parameter (copy):nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813350019075:nk]</column>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Filter Year Parameter (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[ctd:Blockgroup:qk]' scope='rows' value='' />
            <format attr='subtitle' class='0' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[ctd:Blockgroup:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[ctd:Blockgroup:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_1115766813361057796:qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_1115766813361057796:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_1115766813361057796:qk]' scope='cols' value='true' />
            <format attr='height' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_1115766813361057796:qk]' value='21' />
            <format attr='display' class='0' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[ctd:Blockgroup:qk]' scope='rows' value='false' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='tick-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' data-class='total' scope='rows' value='none' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_1115766813349150721:qk]' palette='red_green_gold_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' scope='rows' value='none' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_1115766813349150721:qk]' />
              <lod column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.5487293004989624' />
                <format attr='mark-color' value='#492f92' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.004akfr0ztvque1dvtnym0ol9g6i].[ctd:Blockgroup:qk]</rows>
        <cols>[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_1115766813361057796:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='CompareHistogram2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Demographics' name='federated.004akfr0ztvque1dvtnym0ol9g6i' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Indicator2 Parameter' datatype='string' name='[Indicator1 Parameter (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Percent Food Stamps&quot;'>
              <calculation class='tableau' formula='&quot;Percent Food Stamps&quot;' />
            </column>
            <column caption='Council District Parameter' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;ALL DISTRICTS&quot;'>
              <calculation class='tableau' formula='&quot;ALL DISTRICTS&quot;' />
              <aliases>
                <alias key='&quot;SCC1&quot;' value='D1' />
                <alias key='&quot;SCC2&quot;' value='D2' />
                <alias key='&quot;SCC3&quot;' value='D3' />
                <alias key='&quot;SCC4&quot;' value='D4' />
                <alias key='&quot;SCC5&quot;' value='D5' />
                <alias key='&quot;SCC6&quot;' value='D6' />
              </aliases>
            </column>
            <column caption='Year Parameter' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;ALL YEARS&quot;'>
              <calculation class='tableau' formula='&quot;ALL YEARS&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.004akfr0ztvque1dvtnym0ol9g6i'>
            <column datatype='real' name='[Asian alone]' role='measure' type='quantitative' />
            <column datatype='real' name='[AveSalePrice]' role='measure' type='quantitative' />
            <column datatype='real' name='[Black or African American alone]' role='measure' type='quantitative' />
            <column datatype='string' name='[Blockgroup]' role='dimension' type='nominal' />
            <column caption='Indicator 2' datatype='real' name='[Calculation_1115766813349253122]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Indicator1 Parameter (copy)] = &quot;Percent POC&quot; THEN (1-AVG([White alone]))&#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Percent Own&quot; THEN AVG([Own])&#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Percent Rent&quot; THEN AVG([Rent]) &#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Percent Asian&quot; THEN AVG([Asian alone]) &#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Percent Black&quot; THEN AVG([Black or African American alone])&#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Percent White&quot; THEN AVG([White alone]) &#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Percent Food Stamps&quot; THEN AVG([Food Stamps]) &#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Percent Four Year College&quot; THEN AVG([Four Year College]) &#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Median Household Income&quot; THEN AVG([Med_Hh_Income]) &#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Per Capita Income&quot; THEN AVG([Pc_income]) &#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Population&quot; THEN AVG([Population])&#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Dist Downtown&quot; THEN AVG([Dist Downtown])&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Sales Price&quot; THEN AVG([AveSalePrice])&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Sales Volume&quot; THEN AVG([ParcelCount])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Filter Council District' datatype='boolean' name='[Calculation_1115766813350019075]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[council_district] != &quot;None&quot;' />
            </column>
            <column caption='Filter Year Parameter' datatype='boolean' name='[Calculation_1115766813408124936]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Year] = [Parameters].[Parameter 4] OR [Parameters].[Parameter 4] = &quot;ALL YEARS&quot;' />
            </column>
            <column datatype='real' name='[Dist Downtown]' role='measure' type='quantitative' />
            <column caption='Filter Council District Parameter' datatype='boolean' name='[Filter Year Parameter (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[council_district] = [Parameters].[Parameter 3] OR [Parameters].[Parameter 3] = &quot;ALL DISTRICTS&quot;' />
            </column>
            <column datatype='real' name='[Food Stamps]' role='measure' type='quantitative' />
            <column datatype='real' name='[Four Year College]' role='measure' type='quantitative' />
            <column caption='Indicator 2 Bin' datatype='real' name='[Indicator 1 Bin (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Indicator1 Parameter (copy)] = &quot;Dist Downtown&quot; THEN ROUND([Calculation_1115766813349253122],1)&#13;&#10;&#13;&#10;ELSEIF [Calculation_1115766813349253122] &gt; 0.95 AND [Calculation_1115766813349253122] &lt;= 1.0 THEN .95&#13;&#10;ELSEIF [Calculation_1115766813349253122] &gt; 0.90 AND [Calculation_1115766813349253122] &lt;= .95 THEN .90&#13;&#10;ELSEIF [Calculation_1115766813349253122] &gt; 0.85 AND [Calculation_1115766813349253122] &lt;= .90 THEN .85&#13;&#10;ELSEIF [Calculation_1115766813349253122] &gt; 0.80 AND [Calculation_1115766813349253122] &lt;= .85 THEN .80&#13;&#10;ELSEIF [Calculation_1115766813349253122] &gt; 0.75 AND [Calculation_1115766813349253122] &lt;= .80 THEN .75&#13;&#10;ELSEIF [Calculation_1115766813349253122] &gt; 0.70 AND [Calculation_1115766813349253122] &lt;= .75 THEN .70&#13;&#10;ELSEIF [Calculation_1115766813349253122] &gt; 0.65 AND [Calculation_1115766813349253122] &lt;= .70 THEN .65&#13;&#10;ELSEIF [Calculation_1115766813349253122] &gt; 0.60 AND [Calculation_1115766813349253122] &lt;= .65 THEN .60&#13;&#10;ELSEIF [Calculation_1115766813349253122] &gt; 0.55 AND [Calculation_1115766813349253122] &lt;= .60 THEN .55&#13;&#10;ELSEIF [Calculation_1115766813349253122] &gt; 0.50 AND [Calculation_1115766813349253122] &lt;= .55 THEN .50&#13;&#10;ELSEIF [Calculation_1115766813349253122] &gt; 0.45 AND [Calculation_1115766813349253122] &lt;= .50 THEN .45&#13;&#10;ELSEIF [Calculation_1115766813349253122] &gt; 0.40 AND [Calculation_1115766813349253122] &lt;= .45 THEN .40&#13;&#10;ELSEIF [Calculation_1115766813349253122] &gt; 0.35 AND [Calculation_1115766813349253122] &lt;= .40 THEN .35&#13;&#10;ELSEIF [Calculation_1115766813349253122] &gt; 0.30 AND [Calculation_1115766813349253122] &lt;= .35 THEN .30&#13;&#10;ELSEIF [Calculation_1115766813349253122] &gt; 0.25 AND [Calculation_1115766813349253122] &lt;= .30 THEN .25&#13;&#10;ELSEIF [Calculation_1115766813349253122] &gt; 0.20 AND [Calculation_1115766813349253122] &lt;= .25 THEN .20&#13;&#10;ELSEIF [Calculation_1115766813349253122] &gt; 0.15 AND [Calculation_1115766813349253122] &lt;= .20 THEN .15&#13;&#10;ELSEIF [Calculation_1115766813349253122] &gt; 0.10 AND [Calculation_1115766813349253122] &lt;= .15 THEN .10&#13;&#10;ELSEIF [Calculation_1115766813349253122] &gt; 0.05 AND [Calculation_1115766813349253122] &lt;= .10 THEN .05&#13;&#10;ELSEIF [Calculation_1115766813349253122] &gt; 0.00 AND [Calculation_1115766813349253122] &lt;= .05 THEN .00&#13;&#10;ELSEIF [Calculation_1115766813349253122] &lt; 5000 THEN ROUND([Calculation_1115766813349253122]/100,0)*100&#13;&#10;ELSE ROUND([Calculation_1115766813349253122]/10000,0)*10000&#13;&#10;END' />
            </column>
            <column caption='Med Hh Income' datatype='real' name='[Med_Hh_Income]' role='measure' type='quantitative' />
            <column datatype='real' name='[Own]' role='measure' type='quantitative' />
            <column datatype='real' name='[ParcelCount]' role='measure' type='quantitative' />
            <column caption='Pc income' datatype='real' name='[Pc_income]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Rent]' role='measure' type='quantitative' />
            <column datatype='real' name='[White alone]' role='measure' type='quantitative' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column caption='Council District' datatype='string' name='[council_district]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;SCC1&quot;' value='D1' />
                <alias key='&quot;SCC2&quot;' value='D2' />
                <alias key='&quot;SCC3&quot;' value='D3' />
                <alias key='&quot;SCC4&quot;' value='D4' />
                <alias key='&quot;SCC5&quot;' value='D5' />
                <alias key='&quot;SCC6&quot;' value='D6' />
                <alias key='&quot;SCC7&quot;' value='D7' />
              </aliases>
            </column>
            <column-instance column='[Blockgroup]' derivation='CountD' name='[ctd:Blockgroup:qk]' pivot='key' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1115766813350019075]' derivation='None' name='[none:Calculation_1115766813350019075:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1115766813408124936]' derivation='None' name='[none:Calculation_1115766813408124936:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter Year Parameter (copy)]' derivation='None' name='[none:Filter Year Parameter (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1115766813349253122]' derivation='User' name='[usr:Calculation_1115766813349253122:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Indicator 1 Bin (copy)]' derivation='User' name='[usr:Indicator 1 Bin (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813350019075:nk]'>
            <groupfilter function='member' level='[none:Calculation_1115766813350019075:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813408124936:nk]'>
            <groupfilter function='member' level='[none:Calculation_1115766813408124936:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Filter Year Parameter (copy):nk]'>
            <groupfilter function='member' level='[none:Filter Year Parameter (copy):nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813350019075:nk]</column>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813408124936:nk]</column>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Filter Year Parameter (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[ctd:Blockgroup:qk]' scope='rows' value='' />
            <format attr='subtitle' class='0' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[ctd:Blockgroup:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[ctd:Blockgroup:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator 1 Bin (copy):qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator 1 Bin (copy):qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator 1 Bin (copy):qk]' scope='cols' value='true' />
            <format attr='display' class='0' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[ctd:Blockgroup:qk]' scope='rows' value='false' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='tick-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' data-class='total' scope='cols' value='none' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_1115766813349253122:qk]' palette='red_green_gold_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' scope='cols' value='none' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_1115766813349253122:qk]' />
              <lod column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.5487293004989624' />
                <format attr='mark-color' value='#492f92' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.004akfr0ztvque1dvtnym0ol9g6i].[ctd:Blockgroup:qk]</rows>
        <cols>[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator 1 Bin (copy):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='CompareSlice1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Demographics' name='federated.004akfr0ztvque1dvtnym0ol9g6i' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Indicator0 Parameter' datatype='string' name='[Indicator2 Parameter (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Percent Food Stamps&quot;'>
              <calculation class='tableau' formula='&quot;Percent Food Stamps&quot;' />
            </column>
            <column caption='Indicator1 Parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Percent POC&quot;'>
              <calculation class='tableau' formula='&quot;Percent POC&quot;' />
            </column>
            <column caption='Council District Parameter' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;ALL DISTRICTS&quot;'>
              <calculation class='tableau' formula='&quot;ALL DISTRICTS&quot;' />
              <aliases>
                <alias key='&quot;SCC1&quot;' value='D1' />
                <alias key='&quot;SCC2&quot;' value='D2' />
                <alias key='&quot;SCC3&quot;' value='D3' />
                <alias key='&quot;SCC4&quot;' value='D4' />
                <alias key='&quot;SCC5&quot;' value='D5' />
                <alias key='&quot;SCC6&quot;' value='D6' />
              </aliases>
            </column>
            <column caption='Year Parameter' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;ALL YEARS&quot;'>
              <calculation class='tableau' formula='&quot;ALL YEARS&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.004akfr0ztvque1dvtnym0ol9g6i'>
            <column datatype='real' name='[Asian alone]' role='measure' type='quantitative' />
            <column datatype='real' name='[AveSalePrice]' role='measure' type='quantitative' />
            <column datatype='real' name='[Black or African American alone]' role='measure' type='quantitative' />
            <column datatype='string' name='[Blockgroup]' role='dimension' type='nominal' />
            <column caption='Indicator 1' datatype='real' name='[Calculation_1115766813349150721]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;Percent POC&quot; THEN (1-AVG([White alone]))&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Percent Own&quot; THEN AVG([Own])&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Percent Rent&quot; THEN AVG([Rent]) &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Percent Asian&quot; THEN AVG([Asian alone]) &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Percent Black&quot; THEN AVG([Black or African American alone])&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Percent White&quot; THEN AVG([White alone]) &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Percent Food Stamps&quot; THEN AVG([Food Stamps]) &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Percent Four Year College&quot; THEN AVG([Four Year College]) &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Median Household Income&quot; THEN AVG([Med_Hh_Income]) &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Per Capita Income&quot; THEN AVG([Pc_income]) &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Population&quot; THEN AVG([Population])&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Dist Downtown&quot; THEN AVG([Dist Downtown])&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Sales Price&quot; THEN AVG([AveSalePrice])&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Sales Volume&quot; THEN AVG([ParcelCount])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Filter Year Parameter' datatype='boolean' name='[Calculation_1115766813408124936]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Year] = [Parameters].[Parameter 4] OR [Parameters].[Parameter 4] = &quot;ALL YEARS&quot;' />
            </column>
            <column datatype='real' name='[Dist Downtown]' role='measure' type='quantitative' />
            <column caption='Filter Council District Parameter' datatype='boolean' name='[Filter Year Parameter (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[council_district] = [Parameters].[Parameter 3] OR [Parameters].[Parameter 3] = &quot;ALL DISTRICTS&quot;' />
            </column>
            <column datatype='real' name='[Food Stamps]' role='measure' type='quantitative' />
            <column datatype='real' name='[Four Year College]' role='measure' type='quantitative' />
            <column datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
            <column caption='Indicator 0 NonAgg' datatype='real' name='[Indicator 0 (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent POC&quot; THEN 1-[White alone]&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Own&quot; THEN [Own]&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Rent&quot; THEN [Rent]&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Asian&quot; THEN [Asian alone]&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Black&quot; THEN [Black or African American alone]&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent White&quot; THEN [White alone]&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Food Stamps&quot; THEN [Food Stamps]&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Four Year College&quot; THEN [Four Year College]&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Median Household Income&quot; THEN [Med_Hh_Income]&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Per Capita Income&quot; THEN [Pc_income]&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Population&quot; THEN [Population]&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Dist Downtown&quot; THEN [Dist Downtown]&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Sales Price&quot; THEN [AveSalePrice]&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Sales Volume&quot; THEN [ParcelCount]&#13;&#10;END' />
            </column>
            <column caption='Indicator 0 Label' datatype='string' name='[Indicator 2 Label (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Indicator2 Parameter (copy)]' />
            </column>
            <column caption='Indicator0TextMed' datatype='string' name='[Indicator0Text (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Indicator2 Parameter (copy)] = &quot;Dist Downtown&quot; THEN  STR(ROUND(MEDIAN([Indicator 0 (copy)]),1)) + &quot; Miles&quot; // Distance&#13;&#10;&#13;&#10;ELSEIF MEDIAN([Indicator 0 (copy)]) &lt;= 1 THEN STR(ROUND(MEDIAN([Indicator 0 (copy)])*100,0)) + &quot;%&quot; // Percentage&#13;&#10;ELSEIF MEDIAN([Indicator 0 (copy)]) &lt;= 3000 THEN STR(ROUND(MEDIAN([Indicator 0 (copy)]),0))  // Population&#13;&#10;ELSEIF MEDIAN([Indicator 0 (copy)]) &gt; 3000 THEN &quot;$ &quot; +  STR(ROUND(MEDIAN([Indicator 0 (copy)])/1000)) + &quot;,000&quot; // Currency&#13;&#10;END' />
            </column>
            <column caption='Med Hh Income' datatype='real' name='[Med_Hh_Income]' role='measure' type='quantitative' />
            <column datatype='real' name='[Own]' role='measure' type='quantitative' />
            <column datatype='real' name='[ParcelCount]' role='measure' type='quantitative' />
            <column caption='Pc income' datatype='real' name='[Pc_income]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Rent]' role='measure' type='quantitative' />
            <column datatype='real' name='[White alone]' role='measure' type='quantitative' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Indicator 2 Label (copy)]' derivation='Attribute' name='[attr:Indicator 2 Label (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Geometry]' derivation='Collect' name='[clct:Geometry:nk]' pivot='key' type='nominal' />
            <column caption='Council District' datatype='string' name='[council_district]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;SCC1&quot;' value='D1' />
                <alias key='&quot;SCC2&quot;' value='D2' />
                <alias key='&quot;SCC3&quot;' value='D3' />
                <alias key='&quot;SCC4&quot;' value='D4' />
                <alias key='&quot;SCC5&quot;' value='D5' />
                <alias key='&quot;SCC6&quot;' value='D6' />
                <alias key='&quot;SCC7&quot;' value='D7' />
              </aliases>
            </column>
            <column-instance column='[Blockgroup]' derivation='None' name='[none:Blockgroup:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1115766813408124936]' derivation='None' name='[none:Calculation_1115766813408124936:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter Year Parameter (copy)]' derivation='None' name='[none:Filter Year Parameter (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1115766813349150721]' derivation='User' name='[usr:Calculation_1115766813349150721:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Indicator0Text (copy)]' derivation='User' name='[usr:Indicator0Text (copy):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813408124936:nk]'>
            <groupfilter function='member' level='[none:Calculation_1115766813408124936:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Filter Year Parameter (copy):nk]'>
            <groupfilter function='member' level='[none:Filter Year Parameter (copy):nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813408124936:nk]</column>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Filter Year Parameter (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_1115766813349150721:qk]' num-steps='5' palette='red_green_gold_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_1115766813349150721:qk]' />
              <lod column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[clct:Geometry:nk]' />
              <lod column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Blockgroup:nk]' />
              <tooltip column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[attr:Indicator 2 Label (copy):nk]' />
              <tooltip column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator0Text (copy):nk]' />
              <geometry column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[clct:Geometry:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>BG </run>
                <run bold='true'>&lt;[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Blockgroup:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true'>&lt;[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator0Text (copy):nk]&gt; &lt;[federated.004akfr0ztvque1dvtnym0ol9g6i].[attr:Indicator 2 Label (copy):nk]&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#ffffff' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.004akfr0ztvque1dvtnym0ol9g6i].[Latitude (generated)]</rows>
        <cols>[federated.004akfr0ztvque1dvtnym0ol9g6i].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='CompareSlice2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Demographics' name='federated.004akfr0ztvque1dvtnym0ol9g6i' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Indicator2 Parameter' datatype='string' name='[Indicator1 Parameter (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Percent Food Stamps&quot;'>
              <calculation class='tableau' formula='&quot;Percent Food Stamps&quot;' />
            </column>
            <column caption='Indicator0 Parameter' datatype='string' name='[Indicator2 Parameter (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Percent Food Stamps&quot;'>
              <calculation class='tableau' formula='&quot;Percent Food Stamps&quot;' />
            </column>
            <column caption='Council District Parameter' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;ALL DISTRICTS&quot;'>
              <calculation class='tableau' formula='&quot;ALL DISTRICTS&quot;' />
              <aliases>
                <alias key='&quot;SCC1&quot;' value='D1' />
                <alias key='&quot;SCC2&quot;' value='D2' />
                <alias key='&quot;SCC3&quot;' value='D3' />
                <alias key='&quot;SCC4&quot;' value='D4' />
                <alias key='&quot;SCC5&quot;' value='D5' />
                <alias key='&quot;SCC6&quot;' value='D6' />
              </aliases>
            </column>
            <column caption='Year Parameter' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;ALL YEARS&quot;'>
              <calculation class='tableau' formula='&quot;ALL YEARS&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.004akfr0ztvque1dvtnym0ol9g6i'>
            <column datatype='real' name='[Asian alone]' role='measure' type='quantitative' />
            <column datatype='real' name='[AveSalePrice]' role='measure' type='quantitative' />
            <column datatype='real' name='[Black or African American alone]' role='measure' type='quantitative' />
            <column datatype='string' name='[Blockgroup]' role='dimension' type='nominal' />
            <column caption='Indicator 2' datatype='real' name='[Calculation_1115766813349253122]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Indicator1 Parameter (copy)] = &quot;Percent POC&quot; THEN (1-AVG([White alone]))&#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Percent Own&quot; THEN AVG([Own])&#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Percent Rent&quot; THEN AVG([Rent]) &#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Percent Asian&quot; THEN AVG([Asian alone]) &#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Percent Black&quot; THEN AVG([Black or African American alone])&#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Percent White&quot; THEN AVG([White alone]) &#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Percent Food Stamps&quot; THEN AVG([Food Stamps]) &#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Percent Four Year College&quot; THEN AVG([Four Year College]) &#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Median Household Income&quot; THEN AVG([Med_Hh_Income]) &#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Per Capita Income&quot; THEN AVG([Pc_income]) &#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Population&quot; THEN AVG([Population])&#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Dist Downtown&quot; THEN AVG([Dist Downtown])&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Sales Price&quot; THEN AVG([AveSalePrice])&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Sales Volume&quot; THEN AVG([ParcelCount])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Filter Year Parameter' datatype='boolean' name='[Calculation_1115766813408124936]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Year] = [Parameters].[Parameter 4] OR [Parameters].[Parameter 4] = &quot;ALL YEARS&quot;' />
            </column>
            <column datatype='real' name='[Dist Downtown]' role='measure' type='quantitative' />
            <column caption='Filter Council District Parameter' datatype='boolean' name='[Filter Year Parameter (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[council_district] = [Parameters].[Parameter 3] OR [Parameters].[Parameter 3] = &quot;ALL DISTRICTS&quot;' />
            </column>
            <column datatype='real' name='[Food Stamps]' role='measure' type='quantitative' />
            <column datatype='real' name='[Four Year College]' role='measure' type='quantitative' />
            <column datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
            <column caption='Indicator 0 NonAgg' datatype='real' name='[Indicator 0 (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent POC&quot; THEN 1-[White alone]&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Own&quot; THEN [Own]&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Rent&quot; THEN [Rent]&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Asian&quot; THEN [Asian alone]&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Black&quot; THEN [Black or African American alone]&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent White&quot; THEN [White alone]&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Food Stamps&quot; THEN [Food Stamps]&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Four Year College&quot; THEN [Four Year College]&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Median Household Income&quot; THEN [Med_Hh_Income]&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Per Capita Income&quot; THEN [Pc_income]&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Population&quot; THEN [Population]&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Dist Downtown&quot; THEN [Dist Downtown]&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Sales Price&quot; THEN [AveSalePrice]&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Sales Volume&quot; THEN [ParcelCount]&#13;&#10;END' />
            </column>
            <column caption='Indicator 0 Label' datatype='string' name='[Indicator 2 Label (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Indicator2 Parameter (copy)]' />
            </column>
            <column caption='Indicator0TextMed' datatype='string' name='[Indicator0Text (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Indicator2 Parameter (copy)] = &quot;Dist Downtown&quot; THEN  STR(ROUND(MEDIAN([Indicator 0 (copy)]),1)) + &quot; Miles&quot; // Distance&#13;&#10;&#13;&#10;ELSEIF MEDIAN([Indicator 0 (copy)]) &lt;= 1 THEN STR(ROUND(MEDIAN([Indicator 0 (copy)])*100,0)) + &quot;%&quot; // Percentage&#13;&#10;ELSEIF MEDIAN([Indicator 0 (copy)]) &lt;= 3000 THEN STR(ROUND(MEDIAN([Indicator 0 (copy)]),0))  // Population&#13;&#10;ELSEIF MEDIAN([Indicator 0 (copy)]) &gt; 3000 THEN &quot;$ &quot; +  STR(ROUND(MEDIAN([Indicator 0 (copy)])/1000)) + &quot;,000&quot; // Currency&#13;&#10;END' />
            </column>
            <column caption='Med Hh Income' datatype='real' name='[Med_Hh_Income]' role='measure' type='quantitative' />
            <column datatype='real' name='[Own]' role='measure' type='quantitative' />
            <column datatype='real' name='[ParcelCount]' role='measure' type='quantitative' />
            <column caption='Pc income' datatype='real' name='[Pc_income]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Rent]' role='measure' type='quantitative' />
            <column datatype='real' name='[White alone]' role='measure' type='quantitative' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Indicator 2 Label (copy)]' derivation='Attribute' name='[attr:Indicator 2 Label (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Geometry]' derivation='Collect' name='[clct:Geometry:nk]' pivot='key' type='nominal' />
            <column caption='Council District' datatype='string' name='[council_district]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;SCC1&quot;' value='D1' />
                <alias key='&quot;SCC2&quot;' value='D2' />
                <alias key='&quot;SCC3&quot;' value='D3' />
                <alias key='&quot;SCC4&quot;' value='D4' />
                <alias key='&quot;SCC5&quot;' value='D5' />
                <alias key='&quot;SCC6&quot;' value='D6' />
                <alias key='&quot;SCC7&quot;' value='D7' />
              </aliases>
            </column>
            <column-instance column='[Blockgroup]' derivation='None' name='[none:Blockgroup:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1115766813408124936]' derivation='None' name='[none:Calculation_1115766813408124936:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter Year Parameter (copy)]' derivation='None' name='[none:Filter Year Parameter (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1115766813349253122]' derivation='User' name='[usr:Calculation_1115766813349253122:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Indicator0Text (copy)]' derivation='User' name='[usr:Indicator0Text (copy):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813408124936:nk]'>
            <groupfilter function='member' level='[none:Calculation_1115766813408124936:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Filter Year Parameter (copy):nk]'>
            <groupfilter function='member' level='[none:Filter Year Parameter (copy):nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813408124936:nk]</column>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Filter Year Parameter (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_1115766813349253122:qk]' num-steps='5' palette='red_green_gold_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_1115766813349253122:qk]' />
              <lod column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[clct:Geometry:nk]' />
              <lod column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Blockgroup:nk]' />
              <tooltip column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[attr:Indicator 2 Label (copy):nk]' />
              <tooltip column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator0Text (copy):nk]' />
              <geometry column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[clct:Geometry:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>BG </run>
                <run bold='true'>&lt;[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Blockgroup:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true'>&lt;[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator0Text (copy):nk]&gt; &lt;[federated.004akfr0ztvque1dvtnym0ol9g6i].[attr:Indicator 2 Label (copy):nk]&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#ffffff' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.004akfr0ztvque1dvtnym0ol9g6i].[Latitude (generated)]</rows>
        <cols>[federated.004akfr0ztvque1dvtnym0ol9g6i].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='CompareSummary1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Demographics' name='federated.004akfr0ztvque1dvtnym0ol9g6i' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Indicator1 Parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Percent POC&quot;'>
              <calculation class='tableau' formula='&quot;Percent POC&quot;' />
            </column>
            <column caption='Council District Parameter' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;ALL DISTRICTS&quot;'>
              <calculation class='tableau' formula='&quot;ALL DISTRICTS&quot;' />
              <aliases>
                <alias key='&quot;SCC1&quot;' value='D1' />
                <alias key='&quot;SCC2&quot;' value='D2' />
                <alias key='&quot;SCC3&quot;' value='D3' />
                <alias key='&quot;SCC4&quot;' value='D4' />
                <alias key='&quot;SCC5&quot;' value='D5' />
                <alias key='&quot;SCC6&quot;' value='D6' />
              </aliases>
            </column>
            <column caption='Year Parameter' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;ALL YEARS&quot;'>
              <calculation class='tableau' formula='&quot;ALL YEARS&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.004akfr0ztvque1dvtnym0ol9g6i'>
            <column datatype='real' name='[Asian alone]' role='measure' type='quantitative' />
            <column datatype='real' name='[AveSalePrice]' role='measure' type='quantitative' />
            <column datatype='real' name='[Black or African American alone]' role='measure' type='quantitative' />
            <column caption='Indicator1Text' datatype='string' name='[Calculation_-7112872654770298880]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;Dist Downtown&quot; THEN  STR(ROUND([Calculation_1115766813349150721],1)) + &quot; Miles&quot; // Distance&#13;&#10;&#13;&#10;ELSEIF [Calculation_1115766813349150721] &lt;= 1 THEN STR(ROUND([Calculation_1115766813349150721]*100,0)) + &quot;%&quot; // Percentage&#13;&#10;ELSEIF [Calculation_1115766813349150721] &lt;= 3000 THEN STR(ROUND([Calculation_1115766813349150721],0))  // Population&#13;&#10;ELSEIF [Calculation_1115766813349150721] &gt; 3000 THEN &quot;$&quot; +  STR(ROUND([Calculation_1115766813349150721]/1000)) + &quot;,000&quot; // Currency&#13;&#10;END' />
            </column>
            <column caption='Indicator 1' datatype='real' name='[Calculation_1115766813349150721]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;Percent POC&quot; THEN (1-AVG([White alone]))&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Percent Own&quot; THEN AVG([Own])&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Percent Rent&quot; THEN AVG([Rent]) &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Percent Asian&quot; THEN AVG([Asian alone]) &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Percent Black&quot; THEN AVG([Black or African American alone])&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Percent White&quot; THEN AVG([White alone]) &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Percent Food Stamps&quot; THEN AVG([Food Stamps]) &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Percent Four Year College&quot; THEN AVG([Four Year College]) &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Median Household Income&quot; THEN AVG([Med_Hh_Income]) &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Per Capita Income&quot; THEN AVG([Pc_income]) &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Population&quot; THEN AVG([Population])&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Dist Downtown&quot; THEN AVG([Dist Downtown])&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Sales Price&quot; THEN AVG([AveSalePrice])&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Sales Volume&quot; THEN AVG([ParcelCount])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Filter Council District' datatype='boolean' name='[Calculation_1115766813350019075]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[council_district] != &quot;None&quot;' />
            </column>
            <column caption='Indicator 1 Label' datatype='string' name='[Calculation_1115766813401026565]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='Filter Year Parameter' datatype='boolean' name='[Calculation_1115766813408124936]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Year] = [Parameters].[Parameter 4] OR [Parameters].[Parameter 4] = &quot;ALL YEARS&quot;' />
            </column>
            <column datatype='real' name='[Dist Downtown]' role='measure' type='quantitative' />
            <column caption='Filter Council District Parameter' datatype='boolean' name='[Filter Year Parameter (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[council_district] = [Parameters].[Parameter 3] OR [Parameters].[Parameter 3] = &quot;ALL DISTRICTS&quot;' />
            </column>
            <column datatype='real' name='[Food Stamps]' role='measure' type='quantitative' />
            <column datatype='real' name='[Four Year College]' role='measure' type='quantitative' />
            <column caption='Med Hh Income' datatype='real' name='[Med_Hh_Income]' role='measure' type='quantitative' />
            <column datatype='real' name='[Own]' role='measure' type='quantitative' />
            <column datatype='real' name='[ParcelCount]' role='measure' type='quantitative' />
            <column caption='Pc income' datatype='real' name='[Pc_income]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Rent]' role='measure' type='quantitative' />
            <column datatype='real' name='[White alone]' role='measure' type='quantitative' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column caption='Council District' datatype='string' name='[council_district]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;SCC1&quot;' value='D1' />
                <alias key='&quot;SCC2&quot;' value='D2' />
                <alias key='&quot;SCC3&quot;' value='D3' />
                <alias key='&quot;SCC4&quot;' value='D4' />
                <alias key='&quot;SCC5&quot;' value='D5' />
                <alias key='&quot;SCC6&quot;' value='D6' />
                <alias key='&quot;SCC7&quot;' value='D7' />
              </aliases>
            </column>
            <column-instance column='[Calculation_1115766813350019075]' derivation='None' name='[none:Calculation_1115766813350019075:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1115766813401026565]' derivation='None' name='[none:Calculation_1115766813401026565:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1115766813408124936]' derivation='None' name='[none:Calculation_1115766813408124936:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter Year Parameter (copy)]' derivation='None' name='[none:Filter Year Parameter (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_-7112872654770298880]' derivation='User' name='[usr:Calculation_-7112872654770298880:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813350019075:nk]'>
            <groupfilter function='member' level='[none:Calculation_1115766813350019075:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813408124936:nk]'>
            <groupfilter function='member' level='[none:Calculation_1115766813408124936:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Filter Year Parameter (copy):nk]'>
            <groupfilter function='member' level='[none:Filter Year Parameter (copy):nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813350019075:nk]</column>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813408124936:nk]</column>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Filter Year Parameter (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813401026565:nk]' value='213' />
            <format attr='text-align' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813401026565:nk]' value='center' />
            <format attr='vertical-align' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813401026565:nk]' value='center' />
            <format attr='font-family' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_-7112872654770298880:nk]' value='Tableau Bold' />
            <format attr='font-size' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_-7112872654770298880:nk]' value='14' />
            <format attr='text-align' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_-7112872654770298880:nk]' value='center' />
            <format attr='vertical-align' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_-7112872654770298880:nk]' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813401026565:nk]' value='40' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='font-style' value='normal' />
            <format attr='font-weight' value='normal' />
            <format attr='text-orientation' value='-90' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813401026565:nk]' value='Tableau Book' />
            <format attr='wrap' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813401026565:nk]' value='on' />
            <format attr='font-weight' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813401026565:nk]' value='bold' />
            <format attr='font-size' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813401026565:nk]' value='11' />
            <format attr='text-align' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813401026565:nk]' value='center' />
            <format attr='vertical-align' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813401026565:nk]' value='center' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' scope='cols' value='none' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_-7112872654770298880:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813401026565:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='CompareSummary2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Demographics' name='federated.004akfr0ztvque1dvtnym0ol9g6i' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Indicator2 Parameter' datatype='string' name='[Indicator1 Parameter (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Percent Food Stamps&quot;'>
              <calculation class='tableau' formula='&quot;Percent Food Stamps&quot;' />
            </column>
            <column caption='Council District Parameter' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;ALL DISTRICTS&quot;'>
              <calculation class='tableau' formula='&quot;ALL DISTRICTS&quot;' />
              <aliases>
                <alias key='&quot;SCC1&quot;' value='D1' />
                <alias key='&quot;SCC2&quot;' value='D2' />
                <alias key='&quot;SCC3&quot;' value='D3' />
                <alias key='&quot;SCC4&quot;' value='D4' />
                <alias key='&quot;SCC5&quot;' value='D5' />
                <alias key='&quot;SCC6&quot;' value='D6' />
              </aliases>
            </column>
            <column caption='Year Parameter' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;ALL YEARS&quot;'>
              <calculation class='tableau' formula='&quot;ALL YEARS&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.004akfr0ztvque1dvtnym0ol9g6i'>
            <column datatype='real' name='[Asian alone]' role='measure' type='quantitative' />
            <column datatype='real' name='[AveSalePrice]' role='measure' type='quantitative' />
            <column datatype='real' name='[Black or African American alone]' role='measure' type='quantitative' />
            <column caption='Indicator 2' datatype='real' name='[Calculation_1115766813349253122]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Indicator1 Parameter (copy)] = &quot;Percent POC&quot; THEN (1-AVG([White alone]))&#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Percent Own&quot; THEN AVG([Own])&#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Percent Rent&quot; THEN AVG([Rent]) &#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Percent Asian&quot; THEN AVG([Asian alone]) &#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Percent Black&quot; THEN AVG([Black or African American alone])&#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Percent White&quot; THEN AVG([White alone]) &#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Percent Food Stamps&quot; THEN AVG([Food Stamps]) &#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Percent Four Year College&quot; THEN AVG([Four Year College]) &#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Median Household Income&quot; THEN AVG([Med_Hh_Income]) &#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Per Capita Income&quot; THEN AVG([Pc_income]) &#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Population&quot; THEN AVG([Population])&#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Dist Downtown&quot; THEN AVG([Dist Downtown])&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Sales Price&quot; THEN AVG([AveSalePrice])&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Sales Volume&quot; THEN AVG([ParcelCount])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Filter Year Parameter' datatype='boolean' name='[Calculation_1115766813408124936]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Year] = [Parameters].[Parameter 4] OR [Parameters].[Parameter 4] = &quot;ALL YEARS&quot;' />
            </column>
            <column datatype='real' name='[Dist Downtown]' role='measure' type='quantitative' />
            <column caption='Filter Council District Parameter' datatype='boolean' name='[Filter Year Parameter (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[council_district] = [Parameters].[Parameter 3] OR [Parameters].[Parameter 3] = &quot;ALL DISTRICTS&quot;' />
            </column>
            <column datatype='real' name='[Food Stamps]' role='measure' type='quantitative' />
            <column datatype='real' name='[Four Year College]' role='measure' type='quantitative' />
            <column caption='Indicator 2 Label' datatype='string' name='[Indicator 1 Label (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Indicator1 Parameter (copy)]' />
            </column>
            <column caption='Indicator2Text' datatype='string' name='[Indicator1Text (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Indicator1 Parameter (copy)] = &quot;Dist Downtown&quot; THEN  STR(ROUND([Calculation_1115766813349253122],1)) + &quot; Miles&quot; // Distance&#13;&#10;&#13;&#10;ELSEIF [Calculation_1115766813349253122] &lt;= 1 THEN STR(ROUND([Calculation_1115766813349253122]*100,0)) + &quot;%&quot; // Percentage&#13;&#10;ELSEIF [Calculation_1115766813349253122] &lt;= 3000 THEN STR(ROUND([Calculation_1115766813349253122],0))  // Population&#13;&#10;ELSEIF [Calculation_1115766813349253122] &gt; 3000 THEN &quot;$ &quot; +  STR(ROUND([Calculation_1115766813349253122]/1000,0)) + &quot;,000&quot; // Currency&#13;&#10;END' />
            </column>
            <column caption='Med Hh Income' datatype='real' name='[Med_Hh_Income]' role='measure' type='quantitative' />
            <column datatype='real' name='[Own]' role='measure' type='quantitative' />
            <column datatype='real' name='[ParcelCount]' role='measure' type='quantitative' />
            <column caption='Pc income' datatype='real' name='[Pc_income]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Rent]' role='measure' type='quantitative' />
            <column datatype='real' name='[White alone]' role='measure' type='quantitative' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column caption='Council District' datatype='string' name='[council_district]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;SCC1&quot;' value='D1' />
                <alias key='&quot;SCC2&quot;' value='D2' />
                <alias key='&quot;SCC3&quot;' value='D3' />
                <alias key='&quot;SCC4&quot;' value='D4' />
                <alias key='&quot;SCC5&quot;' value='D5' />
                <alias key='&quot;SCC6&quot;' value='D6' />
                <alias key='&quot;SCC7&quot;' value='D7' />
              </aliases>
            </column>
            <column-instance column='[Calculation_1115766813408124936]' derivation='None' name='[none:Calculation_1115766813408124936:nk]' pivot='key' type='nominal' />
            <column-instance column='[Filter Year Parameter (copy)]' derivation='None' name='[none:Filter Year Parameter (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Indicator 1 Label (copy)]' derivation='None' name='[none:Indicator 1 Label (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Indicator1Text (copy)]' derivation='User' name='[usr:Indicator1Text (copy):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813408124936:nk]'>
            <groupfilter function='member' level='[none:Calculation_1115766813408124936:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Filter Year Parameter (copy):nk]'>
            <groupfilter function='member' level='[none:Filter Year Parameter (copy):nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Filter Year Parameter (copy):nk]</column>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813408124936:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Indicator 1 Label (copy):nk]' value='124' />
            <format attr='font-size' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator1Text (copy):nk]' value='14' />
            <format attr='color' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator1Text (copy):nk]' value='#000000' />
            <format attr='font-weight' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator1Text (copy):nk]' value='bold' />
            <format attr='font-family' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator1Text (copy):nk]' value='Tableau Bold' />
            <format attr='text-align' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator1Text (copy):nk]' value='center' />
            <format attr='vertical-align' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator1Text (copy):nk]' value='center' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Indicator 1 Label (copy):nk]' value='40' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='font-style' value='normal' />
            <format attr='font-weight' value='normal' />
            <format attr='text-orientation' value='-90' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Indicator 1 Label (copy):nk]' value='center' />
            <format attr='font-size' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Indicator 1 Label (copy):nk]' value='11' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' scope='cols' value='none' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator1Text (copy):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Indicator 1 Label (copy):nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Explore Bubble'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Æ  </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Demographics' name='federated.004akfr0ztvque1dvtnym0ol9g6i' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Indicator2 Parameter' datatype='string' name='[Indicator1 Parameter (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Percent Food Stamps&quot;'>
              <calculation class='tableau' formula='&quot;Percent Food Stamps&quot;' />
            </column>
            <column caption='Indicator1 Parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Percent POC&quot;'>
              <calculation class='tableau' formula='&quot;Percent POC&quot;' />
            </column>
            <column caption='Geocode Parameter' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Block Group&quot;'>
              <calculation class='tableau' formula='&quot;Block Group&quot;' />
            </column>
            <column caption='Year Parameter' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;ALL YEARS&quot;'>
              <calculation class='tableau' formula='&quot;ALL YEARS&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.004akfr0ztvque1dvtnym0ol9g6i'>
            <column datatype='real' name='[Asian alone]' role='measure' type='quantitative' />
            <column datatype='real' name='[AveSalePrice]' role='measure' type='quantitative' />
            <column datatype='real' name='[Black or African American alone]' role='measure' type='quantitative' />
            <column caption='Indicator 1' datatype='real' name='[Calculation_1115766813349150721]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = &quot;Percent POC&quot; THEN (1-AVG([White alone]))&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Percent Own&quot; THEN AVG([Own])&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Percent Rent&quot; THEN AVG([Rent]) &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Percent Asian&quot; THEN AVG([Asian alone]) &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Percent Black&quot; THEN AVG([Black or African American alone])&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Percent White&quot; THEN AVG([White alone]) &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Percent Food Stamps&quot; THEN AVG([Food Stamps]) &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Percent Four Year College&quot; THEN AVG([Four Year College]) &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Median Household Income&quot; THEN AVG([Med_Hh_Income]) &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Per Capita Income&quot; THEN AVG([Pc_income]) &#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Population&quot; THEN AVG([Population])&#13;&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Dist Downtown&quot; THEN AVG([Dist Downtown])&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Sales Price&quot; THEN AVG([AveSalePrice])&#10;ELSEIF [Parameters].[Parameter 1] = &quot;Sales Volume&quot; THEN AVG([ParcelCount])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Indicator 2' datatype='real' name='[Calculation_1115766813349253122]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Indicator1 Parameter (copy)] = &quot;Percent POC&quot; THEN (1-AVG([White alone]))&#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Percent Own&quot; THEN AVG([Own])&#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Percent Rent&quot; THEN AVG([Rent]) &#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Percent Asian&quot; THEN AVG([Asian alone]) &#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Percent Black&quot; THEN AVG([Black or African American alone])&#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Percent White&quot; THEN AVG([White alone]) &#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Percent Food Stamps&quot; THEN AVG([Food Stamps]) &#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Percent Four Year College&quot; THEN AVG([Four Year College]) &#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Median Household Income&quot; THEN AVG([Med_Hh_Income]) &#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Per Capita Income&quot; THEN AVG([Pc_income]) &#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Population&quot; THEN AVG([Population])&#13;&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Dist Downtown&quot; THEN AVG([Dist Downtown])&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Sales Price&quot; THEN AVG([AveSalePrice])&#10;ELSEIF [Parameters].[Indicator1 Parameter (copy)] = &quot;Sales Volume&quot; THEN AVG([ParcelCount])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Filter Council District' datatype='boolean' name='[Calculation_1115766813350019075]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[council_district] != &quot;None&quot;' />
            </column>
            <column caption='Filter Year Parameter' datatype='boolean' name='[Calculation_1115766813408124936]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Year] = [Parameters].[Parameter 4] OR [Parameters].[Parameter 4] = &quot;ALL YEARS&quot;' />
            </column>
            <column datatype='real' name='[Dist Downtown]' role='measure' type='quantitative' />
            <column datatype='real' name='[Food Stamps]' role='measure' type='quantitative' />
            <column datatype='real' name='[Four Year College]' role='measure' type='quantitative' />
            <column caption='Geocode' datatype='string' name='[Indicator 1 (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 2] = &quot;Council District&quot; THEN [council_district]&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &quot;Neighborhood Long&quot; THEN [neigbhorhood_long]&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &quot;Neighborhood Short&quot; THEN [neighborhood_short]&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &quot;Zip Code&quot; THEN [zipcode]&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &quot;Urban Village&quot; THEN [urban_village]&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &quot;Block Group&quot; THEN [location]&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &quot;CITYWIDE&quot; THEN &quot;Seattle&quot;&#13;&#10;ELSE &quot;None&quot; END' />
            </column>
            <column caption='Med Hh Income' datatype='real' name='[Med_Hh_Income]' role='measure' type='quantitative' />
            <column datatype='real' name='[Own]' role='measure' type='quantitative' />
            <column datatype='real' name='[ParcelCount]' role='measure' type='quantitative' />
            <column caption='Pc income' datatype='real' name='[Pc_income]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Rent]' role='measure' type='quantitative' />
            <column datatype='real' name='[White alone]' role='measure' type='quantitative' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column caption='Council District' datatype='string' name='[council_district]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;SCC1&quot;' value='D1' />
                <alias key='&quot;SCC2&quot;' value='D2' />
                <alias key='&quot;SCC3&quot;' value='D3' />
                <alias key='&quot;SCC4&quot;' value='D4' />
                <alias key='&quot;SCC5&quot;' value='D5' />
                <alias key='&quot;SCC6&quot;' value='D6' />
                <alias key='&quot;SCC7&quot;' value='D7' />
              </aliases>
            </column>
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column caption='Neigbhorhood Long' datatype='string' name='[neigbhorhood_long]' role='dimension' type='nominal' />
            <column caption='Neighborhood Short' datatype='string' name='[neighborhood_short]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1115766813350019075]' derivation='None' name='[none:Calculation_1115766813350019075:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1115766813408124936]' derivation='None' name='[none:Calculation_1115766813408124936:nk]' pivot='key' type='nominal' />
            <column-instance column='[Indicator 1 (copy)]' derivation='None' name='[none:Indicator 1 (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column caption='Urban Village' datatype='string' name='[urban_village]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1115766813349150721]' derivation='User' name='[usr:Calculation_1115766813349150721:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1115766813349253122]' derivation='User' name='[usr:Calculation_1115766813349253122:qk]' pivot='key' type='quantitative' />
            <column caption='Zipcode' datatype='string' datatype-customized='true' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Geocode)]'>
            <groupfilter function='level-members' level='[Indicator 1 (copy)]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813350019075:nk]'>
            <groupfilter function='member' level='[none:Calculation_1115766813350019075:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813408124936:nk]'>
            <groupfilter function='member' level='[none:Calculation_1115766813408124936:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813350019075:nk]</column>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Geocode)]</column>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813408124936:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_1115766813349150721:qk]' field-type='quantitative' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_1115766813349150721:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_1115766813349150721:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_1115766813349253122:qk]' field-type='quantitative' scope='rows' type='space' />
            <encoding attr='space' class='1' domain-expand='false' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_1115766813349253122:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='subtitle' class='1' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_1115766813349253122:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='1' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_1115766813349253122:qk]' scope='rows' value='true' />
            <format attr='subtitle' class='0' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_1115766813349253122:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_1115766813349253122:qk]' scope='rows' value='true' />
            <format attr='display' class='1' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_1115766813349253122:qk]' scope='rows' value='false' />
            <format attr='title' class='0' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_1115766813349150721:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_1115766813349253122:qk]' scope='rows' value='' />
            <format attr='width' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_1115766813349253122:qk]' value='160' />
            <format attr='height' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_1115766813349150721:qk]' value='71' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Year:nk]' field-type='nominal' max-size='1' min-size='0.222683' type='catsize' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Indicator 1 (copy):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_1115766813349253122:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Indicator 1 (copy):nk]' />
              <size column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Year:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.95552486181259155' />
                <format attr='has-stroke' value='true' />
                <format attr='mark-transparency' value='255' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-min' value='false' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-range-scope' value='table' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_1115766813349253122:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Indicator 1 (copy):nk]' />
              <path column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Year:nk]' />
              <text column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Indicator 1 (copy):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.42779004573822021' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_1115766813349253122:qk] + [federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_1115766813349253122:qk])</rows>
        <cols>[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_1115766813349150721:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Label0'>
      <table>
        <view>
          <datasources>
            <datasource caption='Demographics' name='federated.004akfr0ztvque1dvtnym0ol9g6i' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Indicator0 Parameter' datatype='string' name='[Indicator2 Parameter (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Percent Food Stamps&quot;'>
              <calculation class='tableau' formula='&quot;Percent Food Stamps&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.004akfr0ztvque1dvtnym0ol9g6i'>
            <column datatype='string' name='[Blockgroup]' role='dimension' type='nominal' />
            <column caption='Neighborhood' datatype='string' name='[Calculation_594756662492823552]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [neigbhorhood_long] = &quot;NO BROADER TERM&quot; THEN UPPER([neighborhood_short]) ELSE [neigbhorhood_long] END' />
            </column>
            <column caption='Indicator 0 Label' datatype='string' name='[Indicator 2 Label (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Indicator2 Parameter (copy)]' />
            </column>
            <column caption='Council District' datatype='string' name='[council_district]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;SCC1&quot;' value='D1' />
                <alias key='&quot;SCC2&quot;' value='D2' />
                <alias key='&quot;SCC3&quot;' value='D3' />
                <alias key='&quot;SCC4&quot;' value='D4' />
                <alias key='&quot;SCC5&quot;' value='D5' />
                <alias key='&quot;SCC6&quot;' value='D6' />
                <alias key='&quot;SCC7&quot;' value='D7' />
              </aliases>
            </column>
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column caption='Neigbhorhood Long' datatype='string' name='[neigbhorhood_long]' role='dimension' type='nominal' />
            <column caption='Neighborhood Short' datatype='string' name='[neighborhood_short]' role='dimension' type='nominal' />
            <column-instance column='[Indicator 2 Label (copy)]' derivation='None' name='[none:Indicator 2 Label (copy):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Blockgroup)]'>
            <groupfilter function='level-members' level='[Blockgroup]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Council District)]'>
            <groupfilter function='level-members' level='[council_district]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Neigbhorhood Long)]'>
            <groupfilter function='level-members' level='[neigbhorhood_long]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Neighborhood)]'>
            <groupfilter function='level-members' level='[Calculation_594756662492823552]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Council District)]</column>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Neigbhorhood Long)]</column>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Location)]</column>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Blockgroup)]</column>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Neighborhood)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='184' />
            <format attr='height' value='67' />
            <format attr='font-size' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Indicator 2 Label (copy):nk]' value='24' />
            <format attr='font-family' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Indicator 2 Label (copy):nk]' value='Tableau Bold' />
            <format attr='text-align' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Indicator 2 Label (copy):nk]' value='center' />
            <format attr='vertical-align' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Indicator 2 Label (copy):nk]' value='top' />
            <format attr='color' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Indicator 2 Label (copy):nk]' value='#000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Indicator 2 Label (copy):nk]' value='center' />
            <format attr='vertical-align' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Indicator 2 Label (copy):nk]' value='center' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Indicator 2 Label (copy):nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Indicator 2 Label (copy):nk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Label1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Demographics' name='federated.004akfr0ztvque1dvtnym0ol9g6i' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Indicator1 Parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Percent POC&quot;'>
              <calculation class='tableau' formula='&quot;Percent POC&quot;' />
            </column>
            <column caption='Geocode Parameter' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Block Group&quot;'>
              <calculation class='tableau' formula='&quot;Block Group&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.004akfr0ztvque1dvtnym0ol9g6i'>
            <column caption='Indicator 1 Label' datatype='string' name='[Calculation_1115766813401026565]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column caption='Geocode' datatype='string' name='[Indicator 1 (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 2] = &quot;Council District&quot; THEN [council_district]&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &quot;Neighborhood Long&quot; THEN [neigbhorhood_long]&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &quot;Neighborhood Short&quot; THEN [neighborhood_short]&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &quot;Zip Code&quot; THEN [zipcode]&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &quot;Urban Village&quot; THEN [urban_village]&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &quot;Block Group&quot; THEN [location]&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &quot;CITYWIDE&quot; THEN &quot;Seattle&quot;&#13;&#10;ELSE &quot;None&quot; END' />
            </column>
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column caption='Council District' datatype='string' name='[council_district]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;SCC1&quot;' value='D1' />
                <alias key='&quot;SCC2&quot;' value='D2' />
                <alias key='&quot;SCC3&quot;' value='D3' />
                <alias key='&quot;SCC4&quot;' value='D4' />
                <alias key='&quot;SCC5&quot;' value='D5' />
                <alias key='&quot;SCC6&quot;' value='D6' />
                <alias key='&quot;SCC7&quot;' value='D7' />
              </aliases>
            </column>
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column caption='Neigbhorhood Long' datatype='string' name='[neigbhorhood_long]' role='dimension' type='nominal' />
            <column caption='Neighborhood Short' datatype='string' name='[neighborhood_short]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1115766813401026565]' derivation='None' name='[none:Calculation_1115766813401026565:nk]' pivot='key' type='nominal' />
            <column caption='Urban Village' datatype='string' name='[urban_village]' role='dimension' type='nominal' />
            <column caption='Zipcode' datatype='string' datatype-customized='true' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Geocode)]'>
            <groupfilter function='level-members' level='[Indicator 1 (copy)]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Geocode,Year)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Indicator 1 (copy)]' />
              <groupfilter function='level-members' level='[Year]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Geocode)]</column>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Geocode,Year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='184' />
            <format attr='height' value='21' />
            <format attr='text-align' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813401026565:nk]' value='center' />
            <format attr='vertical-align' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813401026565:nk]' value='center' />
            <format attr='font-size' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813401026565:nk]' value='12' />
            <format attr='font-family' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813401026565:nk]' value='Tableau Medium' />
            <format attr='color' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813401026565:nk]' value='#555555' />
            <format attr='font-weight' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813401026565:nk]' value='normal' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813401026565:nk]' value='#ffffff' />
            <format attr='color' data-class='subtotal' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813401026565:nk]' value='#ffffff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813401026565:nk]' value='#000000' />
            <format attr='font-family' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813401026565:nk]' value='Tableau Bold' />
            <format attr='font-size' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813401026565:nk]' value='14' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813401026565:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813401026565:nk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Label2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Demographics' name='federated.004akfr0ztvque1dvtnym0ol9g6i' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Indicator2 Parameter' datatype='string' name='[Indicator1 Parameter (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Percent Food Stamps&quot;'>
              <calculation class='tableau' formula='&quot;Percent Food Stamps&quot;' />
            </column>
            <column caption='Geocode Parameter' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Block Group&quot;'>
              <calculation class='tableau' formula='&quot;Block Group&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.004akfr0ztvque1dvtnym0ol9g6i'>
            <column caption='Geocode' datatype='string' name='[Indicator 1 (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 2] = &quot;Council District&quot; THEN [council_district]&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &quot;Neighborhood Long&quot; THEN [neigbhorhood_long]&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &quot;Neighborhood Short&quot; THEN [neighborhood_short]&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &quot;Zip Code&quot; THEN [zipcode]&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &quot;Urban Village&quot; THEN [urban_village]&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &quot;Block Group&quot; THEN [location]&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &quot;CITYWIDE&quot; THEN &quot;Seattle&quot;&#13;&#10;ELSE &quot;None&quot; END' />
            </column>
            <column caption='Indicator 2 Label' datatype='string' name='[Indicator 1 Label (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Indicator1 Parameter (copy)]' />
            </column>
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column caption='Council District' datatype='string' name='[council_district]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;SCC1&quot;' value='D1' />
                <alias key='&quot;SCC2&quot;' value='D2' />
                <alias key='&quot;SCC3&quot;' value='D3' />
                <alias key='&quot;SCC4&quot;' value='D4' />
                <alias key='&quot;SCC5&quot;' value='D5' />
                <alias key='&quot;SCC6&quot;' value='D6' />
                <alias key='&quot;SCC7&quot;' value='D7' />
              </aliases>
            </column>
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column caption='Neigbhorhood Long' datatype='string' name='[neigbhorhood_long]' role='dimension' type='nominal' />
            <column caption='Neighborhood Short' datatype='string' name='[neighborhood_short]' role='dimension' type='nominal' />
            <column-instance column='[Indicator 1 Label (copy)]' derivation='None' name='[none:Indicator 1 Label (copy):nk]' pivot='key' type='nominal' />
            <column caption='Urban Village' datatype='string' name='[urban_village]' role='dimension' type='nominal' />
            <column caption='Zipcode' datatype='string' datatype-customized='true' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Geocode)]'>
            <groupfilter function='level-members' level='[Indicator 1 (copy)]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Geocode,Year)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Indicator 1 (copy)]' />
              <groupfilter function='level-members' level='[Year]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Geocode)]</column>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Geocode,Year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='20' />
            <format attr='height' value='213' />
            <format attr='vertical-align' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Indicator 1 Label (copy):nk]' value='center' />
            <format attr='font-size' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Indicator 1 Label (copy):nk]' value='12' />
            <format attr='text-align' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Indicator 1 Label (copy):nk]' value='right' />
            <format attr='text-orientation' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Indicator 1 Label (copy):nk]' value='-90' />
            <format attr='color' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Indicator 1 Label (copy):nk]' value='#555555' />
            <format attr='font-weight' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Indicator 1 Label (copy):nk]' value='normal' />
            <format attr='font-family' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Indicator 1 Label (copy):nk]' value='Tableau Medium' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Indicator 1 Label (copy):nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Indicator 1 Label (copy):nk]&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='MapSlice'>
      <table>
        <view>
          <datasources>
            <datasource caption='Demographics' name='federated.004akfr0ztvque1dvtnym0ol9g6i' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Indicator0 Parameter' datatype='string' name='[Indicator2 Parameter (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Percent Food Stamps&quot;'>
              <calculation class='tableau' formula='&quot;Percent Food Stamps&quot;' />
            </column>
            <column caption='Geocode Parameter' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Block Group&quot;'>
              <calculation class='tableau' formula='&quot;Block Group&quot;' />
            </column>
            <column caption='Year Parameter' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;ALL YEARS&quot;'>
              <calculation class='tableau' formula='&quot;ALL YEARS&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.004akfr0ztvque1dvtnym0ol9g6i'>
            <column datatype='real' name='[Asian alone]' role='measure' type='quantitative' />
            <column datatype='real' name='[AveSalePrice]' role='measure' type='quantitative' />
            <column datatype='real' name='[Black or African American alone]' role='measure' type='quantitative' />
            <column caption='Filter Year Parameter' datatype='boolean' name='[Calculation_1115766813408124936]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Year] = [Parameters].[Parameter 4] OR [Parameters].[Parameter 4] = &quot;ALL YEARS&quot;' />
            </column>
            <column caption='Neighborhood' datatype='string' name='[Calculation_594756662492823552]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [neigbhorhood_long] = &quot;NO BROADER TERM&quot; THEN UPPER([neighborhood_short]) ELSE [neigbhorhood_long] END' />
            </column>
            <column datatype='real' name='[Dist Downtown]' role='measure' type='quantitative' />
            <column datatype='real' name='[Food Stamps]' role='measure' type='quantitative' />
            <column datatype='real' name='[Four Year College]' role='measure' type='quantitative' />
            <column datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
            <column caption='Indicator 0 NonAgg' datatype='real' name='[Indicator 0 (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent POC&quot; THEN 1-[White alone]&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Own&quot; THEN [Own]&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Rent&quot; THEN [Rent]&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Asian&quot; THEN [Asian alone]&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Black&quot; THEN [Black or African American alone]&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent White&quot; THEN [White alone]&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Food Stamps&quot; THEN [Food Stamps]&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Four Year College&quot; THEN [Four Year College]&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Median Household Income&quot; THEN [Med_Hh_Income]&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Per Capita Income&quot; THEN [Pc_income]&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Population&quot; THEN [Population]&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Dist Downtown&quot; THEN [Dist Downtown]&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Sales Price&quot; THEN [AveSalePrice]&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Sales Volume&quot; THEN [ParcelCount]&#13;&#10;END' />
            </column>
            <column caption='Indicator 0' datatype='real' name='[Indicator 1 (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent POC&quot; THEN (1-AVG([White alone]))&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Own&quot; THEN AVG([Own])&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Rent&quot; THEN AVG([Rent]) &#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Asian&quot; THEN AVG([Asian alone]) &#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Black&quot; THEN AVG([Black or African American alone])&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent White&quot; THEN AVG([White alone]) &#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Food Stamps&quot; THEN AVG([Food Stamps]) &#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Four Year College&quot; THEN AVG([Four Year College]) &#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Median Household Income&quot; THEN AVG([Med_Hh_Income]) &#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Per Capita Income&quot; THEN AVG([Pc_income]) &#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Population&quot; THEN AVG([Population]) &#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Dist Downtown&quot; THEN AVG([Dist Downtown])&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Sales Price&quot; THEN AVG([AveSalePrice])&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Sales Volume&quot; THEN AVG([ParcelCount])&#13;&#10;END' />
            </column>
            <column caption='Geocode' datatype='string' name='[Indicator 1 (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 2] = &quot;Council District&quot; THEN [council_district]&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &quot;Neighborhood Long&quot; THEN [neigbhorhood_long]&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &quot;Neighborhood Short&quot; THEN [neighborhood_short]&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &quot;Zip Code&quot; THEN [zipcode]&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &quot;Urban Village&quot; THEN [urban_village]&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &quot;Block Group&quot; THEN [location]&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &quot;CITYWIDE&quot; THEN &quot;Seattle&quot;&#13;&#10;ELSE &quot;None&quot; END' />
            </column>
            <column caption='Indicator 0 Label' datatype='string' name='[Indicator 2 Label (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Indicator2 Parameter (copy)]' />
            </column>
            <column caption='Indicator0TextMed' datatype='string' name='[Indicator0Text (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Indicator2 Parameter (copy)] = &quot;Dist Downtown&quot; THEN  STR(ROUND(MEDIAN([Indicator 0 (copy)]),1)) + &quot; Miles&quot; // Distance&#13;&#10;&#13;&#10;ELSEIF MEDIAN([Indicator 0 (copy)]) &lt;= 1 THEN STR(ROUND(MEDIAN([Indicator 0 (copy)])*100,0)) + &quot;%&quot; // Percentage&#13;&#10;ELSEIF MEDIAN([Indicator 0 (copy)]) &lt;= 3000 THEN STR(ROUND(MEDIAN([Indicator 0 (copy)]),0))  // Population&#13;&#10;ELSEIF MEDIAN([Indicator 0 (copy)]) &gt; 3000 THEN &quot;$ &quot; +  STR(ROUND(MEDIAN([Indicator 0 (copy)])/1000)) + &quot;,000&quot; // Currency&#13;&#10;END' />
            </column>
            <column caption='Med Hh Income' datatype='real' name='[Med_Hh_Income]' role='measure' type='quantitative' />
            <column datatype='real' name='[Own]' role='measure' type='quantitative' />
            <column datatype='real' name='[ParcelCount]' role='measure' type='quantitative' />
            <column caption='Pc income' datatype='real' name='[Pc_income]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Rent]' role='measure' type='quantitative' />
            <column datatype='real' name='[White alone]' role='measure' type='quantitative' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column-instance column='[Indicator 2 Label (copy)]' derivation='Attribute' name='[attr:Indicator 2 Label (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Geometry]' derivation='Collect' name='[clct:Geometry:nk]' pivot='key' type='nominal' />
            <column caption='Council District' datatype='string' name='[council_district]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;SCC1&quot;' value='D1' />
                <alias key='&quot;SCC2&quot;' value='D2' />
                <alias key='&quot;SCC3&quot;' value='D3' />
                <alias key='&quot;SCC4&quot;' value='D4' />
                <alias key='&quot;SCC5&quot;' value='D5' />
                <alias key='&quot;SCC6&quot;' value='D6' />
                <alias key='&quot;SCC7&quot;' value='D7' />
              </aliases>
            </column>
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column caption='Neigbhorhood Long' datatype='string' name='[neigbhorhood_long]' role='dimension' type='nominal' />
            <column caption='Neighborhood Short' datatype='string' name='[neighborhood_short]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1115766813408124936]' derivation='None' name='[none:Calculation_1115766813408124936:nk]' pivot='key' type='nominal' />
            <column-instance column='[Indicator 1 (copy)]' derivation='None' name='[none:Indicator 1 (copy):nk]' pivot='key' type='nominal' />
            <column caption='Urban Village' datatype='string' name='[urban_village]' role='dimension' type='nominal' />
            <column-instance column='[Indicator 1 (copy 2)]' derivation='User' name='[usr:Indicator 1 (copy 2):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Indicator0Text (copy)]' derivation='User' name='[usr:Indicator0Text (copy):nk]' pivot='key' type='nominal' />
            <column caption='Zipcode' datatype='string' datatype-customized='true' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Neighborhood)]'>
            <groupfilter function='level-members' level='[Calculation_594756662492823552]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813408124936:nk]'>
            <groupfilter function='member' level='[none:Calculation_1115766813408124936:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813408124936:nk]</column>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Neighborhood)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator 1 (copy 2):qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#dbd7e7</color>
                <color>#c7bfde</color>
                <color>#b4a9d4</color>
                <color>#a293cb</color>
                <color>#917fc1</color>
                <color>#806db8</color>
                <color>#715bae</color>
                <color>#624ba5</color>
                <color>#553c9b</color>
                <color>#492f92</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='true' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.5' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator 1 (copy 2):qk]' />
              <lod column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[clct:Geometry:nk]' />
              <lod column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Indicator 1 (copy):nk]' />
              <tooltip column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[attr:Indicator 2 Label (copy):nk]' />
              <tooltip column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator0Text (copy):nk]' />
              <geometry column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[clct:Geometry:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>BG </run>
                <run bold='true'>&lt;[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Indicator 1 (copy):nk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true'>&lt;[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator0Text (copy):nk]&gt; &lt;[federated.004akfr0ztvque1dvtnym0ol9g6i].[attr:Indicator 2 Label (copy):nk]&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#ffcc00' />
                <format attr='mark-transparency' value='255' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#898989' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.004akfr0ztvque1dvtnym0ol9g6i].[Latitude (generated)]</rows>
        <cols>[federated.004akfr0ztvque1dvtnym0ol9g6i].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Slice Histogram'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#555555' fontname='Tableau Medium' fontsize='12'>Distribution</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Demographics' name='federated.004akfr0ztvque1dvtnym0ol9g6i' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Indicator0 Parameter' datatype='string' name='[Indicator2 Parameter (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Percent Food Stamps&quot;'>
              <calculation class='tableau' formula='&quot;Percent Food Stamps&quot;' />
            </column>
            <column caption='Year Parameter' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;ALL YEARS&quot;'>
              <calculation class='tableau' formula='&quot;ALL YEARS&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.004akfr0ztvque1dvtnym0ol9g6i'>
            <column datatype='real' name='[Asian alone]' role='measure' type='quantitative' />
            <column datatype='real' name='[AveSalePrice]' role='measure' type='quantitative' />
            <column datatype='real' name='[Black or African American alone]' role='measure' type='quantitative' />
            <column datatype='string' name='[Blockgroup]' role='dimension' type='nominal' />
            <column caption='Filter Council District' datatype='boolean' name='[Calculation_1115766813350019075]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[council_district] != &quot;None&quot;' />
            </column>
            <column caption='Filter Year Parameter' datatype='boolean' name='[Calculation_1115766813408124936]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Year] = [Parameters].[Parameter 4] OR [Parameters].[Parameter 4] = &quot;ALL YEARS&quot;' />
            </column>
            <column caption='Neighborhood' datatype='string' name='[Calculation_594756662492823552]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [neigbhorhood_long] = &quot;NO BROADER TERM&quot; THEN UPPER([neighborhood_short]) ELSE [neigbhorhood_long] END' />
            </column>
            <column datatype='real' name='[Dist Downtown]' role='measure' type='quantitative' />
            <column datatype='real' name='[Food Stamps]' role='measure' type='quantitative' />
            <column datatype='real' name='[Four Year College]' role='measure' type='quantitative' />
            <column caption='Indicator 0' datatype='real' name='[Indicator 1 (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent POC&quot; THEN (1-AVG([White alone]))&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Own&quot; THEN AVG([Own])&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Rent&quot; THEN AVG([Rent]) &#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Asian&quot; THEN AVG([Asian alone]) &#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Black&quot; THEN AVG([Black or African American alone])&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent White&quot; THEN AVG([White alone]) &#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Food Stamps&quot; THEN AVG([Food Stamps]) &#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Four Year College&quot; THEN AVG([Four Year College]) &#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Median Household Income&quot; THEN AVG([Med_Hh_Income]) &#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Per Capita Income&quot; THEN AVG([Pc_income]) &#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Population&quot; THEN AVG([Population]) &#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Dist Downtown&quot; THEN AVG([Dist Downtown])&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Sales Price&quot; THEN AVG([AveSalePrice])&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Sales Volume&quot; THEN AVG([ParcelCount])&#13;&#10;END' />
            </column>
            <column caption='Indicator 0 Bin' datatype='real' name='[Indicator 1 Bin (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Indicator2 Parameter (copy)] = &quot;Dist Downtown&quot; THEN ROUND([Indicator 1 (copy 2)],1)&#13;&#10;&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &gt; 0.95 AND [Indicator 1 (copy 2)] &lt;= 1.0 THEN .95&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &gt; 0.90 AND [Indicator 1 (copy 2)] &lt;= .95 THEN .90&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &gt; 0.85 AND [Indicator 1 (copy 2)] &lt;= .90 THEN .85&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &gt; 0.80 AND [Indicator 1 (copy 2)] &lt;= .85 THEN .80&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &gt; 0.75 AND [Indicator 1 (copy 2)] &lt;= .80 THEN .75&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &gt; 0.70 AND [Indicator 1 (copy 2)] &lt;= .75 THEN .70&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &gt; 0.65 AND [Indicator 1 (copy 2)] &lt;= .70 THEN .65&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &gt; 0.60 AND [Indicator 1 (copy 2)] &lt;= .65 THEN .60&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &gt; 0.55 AND [Indicator 1 (copy 2)] &lt;= .60 THEN .55&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &gt; 0.50 AND [Indicator 1 (copy 2)] &lt;= .55 THEN .50&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &gt; 0.45 AND [Indicator 1 (copy 2)] &lt;= .50 THEN .45&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &gt; 0.40 AND [Indicator 1 (copy 2)] &lt;= .45 THEN .40&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &gt; 0.35 AND [Indicator 1 (copy 2)] &lt;= .40 THEN .35&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &gt; 0.30 AND [Indicator 1 (copy 2)] &lt;= .35 THEN .30&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &gt; 0.25 AND [Indicator 1 (copy 2)] &lt;= .30 THEN .25&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &gt; 0.20 AND [Indicator 1 (copy 2)] &lt;= .25 THEN .20&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &gt; 0.15 AND [Indicator 1 (copy 2)] &lt;= .20 THEN .15&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &gt; 0.10 AND [Indicator 1 (copy 2)] &lt;= .15 THEN .10&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &gt; 0.05 AND [Indicator 1 (copy 2)] &lt;= .10 THEN .05&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &gt; 0.00 AND [Indicator 1 (copy 2)] &lt;= .05 THEN .00&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &lt; 5000 THEN ROUND([Indicator 1 (copy 2)]/100,0)*100&#13;&#10;ELSE ROUND([Indicator 1 (copy 2)]/10000,0)*10000&#13;&#10;END' />
            </column>
            <column caption='Indicator0Text' datatype='string' name='[Indicator1Text (copy 2)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Indicator2 Parameter (copy)] = &quot;Dist Downtown&quot; THEN STR(ROUND([Indicator 1 (copy 2)],1)) + &quot; Miles&quot; // Distance&#13;&#10;&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &lt;= 1 THEN STR(ROUND([Indicator 1 (copy 2)]*100,0)) + &quot;%&quot; // Percentage&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &lt;= 3000 THEN STR(ROUND([Indicator 1 (copy 2)],0))  // Population&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &gt; 3000 THEN &quot;$ &quot; +  STR(ROUND([Indicator 1 (copy 2)]/1000)) + &quot;,000&quot; // Currency&#13;&#10;END' />
            </column>
            <column caption='Med Hh Income' datatype='real' name='[Med_Hh_Income]' role='measure' type='quantitative' />
            <column datatype='real' name='[Own]' role='measure' type='quantitative' />
            <column datatype='real' name='[ParcelCount]' role='measure' type='quantitative' />
            <column caption='Pc income' datatype='real' name='[Pc_income]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Rent]' role='measure' type='quantitative' />
            <column datatype='real' name='[White alone]' role='measure' type='quantitative' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column caption='Council District' datatype='string' name='[council_district]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;SCC1&quot;' value='D1' />
                <alias key='&quot;SCC2&quot;' value='D2' />
                <alias key='&quot;SCC3&quot;' value='D3' />
                <alias key='&quot;SCC4&quot;' value='D4' />
                <alias key='&quot;SCC5&quot;' value='D5' />
                <alias key='&quot;SCC6&quot;' value='D6' />
                <alias key='&quot;SCC7&quot;' value='D7' />
              </aliases>
            </column>
            <column-instance column='[Blockgroup]' derivation='CountD' name='[ctd:Blockgroup:qk]' pivot='key' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column caption='Neigbhorhood Long' datatype='string' name='[neigbhorhood_long]' role='dimension' type='nominal' />
            <column caption='Neighborhood Short' datatype='string' name='[neighborhood_short]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1115766813350019075]' derivation='None' name='[none:Calculation_1115766813350019075:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1115766813408124936]' derivation='None' name='[none:Calculation_1115766813408124936:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Indicator 1 Bin (copy 2)]' derivation='User' name='[usr:Indicator 1 Bin (copy 2):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Indicator1Text (copy 2)]' derivation='User' name='[usr:Indicator1Text (copy 2):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Blockgroup)]'>
            <groupfilter function='level-members' level='[Blockgroup]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Council District)]'>
            <groupfilter function='level-members' level='[council_district]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Neigbhorhood Long)]'>
            <groupfilter function='level-members' level='[neigbhorhood_long]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Neighborhood)]'>
            <groupfilter function='level-members' level='[Calculation_594756662492823552]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813350019075:nk]'>
            <groupfilter function='member' level='[none:Calculation_1115766813350019075:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813408124936:nk]'>
            <groupfilter function='member' level='[none:Calculation_1115766813408124936:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813350019075:nk]</column>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813408124936:nk]</column>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Neigbhorhood Long)]</column>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Council District)]</column>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Blockgroup)]</column>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Neighborhood)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[ctd:Blockgroup:qk]' scope='rows' value='' />
            <format attr='subtitle' class='0' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[ctd:Blockgroup:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[ctd:Blockgroup:qk]' scope='rows' value='true' />
            <format attr='display' class='0' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[ctd:Blockgroup:qk]' scope='rows' value='false' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='tick-color' scope='rows' value='#00000000' />
            <format attr='title' class='0' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator 1 Bin (copy 2):qk]' scope='cols' value='' />
            <format attr='subtitle' class='0' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator 1 Bin (copy 2):qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator 1 Bin (copy 2):qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' data-class='total' scope='rows' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' scope='rows' value='none' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:location:nk]' />
              <tooltip column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator1Text (copy 2):nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Location:&#9;</run>
                <run bold='true'>&lt;[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:location:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>&lt;[Parameters].[Indicator2 Parameter (copy)]&gt;:&#9;&lt;[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator1Text (copy 2):nk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.64767956733703613' />
                <format attr='mark-color' value='#492f92' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.004akfr0ztvque1dvtnym0ol9g6i].[ctd:Blockgroup:qk]</rows>
        <cols>[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator 1 Bin (copy 2):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='SliceAnnual'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#555555' fontname='Tableau Medium' fontsize='12'>  Trend</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Demographics' name='federated.004akfr0ztvque1dvtnym0ol9g6i' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Indicator0 Parameter' datatype='string' name='[Indicator2 Parameter (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Percent Food Stamps&quot;'>
              <calculation class='tableau' formula='&quot;Percent Food Stamps&quot;' />
            </column>
            <column caption='Geocode Parameter' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Block Group&quot;'>
              <calculation class='tableau' formula='&quot;Block Group&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.004akfr0ztvque1dvtnym0ol9g6i'>
            <column datatype='real' name='[Asian alone]' role='measure' type='quantitative' />
            <column datatype='real' name='[AveSalePrice]' role='measure' type='quantitative' />
            <column datatype='real' name='[Black or African American alone]' role='measure' type='quantitative' />
            <column datatype='string' name='[Blockgroup]' role='dimension' type='nominal' />
            <column caption='Filter Council District' datatype='boolean' name='[Calculation_1115766813350019075]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[council_district] != &quot;None&quot;' />
            </column>
            <column caption='Neighborhood' datatype='string' name='[Calculation_594756662492823552]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [neigbhorhood_long] = &quot;NO BROADER TERM&quot; THEN UPPER([neighborhood_short]) ELSE [neigbhorhood_long] END' />
            </column>
            <column datatype='real' name='[Dist Downtown]' role='measure' type='quantitative' />
            <column datatype='real' name='[Food Stamps]' role='measure' type='quantitative' />
            <column datatype='real' name='[Four Year College]' role='measure' type='quantitative' />
            <column caption='Indicator 0' datatype='real' name='[Indicator 1 (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent POC&quot; THEN (1-AVG([White alone]))&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Own&quot; THEN AVG([Own])&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Rent&quot; THEN AVG([Rent]) &#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Asian&quot; THEN AVG([Asian alone]) &#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Black&quot; THEN AVG([Black or African American alone])&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent White&quot; THEN AVG([White alone]) &#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Food Stamps&quot; THEN AVG([Food Stamps]) &#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Four Year College&quot; THEN AVG([Four Year College]) &#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Median Household Income&quot; THEN AVG([Med_Hh_Income]) &#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Per Capita Income&quot; THEN AVG([Pc_income]) &#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Population&quot; THEN AVG([Population]) &#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Dist Downtown&quot; THEN AVG([Dist Downtown])&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Sales Price&quot; THEN AVG([AveSalePrice])&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Sales Volume&quot; THEN AVG([ParcelCount])&#13;&#10;END' />
            </column>
            <column caption='Geocode' datatype='string' name='[Indicator 1 (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 2] = &quot;Council District&quot; THEN [council_district]&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &quot;Neighborhood Long&quot; THEN [neigbhorhood_long]&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &quot;Neighborhood Short&quot; THEN [neighborhood_short]&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &quot;Zip Code&quot; THEN [zipcode]&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &quot;Urban Village&quot; THEN [urban_village]&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &quot;Block Group&quot; THEN [location]&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &quot;CITYWIDE&quot; THEN &quot;Seattle&quot;&#13;&#10;ELSE &quot;None&quot; END' />
            </column>
            <column caption='Indicator0Text' datatype='string' name='[Indicator1Text (copy 2)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Indicator2 Parameter (copy)] = &quot;Dist Downtown&quot; THEN STR(ROUND([Indicator 1 (copy 2)],1)) + &quot; Miles&quot; // Distance&#13;&#10;&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &lt;= 1 THEN STR(ROUND([Indicator 1 (copy 2)]*100,0)) + &quot;%&quot; // Percentage&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &lt;= 3000 THEN STR(ROUND([Indicator 1 (copy 2)],0))  // Population&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &gt; 3000 THEN &quot;$ &quot; +  STR(ROUND([Indicator 1 (copy 2)]/1000)) + &quot;,000&quot; // Currency&#13;&#10;END' />
            </column>
            <column caption='Med Hh Income' datatype='real' name='[Med_Hh_Income]' role='measure' type='quantitative' />
            <column datatype='real' name='[Own]' role='measure' type='quantitative' />
            <column datatype='real' name='[ParcelCount]' role='measure' type='quantitative' />
            <column caption='Pc income' datatype='real' name='[Pc_income]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Rent]' role='measure' type='quantitative' />
            <column datatype='real' name='[White alone]' role='measure' type='quantitative' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column caption='Council District' datatype='string' name='[council_district]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;SCC1&quot;' value='D1' />
                <alias key='&quot;SCC2&quot;' value='D2' />
                <alias key='&quot;SCC3&quot;' value='D3' />
                <alias key='&quot;SCC4&quot;' value='D4' />
                <alias key='&quot;SCC5&quot;' value='D5' />
                <alias key='&quot;SCC6&quot;' value='D6' />
                <alias key='&quot;SCC7&quot;' value='D7' />
              </aliases>
            </column>
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column caption='Neigbhorhood Long' datatype='string' name='[neigbhorhood_long]' role='dimension' type='nominal' />
            <column caption='Neighborhood Short' datatype='string' name='[neighborhood_short]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1115766813350019075]' derivation='None' name='[none:Calculation_1115766813350019075:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:nk]' pivot='key' type='nominal' />
            <column caption='Urban Village' datatype='string' name='[urban_village]' role='dimension' type='nominal' />
            <column-instance column='[Indicator 1 (copy 2)]' derivation='User' name='[usr:Indicator 1 (copy 2):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Indicator1Text (copy 2)]' derivation='User' name='[usr:Indicator1Text (copy 2):nk]' pivot='key' type='nominal' />
            <column caption='Zipcode' datatype='string' datatype-customized='true' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Blockgroup)]'>
            <groupfilter function='level-members' level='[Blockgroup]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Council District)]'>
            <groupfilter function='level-members' level='[council_district]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Geocode)]'>
            <groupfilter function='level-members' level='[Indicator 1 (copy)]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Neigbhorhood Long)]'>
            <groupfilter function='level-members' level='[neigbhorhood_long]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Neighborhood)]'>
            <groupfilter function='level-members' level='[Calculation_594756662492823552]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813350019075:nk]'>
            <groupfilter function='member' level='[none:Calculation_1115766813350019075:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813350019075:nk]</column>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Geocode)]</column>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Neigbhorhood Long)]</column>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Council District)]</column>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Location)]</column>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Blockgroup)]</column>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Neighborhood)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator 1 (copy 2):qk]' scope='rows' value='false' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='tick-color' scope='cols' value='#00000000' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='tick-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Year:nk]' value='64' />
            <format attr='font-weight' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator1Text (copy 2):nk]' value='normal' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Year:nk]' field-type='nominal' max-size='1' min-size='0.222683' type='catsize' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' scope='cols' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator1Text (copy 2):nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'>&lt;[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Year:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Average:&#9;</run>
                <run bold='true'>&lt;[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator 1 (copy 2):qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>&lt;[Parameters].[Indicator2 Parameter (copy)]&gt;:&#9;</run>
                <run bold='true'>&lt;[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator1Text (copy 2):nk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run fontname='Tableau Medium' fontsize='10'>&lt;</run>
                <run fontname='Tableau Medium' fontsize='10'>[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator1Text (copy 2):nk]</run>
                <run fontname='Tableau Medium' fontsize='10'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1' />
                <format attr='mark-color' value='#492f92' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator 1 (copy 2):qk]</rows>
        <cols>[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Year:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='SliceAvg'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#555555' fontname='Tableau Medium' fontsize='12'>Average</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Demographics' name='federated.004akfr0ztvque1dvtnym0ol9g6i' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Indicator0 Parameter' datatype='string' name='[Indicator2 Parameter (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Percent Food Stamps&quot;'>
              <calculation class='tableau' formula='&quot;Percent Food Stamps&quot;' />
            </column>
            <column caption='Year Parameter' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;ALL YEARS&quot;'>
              <calculation class='tableau' formula='&quot;ALL YEARS&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.004akfr0ztvque1dvtnym0ol9g6i'>
            <column datatype='real' name='[Asian alone]' role='measure' type='quantitative' />
            <column datatype='real' name='[AveSalePrice]' role='measure' type='quantitative' />
            <column datatype='real' name='[Black or African American alone]' role='measure' type='quantitative' />
            <column datatype='string' name='[Blockgroup]' role='dimension' type='nominal' />
            <column caption='Filter Year Parameter' datatype='boolean' name='[Calculation_1115766813408124936]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Year] = [Parameters].[Parameter 4] OR [Parameters].[Parameter 4] = &quot;ALL YEARS&quot;' />
            </column>
            <column caption='Neighborhood' datatype='string' name='[Calculation_594756662492823552]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [neigbhorhood_long] = &quot;NO BROADER TERM&quot; THEN UPPER([neighborhood_short]) ELSE [neigbhorhood_long] END' />
            </column>
            <column datatype='real' name='[Dist Downtown]' role='measure' type='quantitative' />
            <column datatype='real' name='[Food Stamps]' role='measure' type='quantitative' />
            <column datatype='real' name='[Four Year College]' role='measure' type='quantitative' />
            <column caption='Indicator 0' datatype='real' name='[Indicator 1 (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent POC&quot; THEN (1-AVG([White alone]))&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Own&quot; THEN AVG([Own])&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Rent&quot; THEN AVG([Rent]) &#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Asian&quot; THEN AVG([Asian alone]) &#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Black&quot; THEN AVG([Black or African American alone])&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent White&quot; THEN AVG([White alone]) &#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Food Stamps&quot; THEN AVG([Food Stamps]) &#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Four Year College&quot; THEN AVG([Four Year College]) &#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Median Household Income&quot; THEN AVG([Med_Hh_Income]) &#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Per Capita Income&quot; THEN AVG([Pc_income]) &#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Population&quot; THEN AVG([Population]) &#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Dist Downtown&quot; THEN AVG([Dist Downtown])&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Sales Price&quot; THEN AVG([AveSalePrice])&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Sales Volume&quot; THEN AVG([ParcelCount])&#13;&#10;END' />
            </column>
            <column caption='Indicator0Text' datatype='string' name='[Indicator1Text (copy 2)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Indicator2 Parameter (copy)] = &quot;Dist Downtown&quot; THEN STR(ROUND([Indicator 1 (copy 2)],1)) + &quot; Miles&quot; // Distance&#13;&#10;&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &lt;= 1 THEN STR(ROUND([Indicator 1 (copy 2)]*100,0)) + &quot;%&quot; // Percentage&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &lt;= 3000 THEN STR(ROUND([Indicator 1 (copy 2)],0))  // Population&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &gt; 3000 THEN &quot;$ &quot; +  STR(ROUND([Indicator 1 (copy 2)]/1000)) + &quot;,000&quot; // Currency&#13;&#10;END' />
            </column>
            <column caption='Med Hh Income' datatype='real' name='[Med_Hh_Income]' role='measure' type='quantitative' />
            <column datatype='real' name='[Own]' role='measure' type='quantitative' />
            <column datatype='real' name='[ParcelCount]' role='measure' type='quantitative' />
            <column caption='Pc income' datatype='real' name='[Pc_income]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Rent]' role='measure' type='quantitative' />
            <column datatype='real' name='[White alone]' role='measure' type='quantitative' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column caption='Council District' datatype='string' name='[council_district]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;SCC1&quot;' value='D1' />
                <alias key='&quot;SCC2&quot;' value='D2' />
                <alias key='&quot;SCC3&quot;' value='D3' />
                <alias key='&quot;SCC4&quot;' value='D4' />
                <alias key='&quot;SCC5&quot;' value='D5' />
                <alias key='&quot;SCC6&quot;' value='D6' />
                <alias key='&quot;SCC7&quot;' value='D7' />
              </aliases>
            </column>
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column caption='Neigbhorhood Long' datatype='string' name='[neigbhorhood_long]' role='dimension' type='nominal' />
            <column caption='Neighborhood Short' datatype='string' name='[neighborhood_short]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1115766813408124936]' derivation='None' name='[none:Calculation_1115766813408124936:nk]' pivot='key' type='nominal' />
            <column-instance column='[Indicator1Text (copy 2)]' derivation='User' name='[usr:Indicator1Text (copy 2):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Blockgroup)]'>
            <groupfilter function='level-members' level='[Blockgroup]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Council District)]'>
            <groupfilter function='level-members' level='[council_district]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Neigbhorhood Long)]'>
            <groupfilter function='level-members' level='[neigbhorhood_long]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Neighborhood)]'>
            <groupfilter function='level-members' level='[Calculation_594756662492823552]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813408124936:nk]'>
            <groupfilter function='member' level='[none:Calculation_1115766813408124936:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Council District)]</column>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Neigbhorhood Long)]</column>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813408124936:nk]</column>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Location)]</column>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Blockgroup)]</column>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Neighborhood)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-family' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator1Text (copy 2):nk]' value='Tableau Bold' />
            <format attr='text-align' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator1Text (copy 2):nk]' value='center' />
            <format attr='vertical-align' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator1Text (copy 2):nk]' value='center' />
            <format attr='font-size' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator1Text (copy 2):nk]' value='18' />
            <format attr='color' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator1Text (copy 2):nk]' value='#492f92' />
            <format attr='height' value='32' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='border-style' value='solid' />
            <format attr='background-color' value='#d4d4d4' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator1Text (copy 2):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='SliceDistrict'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#000000' fontname='Tableau Medium' fontsize='12'>By Council District</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Demographics' name='federated.004akfr0ztvque1dvtnym0ol9g6i' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Indicator0 Parameter' datatype='string' name='[Indicator2 Parameter (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Percent Food Stamps&quot;'>
              <calculation class='tableau' formula='&quot;Percent Food Stamps&quot;' />
            </column>
            <column caption='Year Parameter' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;ALL YEARS&quot;'>
              <calculation class='tableau' formula='&quot;ALL YEARS&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.004akfr0ztvque1dvtnym0ol9g6i'>
            <column datatype='real' name='[Asian alone]' role='measure' type='quantitative' />
            <column datatype='real' name='[AveSalePrice]' role='measure' type='quantitative' />
            <column datatype='real' name='[Black or African American alone]' role='measure' type='quantitative' />
            <column datatype='string' name='[Blockgroup]' role='dimension' type='nominal' />
            <column caption='Filter Council District' datatype='boolean' name='[Calculation_1115766813350019075]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[council_district] != &quot;None&quot;' />
            </column>
            <column caption='Filter Year Parameter' datatype='boolean' name='[Calculation_1115766813408124936]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Year] = [Parameters].[Parameter 4] OR [Parameters].[Parameter 4] = &quot;ALL YEARS&quot;' />
            </column>
            <column caption='Neighborhood' datatype='string' name='[Calculation_594756662492823552]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [neigbhorhood_long] = &quot;NO BROADER TERM&quot; THEN UPPER([neighborhood_short]) ELSE [neigbhorhood_long] END' />
            </column>
            <column datatype='real' name='[Dist Downtown]' role='measure' type='quantitative' />
            <column datatype='real' name='[Food Stamps]' role='measure' type='quantitative' />
            <column datatype='real' name='[Four Year College]' role='measure' type='quantitative' />
            <column caption='Indicator 0' datatype='real' name='[Indicator 1 (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent POC&quot; THEN (1-AVG([White alone]))&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Own&quot; THEN AVG([Own])&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Rent&quot; THEN AVG([Rent]) &#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Asian&quot; THEN AVG([Asian alone]) &#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Black&quot; THEN AVG([Black or African American alone])&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent White&quot; THEN AVG([White alone]) &#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Food Stamps&quot; THEN AVG([Food Stamps]) &#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Four Year College&quot; THEN AVG([Four Year College]) &#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Median Household Income&quot; THEN AVG([Med_Hh_Income]) &#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Per Capita Income&quot; THEN AVG([Pc_income]) &#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Population&quot; THEN AVG([Population]) &#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Dist Downtown&quot; THEN AVG([Dist Downtown])&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Sales Price&quot; THEN AVG([AveSalePrice])&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Sales Volume&quot; THEN AVG([ParcelCount])&#13;&#10;END' />
            </column>
            <column caption='Indicator0Text' datatype='string' name='[Indicator1Text (copy 2)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Indicator2 Parameter (copy)] = &quot;Dist Downtown&quot; THEN STR(ROUND([Indicator 1 (copy 2)],1)) + &quot; Miles&quot; // Distance&#13;&#10;&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &lt;= 1 THEN STR(ROUND([Indicator 1 (copy 2)]*100,0)) + &quot;%&quot; // Percentage&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &lt;= 3000 THEN STR(ROUND([Indicator 1 (copy 2)],0))  // Population&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &gt; 3000 THEN &quot;$ &quot; +  STR(ROUND([Indicator 1 (copy 2)]/1000)) + &quot;,000&quot; // Currency&#13;&#10;END' />
            </column>
            <column caption='Med Hh Income' datatype='real' name='[Med_Hh_Income]' role='measure' type='quantitative' />
            <column datatype='real' name='[Own]' role='measure' type='quantitative' />
            <column datatype='real' name='[ParcelCount]' role='measure' type='quantitative' />
            <column caption='Pc income' datatype='real' name='[Pc_income]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Rent]' role='measure' type='quantitative' />
            <column datatype='real' name='[White alone]' role='measure' type='quantitative' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column caption='Council District' datatype='string' name='[council_district]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;SCC1&quot;' value='D1' />
                <alias key='&quot;SCC2&quot;' value='D2' />
                <alias key='&quot;SCC3&quot;' value='D3' />
                <alias key='&quot;SCC4&quot;' value='D4' />
                <alias key='&quot;SCC5&quot;' value='D5' />
                <alias key='&quot;SCC6&quot;' value='D6' />
                <alias key='&quot;SCC7&quot;' value='D7' />
              </aliases>
            </column>
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column caption='Neigbhorhood Long' datatype='string' name='[neigbhorhood_long]' role='dimension' type='nominal' />
            <column caption='Neighborhood Short' datatype='string' name='[neighborhood_short]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1115766813350019075]' derivation='None' name='[none:Calculation_1115766813350019075:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1115766813408124936]' derivation='None' name='[none:Calculation_1115766813408124936:nk]' pivot='key' type='nominal' />
            <column-instance column='[council_district]' derivation='None' name='[none:council_district:nk]' pivot='key' type='nominal' />
            <column-instance column='[Indicator 1 (copy 2)]' derivation='User' name='[usr:Indicator 1 (copy 2):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Indicator1Text (copy 2)]' derivation='User' name='[usr:Indicator1Text (copy 2):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Blockgroup)]'>
            <groupfilter function='level-members' level='[Blockgroup]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Neigbhorhood Long)]'>
            <groupfilter function='level-members' level='[neigbhorhood_long]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Neighborhood)]'>
            <groupfilter function='level-members' level='[Calculation_594756662492823552]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813350019075:nk]'>
            <groupfilter function='member' level='[none:Calculation_1115766813350019075:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813408124936:nk]'>
            <groupfilter function='member' level='[none:Calculation_1115766813408124936:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813408124936:nk]</column>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813350019075:nk]</column>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Neigbhorhood Long)]</column>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Location)]</column>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Blockgroup)]</column>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Neighborhood)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator 1 (copy 2):qk]' scope='cols' value='false' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='tick-color' scope='rows' value='#00000000' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='17' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' scope='rows' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator1Text (copy 2):nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Council District:&#9;</run>
                <run bold='true'>&lt;[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:council_district:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Average:&#9;</run>
                <run bold='true'>&lt;[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator 1 (copy 2):qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>&lt;[Parameters].[Indicator2 Parameter (copy)]&gt;t:&#9;</run>
                <run bold='true'>&lt;[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator1Text (copy 2):nk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#492f92' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:council_district:nk]</rows>
        <cols>[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator 1 (copy 2):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='SliceMed'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#555555' fontname='Tableau Medium' fontsize='12'>Median</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Demographics' name='federated.004akfr0ztvque1dvtnym0ol9g6i' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Indicator0 Parameter' datatype='string' name='[Indicator2 Parameter (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Percent Food Stamps&quot;'>
              <calculation class='tableau' formula='&quot;Percent Food Stamps&quot;' />
            </column>
            <column caption='Year Parameter' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;ALL YEARS&quot;'>
              <calculation class='tableau' formula='&quot;ALL YEARS&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.004akfr0ztvque1dvtnym0ol9g6i'>
            <column datatype='real' name='[Asian alone]' role='measure' type='quantitative' />
            <column datatype='real' name='[AveSalePrice]' role='measure' type='quantitative' />
            <column datatype='real' name='[Black or African American alone]' role='measure' type='quantitative' />
            <column datatype='string' name='[Blockgroup]' role='dimension' type='nominal' />
            <column caption='Filter Year Parameter' datatype='boolean' name='[Calculation_1115766813408124936]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Year] = [Parameters].[Parameter 4] OR [Parameters].[Parameter 4] = &quot;ALL YEARS&quot;' />
            </column>
            <column caption='Neighborhood' datatype='string' name='[Calculation_594756662492823552]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [neigbhorhood_long] = &quot;NO BROADER TERM&quot; THEN UPPER([neighborhood_short]) ELSE [neigbhorhood_long] END' />
            </column>
            <column datatype='real' name='[Dist Downtown]' role='measure' type='quantitative' />
            <column datatype='real' name='[Food Stamps]' role='measure' type='quantitative' />
            <column datatype='real' name='[Four Year College]' role='measure' type='quantitative' />
            <column caption='Indicator 0 NonAgg' datatype='real' name='[Indicator 0 (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent POC&quot; THEN 1-[White alone]&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Own&quot; THEN [Own]&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Rent&quot; THEN [Rent]&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Asian&quot; THEN [Asian alone]&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Black&quot; THEN [Black or African American alone]&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent White&quot; THEN [White alone]&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Food Stamps&quot; THEN [Food Stamps]&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Four Year College&quot; THEN [Four Year College]&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Median Household Income&quot; THEN [Med_Hh_Income]&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Per Capita Income&quot; THEN [Pc_income]&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Population&quot; THEN [Population]&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Dist Downtown&quot; THEN [Dist Downtown]&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Sales Price&quot; THEN [AveSalePrice]&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Sales Volume&quot; THEN [ParcelCount]&#13;&#10;END' />
            </column>
            <column caption='Indicator0TextMed' datatype='string' name='[Indicator0Text (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Indicator2 Parameter (copy)] = &quot;Dist Downtown&quot; THEN  STR(ROUND(MEDIAN([Indicator 0 (copy)]),1)) + &quot; Miles&quot; // Distance&#13;&#10;&#13;&#10;ELSEIF MEDIAN([Indicator 0 (copy)]) &lt;= 1 THEN STR(ROUND(MEDIAN([Indicator 0 (copy)])*100,0)) + &quot;%&quot; // Percentage&#13;&#10;ELSEIF MEDIAN([Indicator 0 (copy)]) &lt;= 3000 THEN STR(ROUND(MEDIAN([Indicator 0 (copy)]),0))  // Population&#13;&#10;ELSEIF MEDIAN([Indicator 0 (copy)]) &gt; 3000 THEN &quot;$ &quot; +  STR(ROUND(MEDIAN([Indicator 0 (copy)])/1000)) + &quot;,000&quot; // Currency&#13;&#10;END' />
            </column>
            <column caption='Med Hh Income' datatype='real' name='[Med_Hh_Income]' role='measure' type='quantitative' />
            <column datatype='real' name='[Own]' role='measure' type='quantitative' />
            <column datatype='real' name='[ParcelCount]' role='measure' type='quantitative' />
            <column caption='Pc income' datatype='real' name='[Pc_income]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Rent]' role='measure' type='quantitative' />
            <column datatype='real' name='[White alone]' role='measure' type='quantitative' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column caption='Council District' datatype='string' name='[council_district]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;SCC1&quot;' value='D1' />
                <alias key='&quot;SCC2&quot;' value='D2' />
                <alias key='&quot;SCC3&quot;' value='D3' />
                <alias key='&quot;SCC4&quot;' value='D4' />
                <alias key='&quot;SCC5&quot;' value='D5' />
                <alias key='&quot;SCC6&quot;' value='D6' />
                <alias key='&quot;SCC7&quot;' value='D7' />
              </aliases>
            </column>
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column caption='Neigbhorhood Long' datatype='string' name='[neigbhorhood_long]' role='dimension' type='nominal' />
            <column caption='Neighborhood Short' datatype='string' name='[neighborhood_short]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1115766813408124936]' derivation='None' name='[none:Calculation_1115766813408124936:nk]' pivot='key' type='nominal' />
            <column-instance column='[Indicator0Text (copy)]' derivation='User' name='[usr:Indicator0Text (copy):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Blockgroup)]'>
            <groupfilter function='level-members' level='[Blockgroup]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Council District)]'>
            <groupfilter function='level-members' level='[council_district]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Neigbhorhood Long)]'>
            <groupfilter function='level-members' level='[neigbhorhood_long]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Neighborhood)]'>
            <groupfilter function='level-members' level='[Calculation_594756662492823552]' user:ui-action-filter='[Action6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813408124936:nk]'>
            <groupfilter function='member' level='[none:Calculation_1115766813408124936:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813408124936:nk]</column>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Neigbhorhood Long)]</column>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Council District)]</column>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Location)]</column>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Blockgroup)]</column>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[Action (Neighborhood)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-family' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator0Text (copy):nk]' value='Tableau Bold' />
            <format attr='text-align' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator0Text (copy):nk]' value='center' />
            <format attr='vertical-align' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator0Text (copy):nk]' value='center' />
            <format attr='font-size' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator0Text (copy):nk]' value='18' />
            <format attr='color' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator0Text (copy):nk]' value='#492f92' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator0Text (copy):nk]' value='Tableau Bold' />
            <format attr='font-weight' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator0Text (copy):nk]' value='bold' />
            <format attr='font-size' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator0Text (copy):nk]' value='20' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator0Text (copy):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='SliceNeigborhood'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#555555' fontname='Tableau Medium' fontsize='12'>By Neighborhood</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Demographics' name='federated.004akfr0ztvque1dvtnym0ol9g6i' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Indicator0 Parameter' datatype='string' name='[Indicator2 Parameter (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Percent Food Stamps&quot;'>
              <calculation class='tableau' formula='&quot;Percent Food Stamps&quot;' />
            </column>
            <column caption='Year Parameter' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;ALL YEARS&quot;'>
              <calculation class='tableau' formula='&quot;ALL YEARS&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.004akfr0ztvque1dvtnym0ol9g6i'>
            <column datatype='real' name='[Asian alone]' role='measure' type='quantitative' />
            <column datatype='real' name='[AveSalePrice]' role='measure' type='quantitative' />
            <column datatype='real' name='[Black or African American alone]' role='measure' type='quantitative' />
            <column caption='Filter Council District' datatype='boolean' name='[Calculation_1115766813350019075]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[council_district] != &quot;None&quot;' />
            </column>
            <column caption='Filter Year Parameter' datatype='boolean' name='[Calculation_1115766813408124936]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Year] = [Parameters].[Parameter 4] OR [Parameters].[Parameter 4] = &quot;ALL YEARS&quot;' />
            </column>
            <column caption='Neighborhood' datatype='string' name='[Calculation_594756662492823552]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [neigbhorhood_long] = &quot;NO BROADER TERM&quot; THEN UPPER([neighborhood_short]) ELSE [neigbhorhood_long] END' />
            </column>
            <column datatype='real' name='[Dist Downtown]' role='measure' type='quantitative' />
            <column datatype='real' name='[Food Stamps]' role='measure' type='quantitative' />
            <column datatype='real' name='[Four Year College]' role='measure' type='quantitative' />
            <column caption='Indicator 0' datatype='real' name='[Indicator 1 (copy 2)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent POC&quot; THEN (1-AVG([White alone]))&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Own&quot; THEN AVG([Own])&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Rent&quot; THEN AVG([Rent]) &#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Asian&quot; THEN AVG([Asian alone]) &#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Black&quot; THEN AVG([Black or African American alone])&#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent White&quot; THEN AVG([White alone]) &#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Food Stamps&quot; THEN AVG([Food Stamps]) &#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Percent Four Year College&quot; THEN AVG([Four Year College]) &#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Median Household Income&quot; THEN AVG([Med_Hh_Income]) &#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Per Capita Income&quot; THEN AVG([Pc_income]) &#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Population&quot; THEN AVG([Population]) &#13;&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Dist Downtown&quot; THEN AVG([Dist Downtown])&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Sales Price&quot; THEN AVG([AveSalePrice])&#10;ELSEIF [Parameters].[Indicator2 Parameter (copy)] = &quot;Sales Volume&quot; THEN AVG([ParcelCount])&#13;&#10;END' />
            </column>
            <column caption='Indicator0Text' datatype='string' name='[Indicator1Text (copy 2)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Indicator2 Parameter (copy)] = &quot;Dist Downtown&quot; THEN STR(ROUND([Indicator 1 (copy 2)],1)) + &quot; Miles&quot; // Distance&#13;&#10;&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &lt;= 1 THEN STR(ROUND([Indicator 1 (copy 2)]*100,0)) + &quot;%&quot; // Percentage&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &lt;= 3000 THEN STR(ROUND([Indicator 1 (copy 2)],0))  // Population&#13;&#10;ELSEIF [Indicator 1 (copy 2)] &gt; 3000 THEN &quot;$ &quot; +  STR(ROUND([Indicator 1 (copy 2)]/1000)) + &quot;,000&quot; // Currency&#13;&#10;END' />
            </column>
            <column caption='Med Hh Income' datatype='real' name='[Med_Hh_Income]' role='measure' type='quantitative' />
            <column datatype='real' name='[Own]' role='measure' type='quantitative' />
            <column datatype='real' name='[ParcelCount]' role='measure' type='quantitative' />
            <column caption='Pc income' datatype='real' name='[Pc_income]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='real' name='[Rent]' role='measure' type='quantitative' />
            <column datatype='real' name='[White alone]' role='measure' type='quantitative' />
            <column datatype='string' name='[Year]' role='dimension' type='nominal' />
            <column caption='Council District' datatype='string' name='[council_district]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;SCC1&quot;' value='D1' />
                <alias key='&quot;SCC2&quot;' value='D2' />
                <alias key='&quot;SCC3&quot;' value='D3' />
                <alias key='&quot;SCC4&quot;' value='D4' />
                <alias key='&quot;SCC5&quot;' value='D5' />
                <alias key='&quot;SCC6&quot;' value='D6' />
                <alias key='&quot;SCC7&quot;' value='D7' />
              </aliases>
            </column>
            <column caption='Neigbhorhood Long' datatype='string' name='[neigbhorhood_long]' role='dimension' type='nominal' />
            <column caption='Neighborhood Short' datatype='string' name='[neighborhood_short]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1115766813350019075]' derivation='None' name='[none:Calculation_1115766813350019075:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1115766813408124936]' derivation='None' name='[none:Calculation_1115766813408124936:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_594756662492823552]' derivation='None' name='[none:Calculation_594756662492823552:nk]' pivot='key' type='nominal' />
            <column-instance column='[Indicator 1 (copy 2)]' derivation='User' name='[usr:Indicator 1 (copy 2):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Indicator1Text (copy 2)]' derivation='User' name='[usr:Indicator1Text (copy 2):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813350019075:nk]'>
            <groupfilter function='member' level='[none:Calculation_1115766813350019075:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813408124936:nk]'>
            <groupfilter function='member' level='[none:Calculation_1115766813408124936:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_594756662492823552:nk]' direction='DESC' using='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator 1 (copy 2):qk]' />
          <slices>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813408124936:nk]</column>
            <column>[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813350019075:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator 1 (copy 2):qk]' scope='cols' value='false' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='tick-color' scope='rows' value='#00000000' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='17' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator 1 (copy 2):qk]' num-steps='7' palette='red_green_gold_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='total' scope='rows' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator1Text (copy 2):nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Neigbhorhood Long:&#9;</run>
                <run bold='true'>&lt;[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_594756662492823552:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Average:&#9;</run>
                <run bold='true'>&lt;[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator 1 (copy 2):qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>&lt;[Parameters].[Indicator2 Parameter (copy)]&gt;:&#9;</run>
                <run bold='true'>&lt;[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator1Text (copy 2):nk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#492f92' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_594756662492823552:nk]</rows>
        <cols>[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator 1 (copy 2):qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='COMPARE'>
      <style />
      <size maxheight='800' maxwidth='1200' minheight='800' minwidth='1200' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='42' param='horz' type='layout-flow' w='98666' x='667' y='1000'>
            <zone h='98000' id='38' param='horz' type='layout-flow' w='98666' x='667' y='1000'>
              <zone h='98000' id='36' type='layout-basic' w='98666' x='667' y='1000'>
                <zone h='98000' id='23' param='horz' type='layout-flow' w='95998' x='667' y='1000'>
                  <zone h='98000' id='21' type='layout-basic' w='95998' x='667' y='1000'>
                    <zone h='4001' id='12' type='empty' w='95998' x='667' y='94999'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='53500' id='9' name='BlockGroup' w='38958' x='57707' y='8000'>
                      <layout-cache minwidth='155' type-h='fixed' type-w='scalable' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone custom-title='true' h='7000' id='11' mode='compact' param='[Parameters].[Indicator1 Parameter (copy)]' type='paramctrl' w='16945' x='79720' y='1000'>
                      <formatted-text>
                        <run>Y - Axis</run>
                      </formatted-text>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone custom-title='true' h='7000' id='10' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='14837' x='64883' y='1000'>
                      <formatted-text>
                        <run>X - Axis</run>
                      </formatted-text>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='7000' id='14' type='empty' w='2595' x='46071' y='1000'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='5124' id='16' type='empty' w='38958' x='57707' y='61500'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='22374' id='17' name='CompareHistogram2' show-title='false' w='17040' x='40667' y='72625'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='22374' id='15' name='CompareHistogram1' show-title='false' w='16747' x='13083' y='72625'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone forceUpdate='true' h='7000' id='20' type='text' w='24331' x='667' y='1000'>
                      <formatted-text>
                        <run fontalignment='1' fontcolor='#000000' fontname='Tableau Bold' fontsize='22'>COMPARE</run>
                      </formatted-text>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone custom-title='true' h='7000' id='25' mode='compact' param='[Parameters].[Parameter 3]' type='paramctrl' w='14406' x='31665' y='1000'>
                      <formatted-text>
                        <run>Council District</run>
                      </formatted-text>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone custom-title='true' h='7000' id='24' mode='compact' param='[Parameters].[Parameter 4]' type='paramctrl' w='16217' x='48666' y='1000'>
                      <formatted-text>
                        <run>Year</run>
                      </formatted-text>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='22374' id='26' name='CompareSummary1' show-title='false' w='12416' x='667' y='72625'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='22374' id='28' name='CompareSummary2' show-title='false' w='10837' x='29830' y='72625'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='8375' id='31' name='Compare Header' show-title='false' w='34500' x='62165' y='66624'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='20000' id='32' name='Compare Narrative' show-title='false' w='34500' x='62165' y='74999'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='28375' id='34' type='empty' w='4458' x='57707' y='66624'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='7000' id='39' type='empty' w='6667' x='24998' y='1000'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='64625' id='40' name='CompareSlice1' show-title='false' w='29163' x='667' y='8000'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='64625' id='44' name='CompareSlice2' show-title='false' w='27877' x='29830' y='8000'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
                <zone h='98000' id='33' type='empty' w='2668' x='96665' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='3750' id='29' name='Label1' show-title='false' w='21833' x='69167' y='61250' />
        <zone h='48250' id='30' name='Label2' show-title='false' w='2500' x='58000' y='15750' />
      </zones>
    </dashboard>
    <dashboard name='EXPLORE TRENDS'>
      <style />
      <size maxheight='800' maxwidth='1200' minheight='800' minwidth='1200' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='32' param='horz' type='layout-flow' w='98666' x='667' y='1000'>
            <zone h='98000' id='30' type='layout-basic' w='98666' x='667' y='1000'>
              <zone h='98000' id='23' param='horz' type='layout-flow' w='96000' x='3333' y='1000'>
                <zone h='98000' id='21' type='layout-basic' w='96000' x='3333' y='1000'>
                  <zone h='88500' id='5' param='horz' type='layout-flow' w='96000' x='3333' y='10500'>
                    <zone h='88500' id='3' type='layout-basic' w='96000' x='3333' y='10500'>
                      <zone h='80250' id='7' name='Explore Bubble' w='93407' x='3333' y='10500'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='21124' id='8' leg-item-layout='grid' name='Explore Bubble' pane-specification-id='5' param='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Year:nk]' type='size' w='0' x='99333' y='77876'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='67376' id='25' type='empty' w='2593' x='96740' y='10500' />
                      <zone h='8250' id='26' type='empty' w='93407' x='3333' y='90750'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                    </zone>
                  </zone>
                  <zone h='9500' id='12' type='empty' w='4542' x='46792' y='1000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone forceUpdate='true' h='9500' id='13' type='text' w='23675' x='3333' y='1000'>
                    <formatted-text>
                      <run fontcolor='#000000' fontname='Tableau Bold' fontsize='22'>EXPLORE TRENDS</run>
                    </formatted-text>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone custom-title='true' h='9500' id='10' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='12083' x='51334' y='1000'>
                    <formatted-text>
                      <run>X - Axis</run>
                    </formatted-text>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone custom-title='true' h='9500' id='11' mode='compact' param='[Parameters].[Indicator1 Parameter (copy)]' type='paramctrl' w='11583' x='63417' y='1000'>
                    <formatted-text>
                      <run>Y - Axis</run>
                    </formatted-text>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone custom-title='true' h='9500' id='14' mode='compact' param='[Parameters].[Parameter 2]' type='paramctrl' w='12163' x='84577' y='1000'>
                    <formatted-text>
                      <run fontalignment='1'>Geography</run>
                    </formatted-text>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='9500' id='16' type='empty' w='2667' x='75000' y='1000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='9500' id='27' type='empty' w='2593' x='96740' y='1000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='9500' id='28' type='text' w='19784' x='27008' y='1000'>
                    <formatted-text>
                      <run>Select two metrics and a geography to compare them over time.</run>
                    </formatted-text>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone fixed-size='160' h='9500' id='31' is-fixed='true' param='vert' type='layout-flow' w='6910' x='77667' y='1000'>
                    <zone custom-title='true' h='6500' id='33' mode='compact' param='[Parameters].[Parameter 4]' type='paramctrl' w='6910' x='77667' y='1000'>
                      <formatted-text>
                        <run>Year</run>
                      </formatted-text>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
              </zone>
              <zone h='98000' id='29' type='empty' w='2666' x='667' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='7875' id='17' name='Label1' show-title='false' w='29333' x='58750' y='86000' />
        <zone h='15625' id='18' name='Label2' show-title='false' w='10250' x='1333' y='34875' />
      </zones>
    </dashboard>
    <dashboard name='SLICE'>
      <style />
      <size maxheight='800' maxwidth='1200' minheight='800' minwidth='1200' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='5' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='29' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='26' param='horz' type='layout-flow' w='100000' x='0' y='0'>
              <zone h='100000' id='24' type='layout-basic' w='100000' x='0' y='0'>
                <zone h='85846' id='9' param='horz' type='layout-flow' w='93610' x='3000' y='9654'>
                  <zone h='85846' id='7' type='layout-basic' w='93610' x='3000' y='9654'>
                    <zone h='19945' id='14' name='Slice Histogram' w='18151' x='61580' y='17032'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='54747' id='17' name='SliceDistrict' w='24072' x='72538' y='40753'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='54747' id='19' name='SliceNeigborhood' w='27969' x='41833' y='40753'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='54747' id='21' type='empty' w='2736' x='69802' y='40753'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='3776' id='22' type='empty' w='54777' x='41833' y='36977'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='19945' id='23' name='SliceAnnual' w='14287' x='82323' y='17032'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='19945' id='27' type='empty' w='2592' x='79731' y='17032'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='10093' id='31' name='SliceAvg' w='17155' x='41833' y='17032'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='9852' id='32' name='SliceMed' w='17155' x='41833' y='27125'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='19945' id='33' type='empty' w='2592' x='58988' y='17032'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='7378' id='38' name='Label0' show-title='false' w='54777' x='41833' y='9654'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='85846' id='42' name='MapSlice' show-title='false' w='38833' x='3000' y='9654'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
                <zone h='9154' id='13' type='empty' w='30834' x='33333' y='500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone custom-title='true' h='9154' id='18' mode='compact' param='[Parameters].[Indicator2 Parameter (copy)]' type='paramctrl' w='17110' x='79500' y='500'>
                  <formatted-text>
                    <run>Metric</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='99000' id='20' type='empty' w='3057' x='96610' y='500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone fixed-size='160' h='9154' id='28' is-fixed='true' param='vert' type='layout-flow' w='15333' x='64167' y='500'>
                  <zone custom-title='true' fixed-size='195' h='9154' id='30' is-fixed='true' mode='compact' param='[Parameters].[Parameter 4]' type='paramctrl' w='15333' x='64167' y='500'>
                    <formatted-text>
                      <run>Year</run>
                    </formatted-text>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone forceUpdate='true' h='9154' id='37' type='text' w='12250' x='333' y='500'>
                  <formatted-text>
                    <run fontalignment='1' fontcolor='#000000' fontname='Tableau Bold' fontsize='22'>SLICE</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='9154' id='39' type='text' w='20750' x='12583' y='500'>
                  <formatted-text>
                    <run>Select a metric, interact with the charts, and explore the data below.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='4000' id='40' type='empty' w='96277' x='333' y='95500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='85846' id='41' type='empty' w='2667' x='333' y='9654'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
        </zone>
        <zone custom-title='true' h='5875' id='43' mode='compact' param='[Parameters].[Parameter 2]' type='paramctrl' w='9000' x='3083' y='9750'>
          <formatted-text>
            <run>Geography</run>
          </formatted-text>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='SLICE'>
      <viewpoints>
        <viewpoint name='Label0'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Indicator 2 Label (copy):nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Percent Own&quot;</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='MapSlice'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Slice Histogram'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='SliceAnnual'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='SliceAvg'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='SliceDistrict' />
        <viewpoint name='SliceMed'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='SliceNeigborhood' />
      </viewpoints>
      <active id='13' />
    </window>
    <window class='dashboard' name='COMPARE'>
      <viewpoints>
        <viewpoint name='BlockGroup'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Compare Header'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Compare Narrative'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='CompareHistogram1'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='CompareHistogram2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='CompareSlice1'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='CompareSlice2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='CompareSummary1'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='CompareSummary2'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Label1'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Label2'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='20' />
    </window>
    <window class='dashboard' name='EXPLORE TRENDS'>
      <viewpoints>
        <viewpoint name='Explore Bubble'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Label1'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Label2'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='7' />
    </window>
    <window class='worksheet' hidden='true' name='BlockGroup'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Indicator1 Parameter (copy)]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Filter Year Parameter (copy):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Compare Header'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' hidden='true' name='Compare Narrative'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' hidden='true' name='CompareHistogram1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Indicator1 Parameter (copy)]' type='parameter' />
            <card pane-specification-id='1' param='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_1115766813349150721:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Filter Year Parameter (copy):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='CompareHistogram2'>
      <cards>
        <edge name='left'>
          <strip size='216'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Indicator1 Parameter (copy)]' type='parameter' />
            <card pane-specification-id='1' param='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_1115766813349253122:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813408124936:nk]</field>
            <field>[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Filter Year Parameter (copy):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='CompareSlice1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_1115766813349150721:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813408124936:nk]</field>
            <field>[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Filter Year Parameter (copy):nk]</field>
            <field>[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_1115766813349150721:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='CompareSlice2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_1115766813349253122:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813408124936:nk]</field>
            <field>[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Filter Year Parameter (copy):nk]</field>
            <field>[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Calculation_1115766813349253122:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='CompareSummary1'>
      <cards>
        <edge name='left'>
          <strip size='245'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Filter Year Parameter (copy):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='CompareSummary2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813408124936:nk]</field>
            <field>[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Filter Year Parameter (copy):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Explore Bubble'>
      <cards>
        <edge name='left'>
          <strip size='184'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Indicator1 Parameter (copy)]' type='parameter' />
            <card pane-specification-id='5' param='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Year:nk]' type='size' />
            <card pane-specification-id='6' param='[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Indicator 1 (copy):nk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' hidden='true' name='Label0'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' hidden='true' name='Label1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' hidden='true' name='Label2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' hidden='true' name='MapSlice'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.004akfr0ztvque1dvtnym0ol9g6i].[usr:Indicator 1 (copy 2):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_1115766813408124936:nk]</field>
            <field>[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Indicator 1 (copy):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Slice Histogram'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Indicator1 Parameter (copy)]' type='parameter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' hidden='true' name='SliceAnnual'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Indicator1 Parameter (copy)]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' hidden='true' name='SliceAvg'>
      <cards>
        <edge name='left'>
          <strip size='242'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' hidden='true' name='SliceDistrict'>
      <cards>
        <edge name='left'>
          <strip size='212'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Indicator1 Parameter (copy)]' type='parameter' />
            <card mode='compact' param='[Parameters].[Indicator2 Parameter (copy)]' type='parameter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' hidden='true' name='SliceMed'>
      <cards>
        <edge name='left'>
          <strip size='290'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' hidden='true' name='SliceNeigborhood'>
      <cards>
        <edge name='left'>
          <strip size='212'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Indicator1 Parameter (copy)]' type='parameter' />
            <card mode='compact' param='[Parameters].[Indicator2 Parameter (copy)]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.004akfr0ztvque1dvtnym0ol9g6i].[none:Calculation_594756662492823552:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='COMPARE' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='EXPLORE TRENDS' width='384'>
      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
      EAQhQP1/8kiyCVvqCfQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='SLICE' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
